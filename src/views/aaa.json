[
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTAyNDcyMzYw",
    "number": 305,
    "title": "@ashkan18 : add stella to the open source projects list",
    "author": { "login": "cavvia", "__typename": "User" },
    "additions": 7,
    "deletions": 0,
    "createdAt": "2017-01-20T14:32:14Z",
    "closedAt": "2017-01-20T14:46:47Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/305",
    "body": "* Adds our new search library, [artsy/stella](https://github.com/artsy/stella), to the open source projects list.",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "cavvia", "__typename": "User" },
        { "login": "ashkan18", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "🎉 ",
          "createdAt": "2017-01-20T14:46:41Z",
          "author": { "login": "ashkan18", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTAzMjAxMjM4",
    "number": 306,
    "title": "@ashfurrow => EOY animations",
    "author": { "login": "eessex", "__typename": "User" },
    "additions": 82,
    "deletions": 0,
    "createdAt": "2017-01-25T20:51:28Z",
    "closedAt": "2017-02-01T19:45:06Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/306",
    "body": "First draft of blogpost looking at strategies for the EOY animations",
    "reactions": {
      "totalCount": 3,
      "nodes": [
        {
          "user": { "login": "craigspaeth", "__typename": "User" },
          "__typename": "Reaction"
        },
        {
          "user": { "login": "ashfurrow", "__typename": "User" },
          "__typename": "Reaction"
        },
        {
          "user": { "login": "kanaabe", "__typename": "User" },
          "__typename": "Reaction"
        }
      ],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 5,
      "nodes": [
        { "login": "eessex", "__typename": "User" },
        { "login": "dblock", "__typename": "User" },
        { "login": "kanaabe", "__typename": "User" },
        { "login": "ashfurrow", "__typename": "User" },
        { "login": "orta", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 3,
      "nodes": [
        {
          "body": "This is great. I would open the end of the post to the entire series (maybe links to 2015?) and maybe throw in \"UBS\" somewhere for the record?",
          "createdAt": "2017-01-25T22:40:18Z",
          "author": { "login": "dblock", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": ":clap: Great work! I think it could be nice to wrap up with a paragraph with your thoughts on the project, what you found most interesting, or what you might change in the future!\r\n\r\nThese are the other projects we've worked on with UBS:\r\nVenice Biennale 2015: https://www.artsy.net/venice-biennale-2015\r\n2015 Year in Art: https://www.artsy.net/2015-year-in-art\r\nVideo Series:\r\nhttps://www.artsy.net/article/artsy-editorial-uncovering-the-surprisingly-secret-world-of-art-auctions",
          "createdAt": "2017-01-31T22:37:10Z",
          "author": { "login": "kanaabe", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "I've created a new GIF for the post. Happy to tweak so let me know what you think. I removed the background to make it a more manageable filesize, and made it the same width as it will be presented on the blog:\r\n\r\n![2017-01-31 18_06_09](https://cloud.githubusercontent.com/assets/498212/22488440/00dbac6c-e7e0-11e6-8f36-b5d2c045a4c7.gif)",
          "createdAt": "2017-01-31T23:07:56Z",
          "author": { "login": "ashfurrow", "__typename": "User" },
          "reactions": {
            "totalCount": 2,
            "nodes": [
              {
                "user": { "login": "dblock", "__typename": "User" },
                "__typename": "Reaction"
              },
              {
                "user": { "login": "eessex", "__typename": "User" },
                "__typename": "Reaction"
              }
            ],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 7,
      "nodes": [
        {
          "comments": {
            "totalCount": 6,
            "nodes": [
              {
                "body": "might make sense to embed a GIF of you scrolling? ",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-01-25T21:00:59Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Yep!  Have been discussing a few graphics with @ashfurrow and will definitely include a few",
                "author": { "login": "eessex", "__typename": "User" },
                "createdAt": "2017-01-25T21:03:13Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Here's a rough one:\r\n\r\n![2017-01-25 17_17_39](https://cloud.githubusercontent.com/assets/498212/22311611/3583ce12-e322-11e6-8f36-b9f74e637fae.gif)\r\n\r\nHard to put into GIF form since the background is a bunch of movies 😅 I'm going to try again on a more powerful computer.",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-25T21:58:38Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Yeah, I think this does cover the idea pretty well",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-01-25T22:01:57Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "note that GIF ^ doesn't loop FWIW",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-01-25T22:12:01Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Good thing I saved the GIFBrewery file :smile: ",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-25T22:15:53Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Here's the diagram I have to describe this:\r\n\r\n![diagram](https://cloud.githubusercontent.com/assets/498212/22311357/27e1a41a-e321-11e6-95ac-760542b34389.png)\r\n\r\nHappy to make adjustments on this 👍",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-25T22:10:34Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> features are and annual\r\n\r\nare _an_ annual",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T18:13:07Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Great explanation of the requirements, it could use another sentence describing how this was challenging.",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T18:14:12Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Could be worth linking to the Waypoints GitHub page and maybe even a part of force that uses it.",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T18:15:40Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> were a know element--\r\n\r\n\"were a known element --\"",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T18:16:04Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "I would consider adding a short paragraph that links to the code on force so people can explore the whole implementation.",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T18:17:21Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        }
      ],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTAzMjI4NDYy",
    "number": 307,
    "title": "On Mapping Galleries + Inquiries",
    "author": { "login": "orta", "__typename": "User" },
    "additions": 309,
    "deletions": 0,
    "createdAt": "2017-01-25T23:43:09Z",
    "closedAt": "2017-01-26T22:44:59Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/307",
    "body": "Covering the process WRT on the maps, got a meetup to attend tho",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "orta", "__typename": "User" },
        { "login": "ArtsyOpenSource", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "\n### Proselint found issues\n\n#### [_posts/2017-01-25-mashing-maps.markdown](/artsy/artsy.github.io/tree/stats/_posts/2017-01-25-mashing-maps.markdown)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n42 | Redundancy. Use 'same' instead of 'exact same'. | warning\n58 | Use diacritical marks in 'façade'. | warning\n81 | Substitute 'damn' every time you're inclined to write 'very;' your editor will delete it and the writing will be just as it should be. Found once elsewhere. | warning\n\n\n### Spell Checker found issues\n\n#### [_posts/2017-01-25-mashing-maps.markdown](/artsy/artsy.github.io/tree/stats/_posts/2017-01-25-mashing-maps.markdown)\n\nLine | Typo |\n| --- | ------ |\n9 | comes from that team though, **2** years ago our Director of Pro | \n9 | f Product Engineering, [Craig **Spaeth][craig]** created a [static-sit | \n13 | ompanies, quick hacks for one **offs** that are opened 2 years later | \n13 | for one offs that are opened **2** years later by someone comple | \n19 | ## Coming back to an **npm** app 2 years later | \n19 | ## Coming back to an npm app **2** years later | \n46 | ence only comes from the last **6** months, and it's a different | \n54 | * [**artsy/force][force]** - our website | \n55 | * [**artsy/microgravity][microgravity]** - | \n56 | * [**artsy/positron][positron]** - our edi | \n73 | . When I got stuck I visited [**js.coffee](http://js2.coffee)** to see ho | \n77 | ffect of Artsy converting [to **microservices][services]** I needed three sep | \n77 | over two types of databases: **MongoDB** and Postgres. | \n77 | pes of databases: MongoDB and **Postgres.** | \n79 | ### **MongoDB** | \n81 | **MongoDB** is a NoSQL document store dat | \n81 | MongoDB is a **NoSQL** document store database, this | \n81 | app][mongodbapp], and I [use **RoboMongo][robomongo]** to inspect it. | \n100 | ### **Postgres** | \n102 | bases I needed access to were **Postgres** databases, I don't know much | \n102 | know much about databases but **Postgres** seems to be [Heroku's favouri | \n102 | ses but Postgres seems to be [**Heroku's** favourite database][heroku_po | \n102 | n app][postgres_app] and use [**Postico]** to inspect it. | \n106 | tabases, they come down as a [**pg_dump** file][**pg_dump**] file whic | \n106 | bases, they come down as a [pg**_dump** file][pg**_dump**] file which you | \n106 | can replicate locally in your **postgres** using a command like: | \n149 | t to pull things from another **databasea,** in theory this code could ha | \n200 | ## **D3** + Datamaps | \n200 | ## D3 + **Datamaps** | \n202 | tions of something you know. [**D3** is not one of these][d3]. **D3** | \n202 | [**D3** is not one of these][d3]. **D3** is a system for making data-b | \n202 | documents. Learning how to do **D3** properly takes time and a per | \n202 | ckily we had a Lunch & Learn [**2** weeks ago on D3][lunch_d3] an | \n202 | Lunch & Learn [2 weeks ago on **D3][lunch_d3]** and now I am a tot | \n206 | I had a few thousand **datapoints** with a `date_created` attribu | \n206 | uld last, there probably is a **D3** API for this kind of thing bu | \n208 | We use the _amazing_ library [**Datamaps][datamaps]** to show the globe | \n208 | globe and handle a lot of the **lat/long** -> pixel mathematics. It | \n208 | mathematics. It is built in a **D3** mindset, so with each interva | \n208 | e locations or arcs to it and **D3/Datamaps** will derive the diff | \n208 | ocations or arcs to it and D3/**Datamaps** will derive the difference be | \n237 | et, in a way that is actually **renderable** without killing the browser's | \n239 | ## Code **Cleanup** + Docs | \n241 | spent most of my time inside [**artsy/partner-map][partner-maps]** bu | \n249 | ys worth throwing in an extra **2-3** hours at the end of a hack pr | \n\n\n<p align=\"right\" data-meta=\"generated_by_danger\">\n  Generated by :no_entry_sign: <a href=\"http://danger.systems/\">danger</a>\n</p>\n",
          "createdAt": "2017-01-25T23:44:34Z",
          "author": { "login": "ArtsyOpenSource", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTAzNTYwNjI3",
    "number": 308,
    "title": "correct project year typo",
    "author": { "login": "erikdstock", "__typename": "User" },
    "additions": 1,
    "deletions": 1,
    "createdAt": "2017-01-27T20:26:22Z",
    "closedAt": "2017-01-27T21:05:47Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/308",
    "body": "Artsy 2013 & 2014 have same description.",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "erikdstock", "__typename": "User" },
        { "login": "orta", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "Yeah!",
          "createdAt": "2017-01-27T21:05:44Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 1,
            "nodes": [
              {
                "user": { "login": "erikdstock", "__typename": "User" },
                "__typename": "Reaction"
              }
            ],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTAzNzg2ODQy",
    "number": 309,
    "title": "Post-mortem: Swift at Artsy + Exploration: Front-end JS in 2017",
    "author": { "login": "orta", "__typename": "User" },
    "additions": 1000,
    "deletions": 34,
    "createdAt": "2017-01-30T17:53:39Z",
    "closedAt": "2017-02-06T17:31:21Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/309",
    "body": "~~This is going to take a while, and I'll keep hammering on it for a good few days in my spare moments. Wanted to get it out so it could have time to breathe, and so that we can get some interesting feedback~~ \r\n\r\nOK that took 2 weeks, damn.\r\n\r\nSo, this PR adds 2 blog posts and makes some changes to how Danger does spell-checking (it shares it with VS Code):\r\n\r\n* [JS2017](https://github.com/artsy/artsy.github.io/pull/309/files#diff-1f972c73be6d31be53b8aaafab09b714) - what/why of the outcomes from Relational / Systems theory\r\n\r\n* [Post-Mortem: Swift at Artsy](https://github.com/artsy/artsy.github.io/pull/309/files#diff-f9f53f1eb18ac3ff2019d603dee93493) - what pain points were we seeing, how did RN address this?\r\n\r\nBoth of these are too big for the inline diff initially, so you need to hit the expand button.\r\n\r\nIf you want to feel what they're like on the site with the SVGs + images etc: https://cl.ly/1v1a280G251u/posts.zip (note these are now out of date by a few commits )\r\n\r\nAlso, yeah, Danger has a lot to say - I really need to work on that spell checker.",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 6,
      "nodes": [
        { "login": "orta", "__typename": "User" },
        { "login": "ArtsyOpenSource", "__typename": "User" },
        { "login": "alloy", "__typename": "User" },
        { "login": "damassi", "__typename": "User" },
        { "login": "ashfurrow", "__typename": "User" },
        { "login": "lazerwalker", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 8,
      "nodes": [
        {
          "body": "\n### Proselint found issues\n\n#### [_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown](/artsy/artsy.github.io/tree/swift/_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n23 | 'at the end of the day.' is cliché. | warning\n23 | Minimize your use of corporate catchphrases like this one. | warning\n48 | Redundancy. Use 'during' instead of 'during the course of'. | warning\n127 | Minimize your use of corporate catchphrases like this one. | warning\n#### [_posts/2016-01-30-iOS-Junior-Interviews.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-01-30-iOS-Junior-Interviews.markdown)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n80 | 'in regards to'. | warning\n80 | 'in regard to' is the preferred form. | warning\n88 | Hyphenate 'open source community.', a phrasal adjective, as 'open-source community'. | warning\n108 | Use diacritical marks in 'a résumé'. | warning\n199 | Use diacritical marks in 'a résumé'. | warning\n284 | 'hopefully' is a bit of a skunked term — impossible to use without issue. Find some other way to say it. | warning\n311 | 'hopefully' is a bit of a skunked term — impossible to use without issue. Find some other way to say it. | warning\n315 | Use diacritical marks in 'your résumé'. | warning\n338 | 'more than one way to skin a cat.' is a cliché. | warning\n370 | No hyphen is necessary in phrasal adjectives with an adverb ending in -ly. | warning\n385 | Months should be capitalized. 'June' is the preferred form. | warning\n#### [_posts/2016-06-19-graphql-for-mobile.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-19-graphql-for-mobile.markdown)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n58 | More than 30 ppm of exclamations. Keep them under control. | warning\n#### [_posts/2016-06-29-code-spelunking-injection.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-29-code-spelunking-injection.markdown)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n46 | Redundancy. Use 'same' instead of 'exact same'. | warning\n97 | Inconsistent spacing after period (1 vs. 2 spaces). | warning\n#### [_posts/2016-08-15-React-Native-at-Artsy.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-08-15-React-Native-at-Artsy.markdown)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n32 | Substitute 'damn' every time you're inclined to write 'very;' your editor will delete it and the writing will be just as it should be. Found 8 times elsewhere. | warning\n57 | 'in the long run' is a cliché. | warning\n69 | Redundancy. Use 'free' instead of 'for free,'. | warning\n69 | 'for free,' is cliché. | warning\n80 | Redundancy. Use 'details' instead of 'specific details,'. | warning\n99 | 'by no means' is a cliché. | warning\n126 | 'In the long run,' is a cliché. | warning\n134 | Redundancy. Use 'drop' instead of '‘drop down’'. | warning\n144 | 'in the long run' is a cliché. | warning\n186 | 'tip of the iceberg' is a cliché. | warning\n#### [_posts/2016-11-14-JS-Glossary.md](/artsy/artsy.github.io/tree/swift/_posts/2016-11-14-JS-Glossary.md)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n58 | Substitute 'damn' every time you're inclined to write 'very;' your editor will delete it and the writing will be just as it should be. Found 8 times elsewhere. | warning\n183 | Redundancy. Use 'same' instead of 'exact same'. | warning\n206 | Needless variant. 'extendable' is the preferred form. | warning\n581 | Comparison of an uncomparable: 'kind of ideal,' is not comparable. | warning\n#### [_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n#### [_posts/2017-02-05-Retrospective-Swift-at-Artsy.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Retrospective-Swift-at-Artsy.md)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n139 | Redundancy. Use 'free' instead of 'for free'. | warning\n139 | 'for free' is cliché. | warning\n263 | '[wot]' is archaic. | warning\n312 | No hyphen is necessary in phrasal adjectives with an adverb ending in -ly. | warning\n342 | No hyphen is necessary in phrasal adjectives with an adverb ending in -ly. | warning\n345 | Annotation left in text. | warning\n\n\n### Spell Checker found issues\n\n#### [_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown](/artsy/artsy.github.io/tree/swift/_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown)\n\nLine | Typo |\n| --- | ------ |\n18 | ncies as being things in your **Podfile,** but it's a bit more nuanced | \n38 | `xcodebuild` either via Xcode/**AppCode/Vim** as a part of our individu | \n48 | ndexes). The Quality Indexes (**QIs)** are a series of metrics that | \n48 | enerate a single number that [**cocoapods.org](http://cocoapods.org)** uses f | \n48 | rse of a year. Here are a few **QIs** that matter a lot to me: | \n51 | a CHANGELOG and uses internal **appledoc/headerdoc.** | \n51 | OG and uses internal appledoc/**headerdoc.** | \n62 | poline for message passing on **64** bit processors sucks. Relying | \n64 | one involved. Examples being [NAMapKit](https://cocoapods.org/pods/N | \n64 | apods.org/pods/NAMapKit) and [Specta](https://cocoapods.org/pods/S | \n64 | //cocoapods.org/pods/Specta)/[Expecta](https://cocoapods.org/pods/E | \n81 | system similar to CocoaPods' **subspecs** which lets a library consumer | \n83 | **ReactiveCocoa** feels quite similar. In excha | \n85 | * Swizzling **dealloc** on objects in order to do it' | \n85 | cts in order to do it's magic **KVO-unbinding** at runtime. | \n86 | tead you can use their custom **dtrace** instrument. | \n89 | happily made in exchange for **ReactiveCocoa's** well thought out API. Functio | \n93 | pecific task. Something like [ObjectiveSugar](https://cocoapods.org/pods/O | \n99 | One such example has been **ReactiveCocoa.** While they are free to make | \n101 | s such a pleasure. We've sent **PRs,**  helped out on [documentatio | \n105 | rly, but coming back at Swift **2.0** feels good. We just started i | \n107 | d chunk of time over the last **6** months discussing and testing | \n111 | uld we want this in more than **2** apps\" at the moment. This is | \n113 | -sink, we've been supporting [ARAnalytics](https://cocoapods.org/pods/A | \n113 | ods.org/pods/ARAnalytics) for **4** years now and nearly all feat | \n113 | rly all features for the last **3** years have come from external | \n113 | ation up to date takes time. [Moya](https://cocoapods.org/pods/M | \n115 | ok forwards to doing that to [ORStackView](https://cocoapods.org/pods/O | \n115 | when everyone is building for **iOS9+.** | \n119 | in dependency\". The CocoaPods **QIs** can give you a sense of what | \n#### [_posts/2016-01-30-iOS-Junior-Interviews.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-01-30-iOS-Junior-Interviews.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | good explanation is in [this **StackOverflow][1].** | \n20 | ][2]. However, in this [post @**dbgrandi][3]** neatly sums up the lower | \n24 | SON to present some data in a **UITableView.** | \n28 | r a lot of things, and that's **ok.** | \n34 | - [**StackOverflow** jobs][4] | \n38 | - [@**xcodejobs][8]** | \n40 | irst programming job through [**CocoaDev** Jobs][9]. | \n42 | s in the city. In NYC we have **3-4** big iOS meet-ups a month, and | \n42 | , I almost became a full-time **rubyist** because of it. I have quite a | \n44 | Artsy's job postings are on [**AngelList][10]** and [Glassdoor][11] but | \n44 | s are on [AngelList][10] and [**Glassdoor][11]** but the vast majority of | \n44 | nkedIn][13], [Hired][14] and [**weworkremotely][15]** are probably worth a loo | \n56 | These are **15-30** minute informal chats, but fr | \n56 | u'll usually get a yes. Tamar **Nachmany** has some [great, salient poin | \n62 | lived for most of my life (\\~**25** years) about 2 hours train ri | \n62 | of my life (\\~**2**5 years) about **2** hours train ride from Manches | \n64 | ould work out well for mentor/**mentoree.** You'd need the entire compan | \n76 | t's amazing that there is now **1** billion active users a day. I | \n80 | e position first through Orta **Therox,** who spoke highly of Artsy. | \n82 | world, with a thorough mix of **math,** software engineering, and ar | \n82 | in our society, as I did with **500px.** | \n84 | _**10/10._** Extremely on topic. | \n84 | _10/**10._** Extremely on topic. | \n88 | GitHub, have written for the **Teehan+Lax** blog professionally, and | \n96 | _**10/10_** ✔ | \n96 | _10/**10_** ✔ | \n98 | ground, I just graduated from **NYU** with a B.S. in Electrical Eng | \n98 | ust graduated from NYU with a **B.S.** in Electrical Engineering and | \n98 | ary (a home security hardware **startup).** While I do enjoy building h | \n116 | - [**2007][23]** as a part of the WWDC St | \n116 | - [2007][23] as a part of the **WWDC** Student Scholarship. It was s | \n117 | - [**2008][24]** as a graduate applying f | \n118 | - [**2008][25]** as a graduate applying f | \n119 | - [**2010][26]** when applying for jobs o | \n120 | - [**2015][27]** my CV as a part of my U. | \n120 | 15][27] my CV as a part of my **U.S.** VISA process. | \n157 | tions happening over the last **8** years, but the tone of how I | \n159 | onsider my personal web-page [**orta.io][28]** to act as a portfolio, A | \n196 | _More **infö** that I've reviewed and given | \n199 | * [8 **Minute** Guide to Writing a Res | \n204 | you think being a engineer at S**potify** would be a dream job. How do | \n206 | test out the water. Then for S**potify,** you should make sure everyth | \n208 | ompanies have public employee g**et-togethers,** for example at Artsy we have | \n208 | d the curtain. In the case of S**potify,** they host a lot of meet-ups, | \n214 | t IMO is a solid resource is [CameronBanga/iOS-Developer-and-Designer-In | \n230 | e real interviews in the last 2 **years.** | \n234 | Have a Technical Interview at Ma**coscope][43]** - Again, probably a bit | \n240 | nvest probably something like 10 **hours** into you. This is sprea | \n266 | be threading, view controller li**fecycle,** code coupling, dynamic vs st | \n268 | Here's [a long wr**iteup][47],** with a lot of depth (an | \n288 | our interview seems to be the et**tiquette** in the US. I don't recall doi | \n299 | een given an offer. If it's a st**artup,** you might be offered equity. | \n301 | offer much there. But I have re**cieved** [some good][52] advice I'll p | \n309 | own blog. [Jekyll][54] is the de**facto** go-to in that space, but I kn | \n309 | ed using [middleman][55] and [hu**go][56].** Do not use Octopress, v | \n309 | 5] and [hugo][56]. Do not use Oc**topress,** vanilla Jekyll will do you j | \n311 | , talk about code. It took me 4 **years** to hit my first thousan | \n317 | ing to Open Source][61]: [Fix RE**ADMEs][62],** [improve documentation  | \n332 | - Video code-reviews: [Ei**dolon][72]** / [Emergence][73] - On t | \n#### [_posts/2016-06-19-graphql-for-mobile.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-19-graphql-for-mobile.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | e and Runtime_. GraphQL is a [spec](http://facebook.github.io/gr | \n10 | m have as much control as the **backend.** | \n12 | what I've learned in the last **3** months of using it in [Eigen] | \n12 | last 3 months of using it in [Eigen](https://github.com/artsy/eig | \n48 | r data means your app is more **resiliant** to things outside of your con | \n50 | ld actually contain a list of **hrefs** instead of the model data, an | \n54 | singly) open-source, it's at [artsy/metaphysics](https://github.c | \n54 | g against a GraphQL server is **GraphiQL** - an IDE for exploring your A | \n54 | , but I can send you to [Clay **Allsop's](http://clayallsopp.com)** [Gra | \n54 | p's](http://clayallsopp.com) [**GraphQLHub](https://www.graphqlhub.com):** | \n56 | t link in a new window. Press **cmd** + enter to see the results. W | \n58 | ction APIs inside the GraphQL **spec.** | \n70 | eeded to be re-implemented in **3-4** clients. On the native side w | \n78 | tive/) for our flagship app, [Eigen](https://github.com/artsy/eig | \n101 | ors) gave GraphQL a try, and [welcome'd](https://github.com/artsy/met | \n#### [_posts/2016-06-29-code-spelunking-injection.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-29-code-spelunking-injection.markdown)\n\nLine | Typo |\n| --- | ------ |\n27 | take-risks) - the code we are **spelunking** through can feel foreign to m | \n27 | -C, and it's not got tests. [@**Johno1962][johnno1962]** described it to | \n27 | cribed it to me as being like **1997's** Objective-C. The end result o | \n31 | * **InjectionPlugin** - The user facing Xcode plugi | \n32 | * **InjectionLoader** - A Bundle used to skip patch | \n33 | * **iOSBundleTemplate** - A folder to a reference imp | \n34 | * **OSXBundleTemplate** - Same but for OSX Project | \n34 | BundleTemplate - Same but for **OSX** Project | \n42 | * **Recieves** a call to inject. | \n46 | lass][principal_class] in the **info.plist,** this class, `INPluginMenuCon | \n48 | u ( note: [interesting use of **c-structs** here][menu_structs] ) and sta | \n73 | everything went well, then a [**Bonjour][bonjour]** [service][bonjour_s | \n73 | thread and starts a infinite **runloop** checking for new connections | \n73 | nections on the [socket every **0.5** seconds][socket_runloop]. | \n75 | unning][bbrowser_running] in [**Bonjour** Browser][bbrowser]. So, what | \n87 | tarts at `injectSource` [from **INPluginMenuController][inject_source].** | \n91 | ence to the currently running **LLDB** session, the console in the b | \n95 | d, then requests a pause from **LLDB,** allowing the plugin to send | \n103 | for file changes inside your **Xcodeproject.** | \n105 | injection work is done inside **perl** scripts, another new language | \n105 | nd of `injectSource` it runs [**injectSource.pl][injection_source_pl]** with an | \n107 | a lot of ground-work for the **perl** scripts is done inside [commo | \n107 | perl scripts is done inside [**common.pm][common_pm]** - which is a modu | \n109 | setup, maintain and amend an **xcodeproject** that compiles just the class | \n111 | rts out by copying a template **xcodeproject** (either `iOSBundleTemplate` o | \n117 | a reference to the build log **dirs** for the [derived data][derive | \n117 | compiling a single class from **Eigen** looks like][a_build_log] (I'v | \n117 | ly, this is called the learnt **db.** | \n119 | The learnt **db** is used to compile a class to | \n127 | With the `Logs` **dir** being a symlink to the derive | \n133 | or which tells the server the **filepath** of the now compiled `Injectio | \n139 | Alright, back to [the **INPluginClientController][INPluginClientController].** S | \n141 | going on from the high level **thoughout** this [connection setup functi | \n143 | console's info label to that **filepath,** this is the `BundleContents. | \n144 | om a storyboard (not too sure **whats** going on there TBH) | \n144 | too sure whats going on there **TBH)** | \n162 | stand this, we need to grok a **1,200** LOC header file `:D`, it | \n162 | and this, we need to grok a 1,**200** LOC header file `:D`, it has | \n162 | this, we need to grok a 1,200 **LOC** header file `:D`, it has a fe | \n162 | n try work through those, to [**BundleInjection.h][BundleInjection.h].** Interest | \n162 | this file inside your `/tmp/` **dir.** | \n176 | two responsibilities - using **Bonjour** to find the server, and raw s | \n176 | e is nothing unique about the **Bonjour** mutlicast work, so I'm skippi | \n176 | hing unique about the Bonjour **mutlicast** work, so I'm skipping that. O | \n180 | so][param_setup] it sets up [**INParameters** and INColors][tunable] for tu | \n180 | it sets up [INParameters and **INColors][tunable]** for tunable paramet | \n182 | mpt to connect to the server, **5** times. | \n185 | e some][nib_swizzling] of the **UINib** init functions. | \n185 | ][nib_swizzling] of the UINib **init** functions. | \n188 | om there the socket goes into **runloop** mode on it's on thread. | \n190 | #### Client Socket **Runloop** | \n194 | ects, then Re-creates the app **degelate** + view controller hierarchy. | \n198 | te_image] an `NS/UIImage` via **NSData** for Tunable Parameters. | \n215 | * A global **NSNotification** for . | \n219 | of quoting the README that [@**Johno1962][johnno1962]** and I worked on | \n225 | ects that are referred to via **sharedInstance.** If that fails, well, Injecti | \n258 | ibrary. These bundles contain **2** files `Info.plist`, `Injectio | \n258 | ide the bundle that is linked **ar** runtime (and thus dynamically | \n260 | c library info][dl_lib_info] [**struct][dl_struct]** and uses [dladdr] | \n260 | [struct][dl_struct] and uses [**dladdr][dladdr]** to fill the struct, | \n260 | [dladdr][dladdr] to fill the **struct,** based on the function pointe | \n262 | classlist] `__classlist` via [**getsectdatafromheader][getsectdatafromheader]** for t | \n262 | log post][objc_reverse] from [**Zynamics][zynamics].** Injection then lo | \n262 | rary, via the most [intensely **casted][class_references]** line in of | \n264 | es]. If you don't know what a **vtable** is check this [page on Wikipe | \n272 | see if the class's instances **reponds** to `- injected` if it does, i | \n272 | tances of the objects in it's **liveObjects** array. If the array hasn't be | \n274 | Injection has an [**Xprobe][xprobe]-lite** included inside | \n274 | ction has an [Xprobe][xprobe]-**lite** included inside it. This live | \n274 | ded inside it. This lives in [**BundleSweeper.h][BundleSweeper.h].** The quote | \n274 | on above gave the start away, **BundleSweeper** [looks at the app delegate][b | \n274 | elegate][bprobe_seed] ( or a [**Cocos2D** director object][cocos2d]) an | \n274 | and \"reference\" classes e.g [**NSBlock][NSBlock],** [NSData][NSData], | \n274 | sses e.g [NSBlock][NSBlock], [**NSData][NSData],** NSString, NSValue e | \n274 | ][NSBlock], [NSData][NSData], **NSString,** NSValue etc. The `bsweep` fu | \n274 | , [NSData][NSData], NSString, **NSValue** etc. The `bsweep` function ad | \n274 | ot then it loops through the [**IvarList][ivar_list]** and runs `bsweep` | \n278 | l the fancy class an instance **nofications** sorted, there is a good old r | \n278 | what I based my [work on for **Eigen][eigen_injection],** super simp | \n286 | wed a draft of this post to [@**Johno1962][johnno1962]** he reminded me t | \n286 | er read][diamond_reloader] at **120** LOC. However, can't understan | \n286 | ead][diamond_reloader] at 120 **LOC.** However, can't understand th | \n293 | easy to understand without c/**Mach-o** domain knowledge. It's making | \n293 | like Storyboards, Android via **Apportable,** ARC and no-ARC, 32bit vs 64b | \n293 | a Apportable, ARC and no-ARC, **32bit** vs 64bit and iOS vs Mac where | \n293 | ble, ARC and no-ARC, 32bit vs **64bit** and iOS vs Mac where things s | \n295 | As of Xcode **8,** Xcode Plugins are on the way | \n301 | this kind of stuff, follow [@**Johno1962][johnno1962]** on Twitter, he's | \n301 | ohnno1962] on Twitter, he's [@**Injection4Xcode][Injection4Xcode]** - Chris Lat | \n301 | ode][Injection4Xcode] - Chris **Lattner** follows him, so you know it's | \n301 | ome project that is pushing a **boundry** or two. | \n#### [_posts/2016-08-15-React-Native-at-Artsy.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-08-15-React-Native-at-Artsy.markdown)\n\nLine | Typo |\n| --- | ------ |\n28 | application and entirely in [**2** other apps](http://artsy.gith | \n49 | _everywhere_ in no time; **593** packages to be exactly, at th | \n69 | a lot that you would get with **UIKit** for free, e.g. `UICollectionV | \n94 | compose them to make complex **UIs.** | \n116 | once, write anywhere.” is the **neo-cross-platform** slogan deployed by React, whi | \n130 | [flexbox](https://en.wikipedia.org/wik | \n131 | ound classic CSS, I find that **flexbox** is an abstraction that nicely | \n139 | attern is not as ingrained in **UIKit** thus usually leading to more | \n140 | replacements such as [**AsyncDisplayKit](http://asyncdisplaykit.org).** | \n147 | than with your typical native **UIKit-based** | \n151 | it out, unlike e.g. Xcode and **UIKit.** (Granted, you | \n175 | ks with our application-wide [SDWebImage](https://cocoapods.org/pods/S | \n186 | about React Native. Follow [@ArtsyOpenSource](https://twitter.com/ArtsyOpe | \n#### [_posts/2016-11-14-JS-Glossary.md](/artsy/artsy.github.io/tree/swift/_posts/2016-11-14-JS-Glossary.md)\n\nLine | Typo |\n| --- | ------ |\n10 | environment now, and can try **summerize** a lot of topics. This should | \n99 | a much deeper explanation in [**uberVU/react-guide][react-guide]** | \n177 | Yarn is a NPM replacement (**ish)** by Facebook. It's very new. | \n195 | ### **Webpack** | \n197 | an be easy to confuse Babel + **Webpack,** so in simple: | \n200 | * **Webpack** will take source code and mer | \n202 | hey work at different scopes. **Webpack** is mainly a web front-end too | \n250 | hat JavaScript was created in **10** days, which is a cute anecdot | \n250 | ript has evolved for the next **21** years. The JavaScript you wro | \n250 | ars. The JavaScript you wrote **10** years ago would still run, ho | \n256 | JavaScript called ECMAScript **6.** | \n264 | cts. Quite a SemVer jump from **6** to 201**6**. | \n264 | Quite a SemVer jump from 6 to **2016.** | \n270 | [believe starting][stages] at **0,** and working up to 4. 0 Idea, | \n270 | ages] at 0, and working up to **4.** 0 Idea, 1 Proposal, 2 Draft, | \n270 | s] at **0**, and working up to 4. **0** Idea, 1 Proposal, 2 Draft, 3 | \n270 | and working up to 4. 0 Idea, **1** Proposal, 2 Draft, 3 Accepted | \n270 | up to 4. 0 Idea, 1 Proposal, **2** Draft, 3 Accepted and 4 Done. | \n270 | 0 Idea, 1 Proposal, 2 Draft, **3** Accepted and 4 Done. | \n270 | osal, 2 Draft, 3 Accepted and **4** Done. | \n272 | So a ECMAScript Stage **0** feature is going to be really | \n272 | er the number, the longer the **spec** has been discussed, and the m | \n274 | d these improvements are the [**TC39][tc39]** committee, the cool bi | \n297 | packaging JavaScript called [**CommonJS][commonjs].** It was replaced b | \n301 | pt has classes introduced in [**es6](#es6),** this means that inste | \n332 | not an implementation,” and “**favor** object composition over class | \n336 | So, classes - it took **20ish** years before they happened? B | \n338 | Danger I do almost exclusive **OOP** in JavaScript, sometimes the | \n398 | Introduced in ECMAScript **5.1,** it provides a way to [opt-in | \n499 | haracters but having the same **behavior.** | \n501 | , but it's not the only one. [**Rollup][rollup]** is considered the de | \n501 | it is in [babel](#babel) and [**webpack](#babel)** also. | \n563 | r my experiences with [making **PRs][inline-mac]** to VS Code. Type | \n579 | could probably do it in about **2** days using a Babel plugin, th | \n581 | volve further, then help them **stablize** and mature. | \n#### [_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md)\n\nLine | Typo |\n| --- | ------ |\n13 | ers of node, and for the last **4** years the stable stack for th | \n13 | ript + Express + Backbone. In **2016** the mobile team [announced][r | \n15 | parate dev teams for building **Artsy.net** and the corresponding iOS app | \n15 | llector Mobile. By the end of **2016** we decided to merge the teams | \n17 | stack for web/native Artsy in **2017.** | \n25 | Our web stack has been [**ezel.js][ezel]** since 2013, and contin | \n25 | as been [ezel.js][ezel] since **2013,** and continues to be a mature | \n25 | using React and GraphQL with [**muraljs][mural].** However, since the m | \n51 | n VS Code, and tried learning **OCaml** to help out on the [Flow tool | \n65 | er can conform to the GraphQL **spec,** and then clients can make qu | \n86 | ld actually contain a list of **hrefs** instead of the model data, an | \n90 | ive of a native developer [in **2016][mob-graph].** So I'll leave th | \n207 | y's local cache, and then any **un-cached** items are requested from the | \n221 | roject that replaces the NPM [**cli][cli]** client. It's very new, | \n221 | e a fresh re-write of the NPM **cli** would look like. | \n223 | node modules as with the NPM **cli.** | \n246 | change in one source file and **60** tests run from 6 different te | \n246 | ce file and **6**0 tests run from **6** different test suites. Finish | \n272 | , if I changed the background **color** to `blue` from `white`. I get | \n278 | **No **config**** - When we first integrated | \n278 | st integrated Jest, we had no **config.** Now, to make sure that TypeS | \n278 | ns for: Babel, TypeScript and **webpack.** Three of the biggest modern | \n280 | s, useful JSON output, ESLint **linters,** Elegant Mocking tools and na | \n282 | ferent testing frameworks in [**jest-codemods][jest-codemods]** - getting sta | \n282 | 'd also recommend looking at [**wallaby.js][wallaby]** and [vscode-jest][v | \n294 | of this culture came from the **TextMate** and Rails days with the infam | \n294 | ys with the infamous [blog in **15** minutes video][tm-blog]. When | \n296 | and IDEs where you have fully **spec'd** out projects. | \n298 | able to have project specific **setups** is where VS Code really start | \n321 | sound a bit corporate for a ~**25** person dev team, but one chie | \n329 | ound Facebook tech, based on [**three20][three20]** - which I think is | \n329 | ve shown to be really open to **PRs** and discussion, and our work | \n#### [_posts/2017-02-05-Retrospective-Swift-at-Artsy.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Retrospective-Swift-at-Artsy.md)\n\nLine | Typo |\n| --- | ------ |\n14 | Swift became public in June **2014,** by August we had started usi | \n16 | on Apple platforms. It was a **no-brainer** to then build an [appleTV app | \n16 | no-brainer to then build an [**appleTV** app][emergence] in Swift, int | \n16 | wift-support into our key app **Eigen** and built non-trivial parts o | \n18 | with React Native in February **2016,** and by August **2016,** we annou | \n18 | February **2016,** and by August **2016,** we announced that [Artsy mov | \n22 | ct Native][react-n], and our [**1-year** summary][summary]. | \n26 | rew. Building anything inside **Eigen** rarely re-used existing nativ | \n26 | till eventually it would take **2** iOS engineers to build a feat | \n28 | By [March **2015][gave_up],** we gave up trying | \n30 | this?\" Over the course of the **2015** winter break we explored idea | \n36 | [**Eigen][eigen]** is an app where we ta | \n36 | data and mapping it to a UI. [**Eidolon][eidolon]** (our Auctions Kiosk | \n36 | . [Emergence][emergence] is a **trivial-ish** tvOS app which has a few view | \n36 | ][emergence] is a trivial-ish **tvOS** app which has a few view cont | \n40 | **Eigen** is where we worried about how | \n40 | e limited in their scope, but **Eigen** is basically the mobile repre | \n40 | going to have something like **Eigen.** | \n42 | needed to re-think our entire **UIKit** stack for Eigen. Strictly spe | \n42 | nk our entire UIKit stack for **Eigen.** Strictly speaking, Objective | \n46 | In the end, for **Eigen,** we came to the conclusion th | \n51 | hich would have ended up like **Spotify's** ([hub][hub]) or Hyperslo's ([ | \n51 | ike Spotify's ([hub][hub]) or **Hyperslo's** ([Spots][spots]) ). | \n62 | The majority of the team had **5+** years of Cocoa experience an | \n74 | OS apps. From libraries like [**Moya][moya],** to foundational proje | \n76 | . This is what happened with [**Moya][moya].** It's a pattern Baseca | \n76 | [Moya][moya]. It's a pattern **Basecamp** discuss when they [talk about | \n84 | Think of apps with their own **filetypes,** that can control inputs and | \n86 | rking with an API is for most **3rd** party developers it should co | \n88 | peaking, don't have. They use **iCloud,** or CloudKit, or whatever, an | \n88 | n't have. They use iCloud, or **CloudKit,** or whatever, and expect you | \n96 | n. A trivial string change in **Eigen** takes [25 seconds][eigen_25] | \n96 | string change in Eigen takes [**25** seconds][eigen_**25**] to show up | \n98 | single edit in a string takes **25** seconds to see the difference | \n98 | ference in the swift parts of **Eigen** <a href=\"https://t.co/MOPGPEW | \n98 | ref=\"https://t.co/MOPGPEWqxX\">**pic.twitter.com/MOPGPEWqxX</a></p>&mdash;** 💍r | \n98 | o/MOPGPEWqxX\">pic.twitter.com/**MOPGPEWqxX</a></p>&mdash;** 💍rta Therox ( | \n98 | m/MOPGPEWqxX</a></p>&mdash; 💍r**ta** Therox (@or**ta**) <a href=\"https | \n98 | PGPEWqxX</a></p>&mdash; 💍rta T**herox** (@orta) <a href=\"https://twit | \n98 | 778242899821621249\">September 2**0,** 2016</a></blockquote></cente | \n98 | 42899821621249\">September 20, 2**016</a></blockquote></center>** | \n100 | talked to Apple engineers at W**WDC,** the idea was dismissed as \"d | \n102 | me of these problems, and the K**ickstarter** app has probably the closest | \n121 | _S**idenote:_** I found it hard to write th | \n121 | encing a sibling article: [JS 2**017][js-2017].** | \n127 | > References from JS 2**017:** [Relay][relay], [Jest][jest] | \n133 | r Apple first and then for us 3**rd** party devs. Outside influence | \n133 | language is Open Source (and [S**wiftPM][swiftpm])** | \n135 | a common word for it, being [S**herlocked][sherlocked].** The project I'v | \n135 | he project I've worked on for 5 **years,** CocoaPods, had an anno | \n135 | had an announcement of being s**herlocked** in late-2015 - you just have | \n135 | cement of being sherlocked in l**ate-2015** - you just have to deal with | \n137 | n\" dir=\"ltr\">Alfred, Dropbox, S**napchat,** Parse, OpenGL, Objective-C… | \n137 | <br>Quite the body count this W**WDC.</p>&mdash;** Mattt (@mattt) <a | \n137 | y count this WWDC.</p>&mdash; M**attt** (@m**attt**) <a href=\"https://twi | \n137 | this WWDC.</p>&mdash; Mattt (@m**attt)** <a href=\"https://twitter.com | \n137 | atus/473544723118837760\">June 2**,** 2014</a></blockquote> <scrip | \n137 | s/473544723118837760\">June 2, 2**014</a></blockquote>** <script asyn | \n141 | makes it tough for us, as the 3**rd** party community, to build use | \n143 | mpare Jest to either Quick or S**pecta.** Then remember that only Appl | \n145 | > Reference from JS 2**017:** [Jest][jest] | \n157 | rface API (either the DOM, or U**IKit.)** | \n163 | > References from JS 2**017:** [React][react], [Relay][rela | \n165 | running simultaneously as you a**rer** building your application. Im | \n167 | d make your changes. <em>From 2**5** seconds, to less than one</em | \n173 | > Reference from JS 2**017:** [TypeScript][typescript] | \n179 | he dev team. Artsy has around 2**5** developers, the majority of w | \n183 | of the company. For the past 5 **years,** the native mobile proj | \n185 | h the web team. At the end of 2**015,** the Collector Web team intro | \n187 | > Reference from JS 2**017:** [GraphQL][graphql] | \n189 | t a rough prototype ported in 2 **days** work. By working at Reac | \n197 | r skills would continue to be s**iloed.** | \n207 | evel of our application above U**IKit** and we can fork it. All our t | \n209 | no concepts like, _\"We'll use S**teipete's** fork of UIKit for UIPopover r | \n209 | \"We'll use Steipete's fork of U**IKit** for UIPopover rotation fixes\" | \n209 | Steipete's fork of UIKit for U**IPopover** rotation fixes\"_ or _\"My vers | \n213 | > Reference from JS 2**017:** [VS Code][code] | \n215 | much easier to live with the [5**93** dependencies](/blog/2016/08/1 | \n219 | With Swift the language, and S**wiftPM** the package manager, Apple ar | \n219 | ift-pm-slack], Mailing Lists, J**IRA** and Twitter. | \n223 | ks4] _weeks_ during the Swift 2 **->** 3 migration. Having the la | \n223 | _weeks_ during the Swift 2 -> 3 **migration.** Having the languag | \n227 | . So here's the summary after 1 **year.** | \n252 | - Run through the [f**8** app][f**8**] series on  [makeitop | \n252 | the [f8 app][f8] series on  [m**akeitopen.com][f8-open].** | \n259 | - [s**craphold](https://scaphold.io).** | \n260 | - [g**raphcool](https://www.graph.cool/).** | \n\n\n### Spell Checker found issues\n\n#### [_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown](/artsy/artsy.github.io/tree/swift/_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown)\n\nLine | Typo |\n| --- | ------ |\n18 | ncies as being things in your **Podfile,** but it's a bit more nuanced | \n38 | `xcodebuild` either via Xcode/**AppCode/Vim** as a part of our individu | \n48 | ndexes). The Quality Indexes (**QIs)** are a series of metrics that | \n48 | enerate a single number that [**cocoapods.org](http://cocoapods.org)** uses f | \n48 | rse of a year. Here are a few **QIs** that matter a lot to me: | \n51 | a CHANGELOG and uses internal **appledoc/headerdoc.** | \n51 | OG and uses internal appledoc/**headerdoc.** | \n62 | poline for message passing on **64** bit processors sucks. Relying | \n64 | one involved. Examples being [NAMapKit](https://cocoapods.org/pods/N | \n64 | apods.org/pods/NAMapKit) and [Specta](https://cocoapods.org/pods/S | \n64 | //cocoapods.org/pods/Specta)/[Expecta](https://cocoapods.org/pods/E | \n81 | system similar to CocoaPods' **subspecs** which lets a library consumer | \n83 | **ReactiveCocoa** feels quite similar. In excha | \n85 | * Swizzling **dealloc** on objects in order to do it' | \n85 | cts in order to do it's magic **KVO-unbinding** at runtime. | \n86 | tead you can use their custom **dtrace** instrument. | \n89 | happily made in exchange for **ReactiveCocoa's** well thought out API. Functio | \n93 | pecific task. Something like [ObjectiveSugar](https://cocoapods.org/pods/O | \n99 | One such example has been **ReactiveCocoa.** While they are free to make | \n101 | s such a pleasure. We've sent **PRs,**  helped out on [documentatio | \n105 | rly, but coming back at Swift **2.0** feels good. We just started i | \n107 | d chunk of time over the last **6** months discussing and testing | \n111 | uld we want this in more than **2** apps\" at the moment. This is | \n113 | -sink, we've been supporting [ARAnalytics](https://cocoapods.org/pods/A | \n113 | ods.org/pods/ARAnalytics) for **4** years now and nearly all feat | \n113 | rly all features for the last **3** years have come from external | \n113 | ation up to date takes time. [Moya](https://cocoapods.org/pods/M | \n115 | ok forwards to doing that to [ORStackView](https://cocoapods.org/pods/O | \n115 | when everyone is building for **iOS9+.** | \n119 | in dependency\". The CocoaPods **QIs** can give you a sense of what | \n#### [_posts/2016-01-30-iOS-Junior-Interviews.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-01-30-iOS-Junior-Interviews.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | good explanation is in [this **StackOverflow][1].** | \n20 | ][2]. However, in this [post @**dbgrandi][3]** neatly sums up the lower | \n24 | SON to present some data in a **UITableView.** | \n28 | r a lot of things, and that's **ok.** | \n34 | - [**StackOverflow** jobs][4] | \n38 | - [@**xcodejobs][8]** | \n40 | irst programming job through [**CocoaDev** Jobs][9]. | \n42 | s in the city. In NYC we have **3-4** big iOS meet-ups a month, and | \n42 | , I almost became a full-time **rubyist** because of it. I have quite a | \n44 | Artsy's job postings are on [**AngelList][10]** and [Glassdoor][11] but | \n44 | s are on [AngelList][10] and [**Glassdoor][11]** but the vast majority of | \n44 | nkedIn][13], [Hired][14] and [**weworkremotely][15]** are probably worth a loo | \n56 | These are **15-30** minute informal chats, but fr | \n56 | u'll usually get a yes. Tamar **Nachmany** has some [great, salient poin | \n62 | lived for most of my life (\\~**25** years) about 2 hours train ri | \n62 | of my life (\\~**2**5 years) about **2** hours train ride from Manches | \n64 | ould work out well for mentor/**mentoree.** You'd need the entire compan | \n76 | t's amazing that there is now **1** billion active users a day. I | \n80 | e position first through Orta **Therox,** who spoke highly of Artsy. | \n82 | world, with a thorough mix of **math,** software engineering, and ar | \n82 | in our society, as I did with **500px.** | \n84 | _**10/10._** Extremely on topic. | \n84 | _10/**10._** Extremely on topic. | \n88 | GitHub, have written for the **Teehan+Lax** blog professionally, and | \n96 | _**10/10_** ✔ | \n96 | _10/**10_** ✔ | \n98 | ground, I just graduated from **NYU** with a B.S. in Electrical Eng | \n98 | ust graduated from NYU with a **B.S.** in Electrical Engineering and | \n98 | ary (a home security hardware **startup).** While I do enjoy building h | \n116 | - [**2007][23]** as a part of the WWDC St | \n116 | - [2007][23] as a part of the **WWDC** Student Scholarship. It was s | \n117 | - [**2008][24]** as a graduate applying f | \n118 | - [**2008][25]** as a graduate applying f | \n119 | - [**2010][26]** when applying for jobs o | \n120 | - [**2015][27]** my CV as a part of my U. | \n120 | 15][27] my CV as a part of my **U.S.** VISA process. | \n157 | tions happening over the last **8** years, but the tone of how I | \n159 | onsider my personal web-page [**orta.io][28]** to act as a portfolio, A | \n196 | _More **infö** that I've reviewed and given | \n199 | * [8 **Minute** Guide to Writing a Res | \n204 | you think being a engineer at S**potify** would be a dream job. How do | \n206 | test out the water. Then for S**potify,** you should make sure everyth | \n208 | ompanies have public employee g**et-togethers,** for example at Artsy we have | \n208 | d the curtain. In the case of S**potify,** they host a lot of meet-ups, | \n214 | t IMO is a solid resource is [CameronBanga/iOS-Developer-and-Designer-In | \n230 | e real interviews in the last 2 **years.** | \n234 | Have a Technical Interview at Ma**coscope][43]** - Again, probably a bit | \n240 | nvest probably something like 10 **hours** into you. This is sprea | \n266 | be threading, view controller li**fecycle,** code coupling, dynamic vs st | \n268 | Here's [a long wr**iteup][47],** with a lot of depth (an | \n288 | our interview seems to be the et**tiquette** in the US. I don't recall doi | \n299 | een given an offer. If it's a st**artup,** you might be offered equity. | \n301 | offer much there. But I have re**cieved** [some good][52] advice I'll p | \n309 | own blog. [Jekyll][54] is the de**facto** go-to in that space, but I kn | \n309 | ed using [middleman][55] and [hu**go][56].** Do not use Octopress, v | \n309 | 5] and [hugo][56]. Do not use Oc**topress,** vanilla Jekyll will do you j | \n311 | , talk about code. It took me 4 **years** to hit my first thousan | \n317 | ing to Open Source][61]: [Fix RE**ADMEs][62],** [improve documentation  | \n332 | - Video code-reviews: [Ei**dolon][72]** / [Emergence][73] - On t | \n#### [_posts/2016-06-19-graphql-for-mobile.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-19-graphql-for-mobile.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | e and Runtime_. GraphQL is a [spec](http://facebook.github.io/gr | \n10 | m have as much control as the **backend.** | \n12 | what I've learned in the last **3** months of using it in [Eigen] | \n12 | last 3 months of using it in [Eigen](https://github.com/artsy/eig | \n48 | r data means your app is more **resiliant** to things outside of your con | \n50 | ld actually contain a list of **hrefs** instead of the model data, an | \n54 | singly) open-source, it's at [artsy/metaphysics](https://github.c | \n54 | g against a GraphQL server is **GraphiQL** - an IDE for exploring your A | \n54 | , but I can send you to [Clay **Allsop's](http://clayallsopp.com)** [Gra | \n54 | p's](http://clayallsopp.com) [**GraphQLHub](https://www.graphqlhub.com):** | \n56 | t link in a new window. Press **cmd** + enter to see the results. W | \n58 | ction APIs inside the GraphQL **spec.** | \n70 | eeded to be re-implemented in **3-4** clients. On the native side w | \n78 | tive/) for our flagship app, [Eigen](https://github.com/artsy/eig | \n101 | ors) gave GraphQL a try, and [welcome'd](https://github.com/artsy/met | \n#### [_posts/2016-06-29-code-spelunking-injection.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-29-code-spelunking-injection.markdown)\n\nLine | Typo |\n| --- | ------ |\n27 | take-risks) - the code we are **spelunking** through can feel foreign to m | \n27 | -C, and it's not got tests. [@**Johno1962][johnno1962]** described it to | \n27 | cribed it to me as being like **1997's** Objective-C. The end result o | \n31 | * **InjectionPlugin** - The user facing Xcode plugi | \n32 | * **InjectionLoader** - A Bundle used to skip patch | \n33 | * **iOSBundleTemplate** - A folder to a reference imp | \n34 | * **OSXBundleTemplate** - Same but for OSX Project | \n34 | BundleTemplate - Same but for **OSX** Project | \n42 | * **Recieves** a call to inject. | \n46 | lass][principal_class] in the **info.plist,** this class, `INPluginMenuCon | \n48 | u ( note: [interesting use of **c-structs** here][menu_structs] ) and sta | \n73 | everything went well, then a [**Bonjour][bonjour]** [service][bonjour_s | \n73 | thread and starts a infinite **runloop** checking for new connections | \n73 | nections on the [socket every **0.5** seconds][socket_runloop]. | \n75 | unning][bbrowser_running] in [**Bonjour** Browser][bbrowser]. So, what | \n87 | tarts at `injectSource` [from **INPluginMenuController][inject_source].** | \n91 | ence to the currently running **LLDB** session, the console in the b | \n95 | d, then requests a pause from **LLDB,** allowing the plugin to send | \n103 | for file changes inside your **Xcodeproject.** | \n105 | injection work is done inside **perl** scripts, another new language | \n105 | nd of `injectSource` it runs [**injectSource.pl][injection_source_pl]** with an | \n107 | a lot of ground-work for the **perl** scripts is done inside [commo | \n107 | perl scripts is done inside [**common.pm][common_pm]** - which is a modu | \n109 | setup, maintain and amend an **xcodeproject** that compiles just the class | \n111 | rts out by copying a template **xcodeproject** (either `iOSBundleTemplate` o | \n117 | a reference to the build log **dirs** for the [derived data][derive | \n117 | compiling a single class from **Eigen** looks like][a_build_log] (I'v | \n117 | ly, this is called the learnt **db.** | \n119 | The learnt **db** is used to compile a class to | \n127 | With the `Logs` **dir** being a symlink to the derive | \n133 | or which tells the server the **filepath** of the now compiled `Injectio | \n139 | Alright, back to [the **INPluginClientController][INPluginClientController].** S | \n141 | going on from the high level **thoughout** this [connection setup functi | \n143 | console's info label to that **filepath,** this is the `BundleContents. | \n144 | om a storyboard (not too sure **whats** going on there TBH) | \n144 | too sure whats going on there **TBH)** | \n162 | stand this, we need to grok a **1,200** LOC header file `:D`, it | \n162 | and this, we need to grok a 1,**200** LOC header file `:D`, it has | \n162 | this, we need to grok a 1,200 **LOC** header file `:D`, it has a fe | \n162 | n try work through those, to [**BundleInjection.h][BundleInjection.h].** Interest | \n162 | this file inside your `/tmp/` **dir.** | \n176 | two responsibilities - using **Bonjour** to find the server, and raw s | \n176 | e is nothing unique about the **Bonjour** mutlicast work, so I'm skippi | \n176 | hing unique about the Bonjour **mutlicast** work, so I'm skipping that. O | \n180 | so][param_setup] it sets up [**INParameters** and INColors][tunable] for tu | \n180 | it sets up [INParameters and **INColors][tunable]** for tunable paramet | \n182 | mpt to connect to the server, **5** times. | \n185 | e some][nib_swizzling] of the **UINib** init functions. | \n185 | ][nib_swizzling] of the UINib **init** functions. | \n188 | om there the socket goes into **runloop** mode on it's on thread. | \n190 | #### Client Socket **Runloop** | \n194 | ects, then Re-creates the app **degelate** + view controller hierarchy. | \n198 | te_image] an `NS/UIImage` via **NSData** for Tunable Parameters. | \n215 | * A global **NSNotification** for . | \n219 | of quoting the README that [@**Johno1962][johnno1962]** and I worked on | \n225 | ects that are referred to via **sharedInstance.** If that fails, well, Injecti | \n258 | ibrary. These bundles contain **2** files `Info.plist`, `Injectio | \n258 | ide the bundle that is linked **ar** runtime (and thus dynamically | \n260 | c library info][dl_lib_info] [**struct][dl_struct]** and uses [dladdr] | \n260 | [struct][dl_struct] and uses [**dladdr][dladdr]** to fill the struct, | \n260 | [dladdr][dladdr] to fill the **struct,** based on the function pointe | \n262 | classlist] `__classlist` via [**getsectdatafromheader][getsectdatafromheader]** for t | \n262 | log post][objc_reverse] from [**Zynamics][zynamics].** Injection then lo | \n262 | rary, via the most [intensely **casted][class_references]** line in of | \n264 | es]. If you don't know what a **vtable** is check this [page on Wikipe | \n272 | see if the class's instances **reponds** to `- injected` if it does, i | \n272 | tances of the objects in it's **liveObjects** array. If the array hasn't be | \n274 | Injection has an [**Xprobe][xprobe]-lite** included inside | \n274 | ction has an [Xprobe][xprobe]-**lite** included inside it. This live | \n274 | ded inside it. This lives in [**BundleSweeper.h][BundleSweeper.h].** The quote | \n274 | on above gave the start away, **BundleSweeper** [looks at the app delegate][b | \n274 | elegate][bprobe_seed] ( or a [**Cocos2D** director object][cocos2d]) an | \n274 | and \"reference\" classes e.g [**NSBlock][NSBlock],** [NSData][NSData], | \n274 | sses e.g [NSBlock][NSBlock], [**NSData][NSData],** NSString, NSValue e | \n274 | ][NSBlock], [NSData][NSData], **NSString,** NSValue etc. The `bsweep` fu | \n274 | , [NSData][NSData], NSString, **NSValue** etc. The `bsweep` function ad | \n274 | ot then it loops through the [**IvarList][ivar_list]** and runs `bsweep` | \n278 | l the fancy class an instance **nofications** sorted, there is a good old r | \n278 | what I based my [work on for **Eigen][eigen_injection],** super simp | \n286 | wed a draft of this post to [@**Johno1962][johnno1962]** he reminded me t | \n286 | er read][diamond_reloader] at **120** LOC. However, can't understan | \n286 | ead][diamond_reloader] at 120 **LOC.** However, can't understand th | \n293 | easy to understand without c/**Mach-o** domain knowledge. It's making | \n293 | like Storyboards, Android via **Apportable,** ARC and no-ARC, 32bit vs 64b | \n293 | a Apportable, ARC and no-ARC, **32bit** vs 64bit and iOS vs Mac where | \n293 | ble, ARC and no-ARC, 32bit vs **64bit** and iOS vs Mac where things s | \n295 | As of Xcode **8,** Xcode Plugins are on the way | \n301 | this kind of stuff, follow [@**Johno1962][johnno1962]** on Twitter, he's | \n301 | ohnno1962] on Twitter, he's [@**Injection4Xcode][Injection4Xcode]** - Chris Lat | \n301 | ode][Injection4Xcode] - Chris **Lattner** follows him, so you know it's | \n301 | ome project that is pushing a **boundry** or two. | \n#### [_posts/2016-08-15-React-Native-at-Artsy.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-08-15-React-Native-at-Artsy.markdown)\n\nLine | Typo |\n| --- | ------ |\n28 | application and entirely in [**2** other apps](http://artsy.gith | \n49 | _everywhere_ in no time; **593** packages to be exactly, at th | \n69 | a lot that you would get with **UIKit** for free, e.g. `UICollectionV | \n94 | compose them to make complex **UIs.** | \n116 | once, write anywhere.” is the **neo-cross-platform** slogan deployed by React, whi | \n130 | [flexbox](https://en.wikipedia.org/wik | \n131 | ound classic CSS, I find that **flexbox** is an abstraction that nicely | \n139 | attern is not as ingrained in **UIKit** thus usually leading to more | \n140 | replacements such as [**AsyncDisplayKit](http://asyncdisplaykit.org).** | \n147 | than with your typical native **UIKit-based** | \n151 | it out, unlike e.g. Xcode and **UIKit.** (Granted, you | \n175 | ks with our application-wide [SDWebImage](https://cocoapods.org/pods/S | \n186 | about React Native. Follow [@ArtsyOpenSource](https://twitter.com/ArtsyOpe | \n#### [_posts/2016-11-14-JS-Glossary.md](/artsy/artsy.github.io/tree/swift/_posts/2016-11-14-JS-Glossary.md)\n\nLine | Typo |\n| --- | ------ |\n10 | environment now, and can try **summerize** a lot of topics. This should | \n99 | a much deeper explanation in [**uberVU/react-guide][react-guide]** | \n177 | Yarn is a NPM replacement (**ish)** by Facebook. It's very new. | \n195 | ### **Webpack** | \n197 | an be easy to confuse Babel + **Webpack,** so in simple: | \n200 | * **Webpack** will take source code and mer | \n202 | hey work at different scopes. **Webpack** is mainly a web front-end too | \n250 | hat JavaScript was created in **10** days, which is a cute anecdot | \n250 | ript has evolved for the next **21** years. The JavaScript you wro | \n250 | ars. The JavaScript you wrote **10** years ago would still run, ho | \n256 | JavaScript called ECMAScript **6.** | \n264 | cts. Quite a SemVer jump from **6** to 201**6**. | \n264 | Quite a SemVer jump from 6 to **2016.** | \n270 | [believe starting][stages] at **0,** and working up to 4. 0 Idea, | \n270 | ages] at 0, and working up to **4.** 0 Idea, 1 Proposal, 2 Draft, | \n270 | s] at **0**, and working up to 4. **0** Idea, 1 Proposal, 2 Draft, 3 | \n270 | and working up to 4. 0 Idea, **1** Proposal, 2 Draft, 3 Accepted | \n270 | up to 4. 0 Idea, 1 Proposal, **2** Draft, 3 Accepted and 4 Done. | \n270 | 0 Idea, 1 Proposal, 2 Draft, **3** Accepted and 4 Done. | \n270 | osal, 2 Draft, 3 Accepted and **4** Done. | \n272 | So a ECMAScript Stage **0** feature is going to be really | \n272 | er the number, the longer the **spec** has been discussed, and the m | \n274 | d these improvements are the [**TC39][tc39]** committee, the cool bi | \n297 | packaging JavaScript called [**CommonJS][commonjs].** It was replaced b | \n301 | pt has classes introduced in [**es6](#es6),** this means that inste | \n332 | not an implementation,” and “**favor** object composition over class | \n336 | So, classes - it took **20ish** years before they happened? B | \n338 | Danger I do almost exclusive **OOP** in JavaScript, sometimes the | \n398 | Introduced in ECMAScript **5.1,** it provides a way to [opt-in | \n499 | haracters but having the same **behavior.** | \n501 | , but it's not the only one. [**Rollup][rollup]** is considered the de | \n501 | it is in [babel](#babel) and [**webpack](#babel)** also. | \n563 | r my experiences with [making **PRs][inline-mac]** to VS Code. Type | \n579 | could probably do it in about **2** days using a Babel plugin, th | \n581 | volve further, then help them **stablize** and mature. | \n#### [_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md)\n\nLine | Typo |\n| --- | ------ |\n13 | ers of node, and for the last **4** years the stable stack for th | \n13 | ript + Express + Backbone. In **2016** the mobile team [announced][r | \n15 | parate dev teams for building **Artsy.net** and the corresponding iOS app | \n15 | llector Mobile. By the end of **2016** we decided to merge the teams | \n17 | stack for web/native Artsy in **2017.** | \n25 | Our web stack has been [**ezel.js][ezel]** since 2013, and contin | \n25 | as been [ezel.js][ezel] since **2013,** and continues to be a mature | \n25 | using React and GraphQL with [**muraljs][mural].** However, since the m | \n51 | n VS Code, and tried learning **OCaml** to help out on the [Flow tool | \n65 | er can conform to the GraphQL **spec,** and then clients can make qu | \n86 | ld actually contain a list of **hrefs** instead of the model data, an | \n90 | ive of a native developer [in **2016][mob-graph].** So I'll leave th | \n207 | y's local cache, and then any **un-cached** items are requested from the | \n221 | roject that replaces the NPM [**cli][cli]** client. It's very new, | \n221 | e a fresh re-write of the NPM **cli** would look like. | \n223 | node modules as with the NPM **cli.** | \n246 | change in one source file and **60** tests run from 6 different te | \n246 | ce file and **6**0 tests run from **6** different test suites. Finish | \n272 | , if I changed the background **color** to `blue` from `white`. I get | \n278 | **No **config**** - When we first integrated | \n278 | st integrated Jest, we had no **config.** Now, to make sure that TypeS | \n278 | ns for: Babel, TypeScript and **webpack.** Three of the biggest modern | \n280 | s, useful JSON output, ESLint **linters,** Elegant Mocking tools and na | \n282 | ferent testing frameworks in [**jest-codemods][jest-codemods]** - getting sta | \n282 | 'd also recommend looking at [**wallaby.js][wallaby]** and [vscode-jest][v | \n294 | of this culture came from the **TextMate** and Rails days with the infam | \n294 | ys with the infamous [blog in **15** minutes video][tm-blog]. When | \n296 | and IDEs where you have fully **spec'd** out projects. | \n298 | able to have project specific **setups** is where VS Code really start | \n321 | sound a bit corporate for a ~**25** person dev team, but one chie | \n329 | ound Facebook tech, based on [**three20][three20]** - which I think is | \n329 | ve shown to be really open to **PRs** and discussion, and our work | \n#### [_posts/2017-02-05-Retrospective-Swift-at-Artsy.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Retrospective-Swift-at-Artsy.md)\n\nLine | Typo |\n| --- | ------ |\n14 | Swift became public in June **2014,** by August we had started usi | \n16 | on Apple platforms. It was a **no-brainer** to then build an [appleTV app | \n16 | no-brainer to then build an [**appleTV** app][emergence] in Swift, int | \n16 | wift-support into our key app **Eigen** and built non-trivial parts o | \n18 | with React Native in February **2016,** and by August **2016,** we annou | \n18 | February **2016,** and by August **2016,** we announced that [Artsy mov | \n22 | ct Native][react-n], and our [**1-year** summary][summary]. | \n26 | rew. Building anything inside **Eigen** rarely re-used existing nativ | \n26 | till eventually it would take **2** iOS engineers to build a feat | \n28 | By [March **2015][gave_up],** we gave up trying | \n30 | this?\" Over the course of the **2015** winter break we explored idea | \n36 | [**Eigen][eigen]** is an app where we ta | \n36 | data and mapping it to a UI. [**Eidolon][eidolon]** (our Auctions Kiosk | \n36 | . [Emergence][emergence] is a **trivial-ish** tvOS app which has a few view | \n36 | ][emergence] is a trivial-ish **tvOS** app which has a few view cont | \n40 | **Eigen** is where we worried about how | \n40 | e limited in their scope, but **Eigen** is basically the mobile repre | \n40 | going to have something like **Eigen.** | \n42 | needed to re-think our entire **UIKit** stack for Eigen. Strictly spe | \n42 | nk our entire UIKit stack for **Eigen.** Strictly speaking, Objective | \n46 | In the end, for **Eigen,** we came to the conclusion th | \n51 | hich would have ended up like **Spotify's** ([hub][hub]) or Hyperslo's ([ | \n51 | ike Spotify's ([hub][hub]) or **Hyperslo's** ([Spots][spots]) ). | \n62 | The majority of the team had **5+** years of Cocoa experience an | \n74 | OS apps. From libraries like [**Moya][moya],** to foundational proje | \n76 | . This is what happened with [**Moya][moya].** It's a pattern Baseca | \n76 | [Moya][moya]. It's a pattern **Basecamp** discuss when they [talk about | \n84 | Think of apps with their own **filetypes,** that can control inputs and | \n86 | rking with an API is for most **3rd** party developers it should co | \n88 | peaking, don't have. They use **iCloud,** or CloudKit, or whatever, an | \n88 | n't have. They use iCloud, or **CloudKit,** or whatever, and expect you | \n96 | n. A trivial string change in **Eigen** takes [25 seconds][eigen_25] | \n96 | string change in Eigen takes [**25** seconds][eigen_**25**] to show up | \n98 | single edit in a string takes **25** seconds to see the difference | \n98 | ference in the swift parts of **Eigen** <a href=\"https://t.co/MOPGPEW | \n98 | ref=\"https://t.co/MOPGPEWqxX\">**pic.twitter.com/MOPGPEWqxX</a></p>&mdash;** 💍r | \n98 | o/MOPGPEWqxX\">pic.twitter.com/**MOPGPEWqxX</a></p>&mdash;** 💍rta Therox ( | \n98 | m/MOPGPEWqxX</a></p>&mdash; 💍r**ta** Therox (@or**ta**) <a href=\"https | \n98 | PGPEWqxX</a></p>&mdash; 💍rta T**herox** (@orta) <a href=\"https://twit | \n98 | 778242899821621249\">September 2**0,** 2016</a></blockquote></cente | \n98 | 42899821621249\">September 20, 2**016</a></blockquote></center>** | \n100 | talked to Apple engineers at W**WDC,** the idea was dismissed as \"d | \n102 | me of these problems, and the K**ickstarter** app has probably the closest | \n121 | _S**idenote:_** I found it hard to write th | \n121 | encing a sibling article: [JS 2**017][js-2017].** | \n127 | > References from JS 2**017:** [Relay][relay], [Jest][jest] | \n133 | r Apple first and then for us 3**rd** party devs. Outside influence | \n133 | language is Open Source (and [S**wiftPM][swiftpm])** | \n135 | a common word for it, being [S**herlocked][sherlocked].** The project I'v | \n135 | he project I've worked on for 5 **years,** CocoaPods, had an anno | \n135 | had an announcement of being s**herlocked** in late-2015 - you just have | \n135 | cement of being sherlocked in l**ate-2015** - you just have to deal with | \n137 | n\" dir=\"ltr\">Alfred, Dropbox, S**napchat,** Parse, OpenGL, Objective-C… | \n137 | <br>Quite the body count this W**WDC.</p>&mdash;** Mattt (@mattt) <a | \n137 | y count this WWDC.</p>&mdash; M**attt** (@m**attt**) <a href=\"https://twi | \n137 | this WWDC.</p>&mdash; Mattt (@m**attt)** <a href=\"https://twitter.com | \n137 | atus/473544723118837760\">June 2**,** 2014</a></blockquote> <scrip | \n137 | s/473544723118837760\">June 2, 2**014</a></blockquote>** <script asyn | \n141 | makes it tough for us, as the 3**rd** party community, to build use | \n143 | mpare Jest to either Quick or S**pecta.** Then remember that only Appl | \n145 | > Reference from JS 2**017:** [Jest][jest] | \n157 | rface API (either the DOM, or U**IKit.)** | \n163 | > References from JS 2**017:** [React][react], [Relay][rela | \n165 | running simultaneously as you a**rer** building your application. Im | \n167 | d make your changes. <em>From 2**5** seconds, to less than one</em | \n173 | > Reference from JS 2**017:** [TypeScript][typescript] | \n179 | he dev team. Artsy has around 2**5** developers, the majority of w | \n183 | of the company. For the past 5 **years,** the native mobile proj | \n185 | h the web team. At the end of 2**015,** the Collector Web team intro | \n187 | > Reference from JS 2**017:** [GraphQL][graphql] | \n189 | t a rough prototype ported in 2 **days** work. By working at Reac | \n197 | r skills would continue to be s**iloed.** | \n207 | evel of our application above U**IKit** and we can fork it. All our t | \n209 | no concepts like, _\"We'll use S**teipete's** fork of UIKit for UIPopover r | \n209 | \"We'll use Steipete's fork of U**IKit** for UIPopover rotation fixes\" | \n209 | Steipete's fork of UIKit for U**IPopover** rotation fixes\"_ or _\"My vers | \n213 | > Reference from JS 2**017:** [VS Code][code] | \n215 | much easier to live with the [5**93** dependencies](/blog/2016/08/1 | \n219 | With Swift the language, and S**wiftPM** the package manager, Apple ar | \n219 | ift-pm-slack], Mailing Lists, J**IRA** and Twitter. | \n223 | ks4] _weeks_ during the Swift 2 **->** 3 migration. Having the la | \n223 | _weeks_ during the Swift 2 -> 3 **migration.** Having the languag | \n227 | . So here's the summary after 1 **year.** | \n252 | - Run through the [f**8** app][f**8**] series on  [makeitop | \n252 | the [f8 app][f8] series on  [m**akeitopen.com][f8-open].** | \n259 | - [s**craphold](https://scaphold.io).** | \n260 | - [g**raphcool](https://www.graph.cool/).** | \n\n\n### Spell Checker found issues\n\n#### [_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown](/artsy/artsy.github.io/tree/swift/_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown)\n\nLine | Typo |\n| --- | ------ |\n18 | ncies as being things in your **Podfile,** but it's a bit more nuanced | \n38 | `xcodebuild` either via Xcode/**AppCode/Vim** as a part of our individu | \n48 | ndexes). The Quality Indexes (**QIs)** are a series of metrics that | \n48 | enerate a single number that [**cocoapods.org](http://cocoapods.org)** uses f | \n48 | rse of a year. Here are a few **QIs** that matter a lot to me: | \n51 | a CHANGELOG and uses internal **appledoc/headerdoc.** | \n51 | OG and uses internal appledoc/**headerdoc.** | \n62 | poline for message passing on **64** bit processors sucks. Relying | \n64 | one involved. Examples being [NAMapKit](https://cocoapods.org/pods/N | \n64 | apods.org/pods/NAMapKit) and [Specta](https://cocoapods.org/pods/S | \n64 | //cocoapods.org/pods/Specta)/[Expecta](https://cocoapods.org/pods/E | \n81 | system similar to CocoaPods' **subspecs** which lets a library consumer | \n83 | **ReactiveCocoa** feels quite similar. In excha | \n85 | * Swizzling **dealloc** on objects in order to do it' | \n85 | cts in order to do it's magic **KVO-unbinding** at runtime. | \n86 | tead you can use their custom **dtrace** instrument. | \n89 | happily made in exchange for **ReactiveCocoa's** well thought out API. Functio | \n93 | pecific task. Something like [ObjectiveSugar](https://cocoapods.org/pods/O | \n99 | One such example has been **ReactiveCocoa.** While they are free to make | \n101 | s such a pleasure. We've sent **PRs,**  helped out on [documentatio | \n105 | rly, but coming back at Swift **2.0** feels good. We just started i | \n107 | d chunk of time over the last **6** months discussing and testing | \n111 | uld we want this in more than **2** apps\" at the moment. This is | \n113 | -sink, we've been supporting [ARAnalytics](https://cocoapods.org/pods/A | \n113 | ods.org/pods/ARAnalytics) for **4** years now and nearly all feat | \n113 | rly all features for the last **3** years have come from external | \n113 | ation up to date takes time. [Moya](https://cocoapods.org/pods/M | \n115 | ok forwards to doing that to [ORStackView](https://cocoapods.org/pods/O | \n115 | when everyone is building for **iOS9+.** | \n119 | in dependency\". The CocoaPods **QIs** can give you a sense of what | \n#### [_posts/2016-01-30-iOS-Junior-Interviews.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-01-30-iOS-Junior-Interviews.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | good explanation is in [this **StackOverflow][1].** | \n20 | ][2]. However, in this [post @**dbgrandi][3]** neatly sums up the lower | \n24 | SON to present some data in a **UITableView.** | \n28 | r a lot of things, and that's **ok.** | \n34 | - [**StackOverflow** jobs][4] | \n38 | - [@**xcodejobs][8]** | \n40 | irst programming job through [**CocoaDev** Jobs][9]. | \n42 | s in the city. In NYC we have **3-4** big iOS meet-ups a month, and | \n42 | , I almost became a full-time **rubyist** because of it. I have quite a | \n44 | Artsy's job postings are on [**AngelList][10]** and [Glassdoor][11] but | \n44 | s are on [AngelList][10] and [**Glassdoor][11]** but the vast majority of | \n44 | nkedIn][13], [Hired][14] and [**weworkremotely][15]** are probably worth a loo | \n56 | These are **15-30** minute informal chats, but fr | \n56 | u'll usually get a yes. Tamar **Nachmany** has some [great, salient poin | \n62 | lived for most of my life (\\~**25** years) about 2 hours train ri | \n62 | of my life (\\~**2**5 years) about **2** hours train ride from Manches | \n64 | ould work out well for mentor/**mentoree.** You'd need the entire compan | \n76 | t's amazing that there is now **1** billion active users a day. I | \n80 | e position first through Orta **Therox,** who spoke highly of Artsy. | \n82 | world, with a thorough mix of **math,** software engineering, and ar | \n82 | in our society, as I did with **500px.** | \n84 | _**10/10._** Extremely on topic. | \n84 | _10/**10._** Extremely on topic. | \n88 | GitHub, have written for the **Teehan+Lax** blog professionally, and | \n96 | _**10/10_** ✔ | \n96 | _10/**10_** ✔ | \n98 | ground, I just graduated from **NYU** with a B.S. in Electrical Eng | \n98 | ust graduated from NYU with a **B.S.** in Electrical Engineering and | \n98 | ary (a home security hardware **startup).** While I do enjoy building h | \n116 | - [**2007][23]** as a part of the WWDC St | \n116 | - [2007][23] as a part of the **WWDC** Student Scholarship. It was s | \n117 | - [**2008][24]** as a graduate applying f | \n118 | - [**2008][25]** as a graduate applying f | \n119 | - [**2010][26]** when applying for jobs o | \n120 | - [**2015][27]** my CV as a part of my U. | \n120 | 15][27] my CV as a part of my **U.S.** VISA process. | \n157 | tions happening over the last **8** years, but the tone of how I | \n159 | onsider my personal web-page [**orta.io][28]** to act as a portfolio, A | \n196 | _More **infö** that I've reviewed and given | \n199 | * [8 **Minute** Guide to Writing a Res | \n204 | you think being a engineer at S**potify** would be a dream job. How do | \n206 | test out the water. Then for S**potify,** you should make sure everyth | \n208 | ompanies have public employee g**et-togethers,** for example at Artsy we have | \n208 | d the curtain. In the case of S**potify,** they host a lot of meet-ups, | \n214 | t IMO is a solid resource is [CameronBanga/iOS-Developer-and-Designer-In | \n230 | e real interviews in the last 2 **years.** | \n234 | Have a Technical Interview at Ma**coscope][43]** - Again, probably a bit | \n240 | nvest probably something like 10 **hours** into you. This is sprea | \n266 | be threading, view controller li**fecycle,** code coupling, dynamic vs st | \n268 | Here's [a long wr**iteup][47],** with a lot of depth (an | \n288 | our interview seems to be the et**tiquette** in the US. I don't recall doi | \n299 | een given an offer. If it's a st**artup,** you might be offered equity. | \n301 | offer much there. But I have re**cieved** [some good][52] advice I'll p | \n309 | own blog. [Jekyll][54] is the de**facto** go-to in that space, but I kn | \n309 | ed using [middleman][55] and [hu**go][56].** Do not use Octopress, v | \n309 | 5] and [hugo][56]. Do not use Oc**topress,** vanilla Jekyll will do you j | \n311 | , talk about code. It took me 4 **years** to hit my first thousan | \n317 | ing to Open Source][61]: [Fix RE**ADMEs][62],** [improve documentation  | \n332 | - Video code-reviews: [Ei**dolon][72]** / [Emergence][73] - On t | \n#### [_posts/2016-06-19-graphql-for-mobile.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-19-graphql-for-mobile.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | e and Runtime_. GraphQL is a [spec](http://facebook.github.io/gr | \n10 | m have as much control as the **backend.** | \n12 | what I've learned in the last **3** months of using it in [Eigen] | \n12 | last 3 months of using it in [Eigen](https://github.com/artsy/eig | \n48 | r data means your app is more **resiliant** to things outside of your con | \n50 | ld actually contain a list of **hrefs** instead of the model data, an | \n54 | singly) open-source, it's at [artsy/metaphysics](https://github.c | \n54 | g against a GraphQL server is **GraphiQL** - an IDE for exploring your A | \n54 | , but I can send you to [Clay **Allsop's](http://clayallsopp.com)** [Gra | \n54 | p's](http://clayallsopp.com) [**GraphQLHub](https://www.graphqlhub.com):** | \n56 | t link in a new window. Press **cmd** + enter to see the results. W | \n58 | ction APIs inside the GraphQL **spec.** | \n70 | eeded to be re-implemented in **3-4** clients. On the native side w | \n78 | tive/) for our flagship app, [Eigen](https://github.com/artsy/eig | \n101 | ors) gave GraphQL a try, and [welcome'd](https://github.com/artsy/met | \n#### [_posts/2016-06-29-code-spelunking-injection.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-29-code-spelunking-injection.markdown)\n\nLine | Typo |\n| --- | ------ |\n27 | take-risks) - the code we are **spelunking** through can feel foreign to m | \n27 | -C, and it's not got tests. [@**Johno1962][johnno1962]** described it to | \n27 | cribed it to me as being like **1997's** Objective-C. The end result o | \n31 | * **InjectionPlugin** - The user facing Xcode plugi | \n32 | * **InjectionLoader** - A Bundle used to skip patch | \n33 | * **iOSBundleTemplate** - A folder to a reference imp | \n34 | * **OSXBundleTemplate** - Same but for OSX Project | \n34 | BundleTemplate - Same but for **OSX** Project | \n42 | * **Recieves** a call to inject. | \n46 | lass][principal_class] in the **info.plist,** this class, `INPluginMenuCon | \n48 | u ( note: [interesting use of **c-structs** here][menu_structs] ) and sta | \n73 | everything went well, then a [**Bonjour][bonjour]** [service][bonjour_s | \n73 | thread and starts a infinite **runloop** checking for new connections | \n73 | nections on the [socket every **0.5** seconds][socket_runloop]. | \n75 | unning][bbrowser_running] in [**Bonjour** Browser][bbrowser]. So, what | \n87 | tarts at `injectSource` [from **INPluginMenuController][inject_source].** | \n91 | ence to the currently running **LLDB** session, the console in the b | \n95 | d, then requests a pause from **LLDB,** allowing the plugin to send | \n103 | for file changes inside your **Xcodeproject.** | \n105 | injection work is done inside **perl** scripts, another new language | \n105 | nd of `injectSource` it runs [**injectSource.pl][injection_source_pl]** with an | \n107 | a lot of ground-work for the **perl** scripts is done inside [commo | \n107 | perl scripts is done inside [**common.pm][common_pm]** - which is a modu | \n109 | setup, maintain and amend an **xcodeproject** that compiles just the class | \n111 | rts out by copying a template **xcodeproject** (either `iOSBundleTemplate` o | \n117 | a reference to the build log **dirs** for the [derived data][derive | \n117 | compiling a single class from **Eigen** looks like][a_build_log] (I'v | \n117 | ly, this is called the learnt **db.** | \n119 | The learnt **db** is used to compile a class to | \n127 | With the `Logs` **dir** being a symlink to the derive | \n133 | or which tells the server the **filepath** of the now compiled `Injectio | \n139 | Alright, back to [the **INPluginClientController][INPluginClientController].** S | \n141 | going on from the high level **thoughout** this [connection setup functi | \n143 | console's info label to that **filepath,** this is the `BundleContents. | \n144 | om a storyboard (not too sure **whats** going on there TBH) | \n144 | too sure whats going on there **TBH)** | \n162 | stand this, we need to grok a **1,200** LOC header file `:D`, it | \n162 | and this, we need to grok a 1,**200** LOC header file `:D`, it has | \n162 | this, we need to grok a 1,200 **LOC** header file `:D`, it has a fe | \n162 | n try work through those, to [**BundleInjection.h][BundleInjection.h].** Interest | \n162 | this file inside your `/tmp/` **dir.** | \n176 | two responsibilities - using **Bonjour** to find the server, and raw s | \n176 | e is nothing unique about the **Bonjour** mutlicast work, so I'm skippi | \n176 | hing unique about the Bonjour **mutlicast** work, so I'm skipping that. O | \n180 | so][param_setup] it sets up [**INParameters** and INColors][tunable] for tu | \n180 | it sets up [INParameters and **INColors][tunable]** for tunable paramet | \n182 | mpt to connect to the server, **5** times. | \n185 | e some][nib_swizzling] of the **UINib** init functions. | \n185 | ][nib_swizzling] of the UINib **init** functions. | \n188 | om there the socket goes into **runloop** mode on it's on thread. | \n190 | #### Client Socket **Runloop** | \n194 | ects, then Re-creates the app **degelate** + view controller hierarchy. | \n198 | te_image] an `NS/UIImage` via **NSData** for Tunable Parameters. | \n215 | * A global **NSNotification** for . | \n219 | of quoting the README that [@**Johno1962][johnno1962]** and I worked on | \n225 | ects that are referred to via **sharedInstance.** If that fails, well, Injecti | \n258 | ibrary. These bundles contain **2** files `Info.plist`, `Injectio | \n258 | ide the bundle that is linked **ar** runtime (and thus dynamically | \n260 | c library info][dl_lib_info] [**struct][dl_struct]** and uses [dladdr] | \n260 | [struct][dl_struct] and uses [**dladdr][dladdr]** to fill the struct, | \n260 | [dladdr][dladdr] to fill the **struct,** based on the function pointe | \n262 | classlist] `__classlist` via [**getsectdatafromheader][getsectdatafromheader]** for t | \n262 | log post][objc_reverse] from [**Zynamics][zynamics].** Injection then lo | \n262 | rary, via the most [intensely **casted][class_references]** line in of | \n264 | es]. If you don't know what a **vtable** is check this [page on Wikipe | \n272 | see if the class's instances **reponds** to `- injected` if it does, i | \n272 | tances of the objects in it's **liveObjects** array. If the array hasn't be | \n274 | Injection has an [**Xprobe][xprobe]-lite** included inside | \n274 | ction has an [Xprobe][xprobe]-**lite** included inside it. This live | \n274 | ded inside it. This lives in [**BundleSweeper.h][BundleSweeper.h].** The quote | \n274 | on above gave the start away, **BundleSweeper** [looks at the app delegate][b | \n274 | elegate][bprobe_seed] ( or a [**Cocos2D** director object][cocos2d]) an | \n274 | and \"reference\" classes e.g [**NSBlock][NSBlock],** [NSData][NSData], | \n274 | sses e.g [NSBlock][NSBlock], [**NSData][NSData],** NSString, NSValue e | \n274 | ][NSBlock], [NSData][NSData], **NSString,** NSValue etc. The `bsweep` fu | \n274 | , [NSData][NSData], NSString, **NSValue** etc. The `bsweep` function ad | \n274 | ot then it loops through the [**IvarList][ivar_list]** and runs `bsweep` | \n278 | l the fancy class an instance **nofications** sorted, there is a good old r | \n278 | what I based my [work on for **Eigen][eigen_injection],** super simp | \n286 | wed a draft of this post to [@**Johno1962][johnno1962]** he reminded me t | \n286 | er read][diamond_reloader] at **120** LOC. However, can't understan | \n286 | ead][diamond_reloader] at 120 **LOC.** However, can't understand th | \n293 | easy to understand without c/**Mach-o** domain knowledge. It's making | \n293 | like Storyboards, Android via **Apportable,** ARC and no-ARC, 32bit vs 64b | \n293 | a Apportable, ARC and no-ARC, **32bit** vs 64bit and iOS vs Mac where | \n293 | ble, ARC and no-ARC, 32bit vs **64bit** and iOS vs Mac where things s | \n295 | As of Xcode **8,** Xcode Plugins are on the way | \n301 | this kind of stuff, follow [@**Johno1962][johnno1962]** on Twitter, he's | \n301 | ohnno1962] on Twitter, he's [@**Injection4Xcode][Injection4Xcode]** - Chris Lat | \n301 | ode][Injection4Xcode] - Chris **Lattner** follows him, so you know it's | \n301 | ome project that is pushing a **boundry** or two. | \n#### [_posts/2016-08-15-React-Native-at-Artsy.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-08-15-React-Native-at-Artsy.markdown)\n\nLine | Typo |\n| --- | ------ |\n28 | application and entirely in [**2** other apps](http://artsy.gith | \n49 | _everywhere_ in no time; **593** packages to be exactly, at th | \n69 | a lot that you would get with **UIKit** for free, e.g. `UICollectionV | \n94 | compose them to make complex **UIs.** | \n116 | once, write anywhere.” is the **neo-cross-platform** slogan deployed by React, whi | \n130 | [flexbox](https://en.wikipedia.org/wik | \n131 | ound classic CSS, I find that **flexbox** is an abstraction that nicely | \n139 | attern is not as ingrained in **UIKit** thus usually leading to more | \n140 | replacements such as [**AsyncDisplayKit](http://asyncdisplaykit.org).** | \n147 | than with your typical native **UIKit-based** | \n151 | it out, unlike e.g. Xcode and **UIKit.** (Granted, you | \n175 | ks with our application-wide [SDWebImage](https://cocoapods.org/pods/S | \n186 | about React Native. Follow [@ArtsyOpenSource](https://twitter.com/ArtsyOpe | \n#### [_posts/2016-11-14-JS-Glossary.md](/artsy/artsy.github.io/tree/swift/_posts/2016-11-14-JS-Glossary.md)\n\nLine | Typo |\n| --- | ------ |\n10 | environment now, and can try **summerize** a lot of topics. This should | \n99 | a much deeper explanation in [**uberVU/react-guide][react-guide]** | \n177 | Yarn is a NPM replacement (**ish)** by Facebook. It's very new. | \n195 | ### **Webpack** | \n197 | an be easy to confuse Babel + **Webpack,** so in simple: | \n200 | * **Webpack** will take source code and mer | \n202 | hey work at different scopes. **Webpack** is mainly a web front-end too | \n250 | hat JavaScript was created in **10** days, which is a cute anecdot | \n250 | ript has evolved for the next **21** years. The JavaScript you wro | \n250 | ars. The JavaScript you wrote **10** years ago would still run, ho | \n256 | JavaScript called ECMAScript **6.** | \n264 | cts. Quite a SemVer jump from **6** to 201**6**. | \n264 | Quite a SemVer jump from 6 to **2016.** | \n270 | [believe starting][stages] at **0,** and working up to 4. 0 Idea, | \n270 | ages] at 0, and working up to **4.** 0 Idea, 1 Proposal, 2 Draft, | \n270 | s] at **0**, and working up to 4. **0** Idea, 1 Proposal, 2 Draft, 3 | \n270 | and working up to 4. 0 Idea, **1** Proposal, 2 Draft, 3 Accepted | \n270 | up to 4. 0 Idea, 1 Proposal, **2** Draft, 3 Accepted and 4 Done. | \n270 | 0 Idea, 1 Proposal, 2 Draft, **3** Accepted and 4 Done. | \n270 | osal, 2 Draft, 3 Accepted and **4** Done. | \n272 | So a ECMAScript Stage **0** feature is going to be really | \n272 | er the number, the longer the **spec** has been discussed, and the m | \n274 | d these improvements are the [**TC39][tc39]** committee, the cool bi | \n297 | packaging JavaScript called [**CommonJS][commonjs].** It was replaced b | \n301 | pt has classes introduced in [**es6](#es6),** this means that inste | \n332 | not an implementation,” and “**favor** object composition over class | \n336 | So, classes - it took **20ish** years before they happened? B | \n338 | Danger I do almost exclusive **OOP** in JavaScript, sometimes the | \n398 | Introduced in ECMAScript **5.1,** it provides a way to [opt-in | \n499 | haracters but having the same **behavior.** | \n501 | , but it's not the only one. [**Rollup][rollup]** is considered the de | \n501 | it is in [babel](#babel) and [**webpack](#babel)** also. | \n563 | r my experiences with [making **PRs][inline-mac]** to VS Code. Type | \n579 | could probably do it in about **2** days using a Babel plugin, th | \n581 | volve further, then help them **stablize** and mature. | \n#### [_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md)\n\nLine | Typo |\n| --- | ------ |\n13 | ers of node, and for the last **4** years the stable stack for th | \n13 | ript + Express + Backbone. In **2016** the mobile team [announced][r | \n15 | parate dev teams for building **Artsy.net** and the corresponding iOS app | \n15 | llector Mobile. By the end of **2016** we decided to merge the teams | \n17 | stack for web/native Artsy in **2017.** | \n25 | Our web stack has been [**ezel.js][ezel]** since 2013, and contin | \n25 | as been [ezel.js][ezel] since **2013,** and continues to be a mature | \n25 | using React and GraphQL with [**muraljs][mural].** However, since the m | \n51 | n VS Code, and tried learning **OCaml** to help out on the [Flow tool | \n65 | er can conform to the GraphQL **spec,** and then clients can make qu | \n86 | ld actually contain a list of **hrefs** instead of the model data, an | \n90 | ive of a native developer [in **2016][mob-graph].** So I'll leave th | \n207 | y's local cache, and then any **un-cached** items are requested from the | \n221 | roject that replaces the NPM [**cli][cli]** client. It's very new, | \n221 | e a fresh re-write of the NPM **cli** would look like. | \n223 | node modules as with the NPM **cli.** | \n246 | change in one source file and **60** tests run from 6 different te | \n246 | ce file and **6**0 tests run from **6** different test suites. Finish | \n272 | , if I changed the background **color** to `blue` from `white`. I get | \n278 | **No **config**** - When we first integrated | \n278 | st integrated Jest, we had no **config.** Now, to make sure that TypeS | \n278 | ns for: Babel, TypeScript and **webpack.** Three of the biggest modern | \n280 | s, useful JSON output, ESLint **linters,** Elegant Mocking tools and na | \n282 | ferent testing frameworks in [**jest-codemods][jest-codemods]** - getting sta | \n282 | 'd also recommend looking at [**wallaby.js][wallaby]** and [vscode-jest][v | \n294 | of this culture came from the **TextMate** and Rails days with the infam | \n294 | ys with the infamous [blog in **15** minutes video][tm-blog]. When | \n296 | and IDEs where you have fully **spec'd** out projects. | \n298 | able to have project specific **setups** is where VS Code really start | \n321 | sound a bit corporate for a ~**25** person dev team, but one chie | \n329 | ound Facebook tech, based on [**three20][three20]** - which I think is | \n329 | ve shown to be really open to **PRs** and discussion, and our work | \n#### [_posts/2017-02-05-Retrospective-Swift-at-Artsy.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Retrospective-Swift-at-Artsy.md)\n\nLine | Typo |\n| --- | ------ |\n14 | Swift became public in June **2014,** by August we had started usi | \n16 | on Apple platforms. It was a **no-brainer** to then build an [appleTV app | \n16 | no-brainer to then build an [**appleTV** app][emergence] in Swift, int | \n16 | wift-support into our key app **Eigen** and built non-trivial parts o | \n18 | with React Native in February **2016,** and by August **2016,** we annou | \n18 | February **2016,** and by August **2016,** we announced that [Artsy mov | \n22 | ct Native][react-n], and our [**1-year** summary][summary]. | \n26 | rew. Building anything inside **Eigen** rarely re-used existing nativ | \n26 | till eventually it would take **2** iOS engineers to build a feat | \n28 | By [March **2015][gave_up],** we gave up trying | \n30 | this?\" Over the course of the **2015** winter break we explored idea | \n36 | [**Eigen][eigen]** is an app where we ta | \n36 | data and mapping it to a UI. [**Eidolon][eidolon]** (our Auctions Kiosk | \n36 | . [Emergence][emergence] is a **trivial-ish** tvOS app which has a few view | \n36 | ][emergence] is a trivial-ish **tvOS** app which has a few view cont | \n40 | **Eigen** is where we worried about how | \n40 | e limited in their scope, but **Eigen** is basically the mobile repre | \n40 | going to have something like **Eigen.** | \n42 | needed to re-think our entire **UIKit** stack for Eigen. Strictly spe | \n42 | nk our entire UIKit stack for **Eigen.** Strictly speaking, Objective | \n46 | In the end, for **Eigen,** we came to the conclusion th | \n51 | hich would have ended up like **Spotify's** ([hub][hub]) or Hyperslo's ([ | \n51 | ike Spotify's ([hub][hub]) or **Hyperslo's** ([Spots][spots]) ). | \n62 | The majority of the team had **5+** years of Cocoa experience an | \n74 | OS apps. From libraries like [**Moya][moya],** to foundational proje | \n76 | . This is what happened with [**Moya][moya].** It's a pattern Baseca | \n76 | [Moya][moya]. It's a pattern **Basecamp** discuss when they [talk about | \n84 | Think of apps with their own **filetypes,** that can control inputs and | \n86 | rking with an API is for most **3rd** party developers it should co | \n88 | peaking, don't have. They use **iCloud,** or CloudKit, or whatever, an | \n88 | n't have. They use iCloud, or **CloudKit,** or whatever, and expect you | \n96 | n. A trivial string change in **Eigen** takes [25 seconds][eigen_25] | \n96 | string change in Eigen takes [**25** seconds][eigen_**25**] to show up | \n98 | single edit in a string takes **25** seconds to see the difference | \n98 | ference in the swift parts of **Eigen** <a href=\"https://t.co/MOPGPEW | \n98 | ref=\"https://t.co/MOPGPEWqxX\">**pic.twitter.com/MOPGPEWqxX</a></p>&mdash;** 💍r | \n98 | o/MOPGPEWqxX\">pic.twitter.com/**MOPGPEWqxX</a></p>&mdash;** 💍rta Therox ( | \n98 | m/MOPGPEWqxX</a></p>&mdash; 💍r**ta** Therox (@or**ta**) <a href=\"https | \n98 | PGPEWqxX</a></p>&mdash; 💍rta T**herox** (@orta) <a href=\"https://twit | \n98 | 778242899821621249\">September 2**0,** 2016</a></blockquote></cente | \n98 | 42899821621249\">September 20, 2**016</a></blockquote></center>** | \n100 | talked to Apple engineers at W**WDC,** the idea was dismissed as \"d | \n102 | me of these problems, and the K**ickstarter** app has probably the closest | \n121 | _S**idenote:_** I found it hard to write th | \n121 | encing a sibling article: [JS 2**017][js-2017].** | \n127 | > References from JS 2**017:** [Relay][relay], [Jest][jest] | \n133 | r Apple first and then for us 3**rd** party devs. Outside influence | \n133 | language is Open Source (and [S**wiftPM][swiftpm])** | \n135 | a common word for it, being [S**herlocked][sherlocked].** The project I'v | \n135 | he project I've worked on for 5 **years,** CocoaPods, had an anno | \n135 | had an announcement of being s**herlocked** in late-2015 - you just have | \n135 | cement of being sherlocked in l**ate-2015** - you just have to deal with | \n137 | n\" dir=\"ltr\">Alfred, Dropbox, S**napchat,** Parse, OpenGL, Objective-C… | \n137 | <br>Quite the body count this W**WDC.</p>&mdash;** Mattt (@mattt) <a | \n137 | y count this WWDC.</p>&mdash; M**attt** (@m**attt**) <a href=\"https://twi | \n137 | this WWDC.</p>&mdash; Mattt (@m**attt)** <a href=\"https://twitter.com | \n137 | atus/473544723118837760\">June 2**,** 2014</a></blockquote> <scrip | \n137 | s/473544723118837760\">June 2, 2**014</a></blockquote>** <script asyn | \n141 | makes it tough for us, as the 3**rd** party community, to build use | \n143 | mpare Jest to either Quick or S**pecta.** Then remember that only Appl | \n145 | > Reference from JS 2**017:** [Jest][jest] | \n157 | rface API (either the DOM, or U**IKit.)** | \n163 | > References from JS 2**017:** [React][react], [Relay][rela | \n165 | running simultaneously as you a**rer** building your application. Im | \n167 | d make your changes. <em>From 2**5** seconds, to less than one</em | \n173 | > Reference from JS 2**017:** [TypeScript][typescript] | \n179 | he dev team. Artsy has around 2**5** developers, the majority of w | \n183 | of the company. For the past 5 **years,** the native mobile proj | \n185 | h the web team. At the end of 2**015,** the Collector Web team intro | \n187 | > Reference from JS 2**017:** [GraphQL][graphql] | \n189 | t a rough prototype ported in 2 **days** work. By working at Reac | \n197 | r skills would continue to be s**iloed.** | \n207 | evel of our application above U**IKit** and we can fork it. All our t | \n209 | no concepts like, _\"We'll use S**teipete's** fork of UIKit for UIPopover r | \n209 | \"We'll use Steipete's fork of U**IKit** for UIPopover rotation fixes\" | \n209 | Steipete's fork of UIKit for U**IPopover** rotation fixes\"_ or _\"My vers | \n213 | > Reference from JS 2**017:** [VS Code][code] | \n215 | much easier to live with the [5**93** dependencies](/blog/2016/08/1 | \n219 | With Swift the language, and S**wiftPM** the package manager, Apple ar | \n219 | ift-pm-slack], Mailing Lists, J**IRA** and Twitter. | \n223 | ks4] _weeks_ during the Swift 2 **->** 3 migration. Having the la | \n223 | _weeks_ during the Swift 2 -> 3 **migration.** Having the languag | \n227 | . So here's the summary after 1 **year.** | \n252 | - Run through the [f**8** app][f**8**] series on  [makeitop | \n252 | the [f8 app][f8] series on  [m**akeitopen.com][f8-open].** | \n259 | - [s**craphold](https://scaphold.io).** | \n260 | - [g**raphcool](https://www.graph.cool/).** | \n\n\n### Spell Checker found issues\n\n#### [_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown](/artsy/artsy.github.io/tree/swift/_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown)\n\nLine | Typo |\n| --- | ------ |\n18 | ncies as being things in your **Podfile,** but it's a bit more nuanced | \n38 | `xcodebuild` either via Xcode/**AppCode/Vim** as a part of our individu | \n48 | ndexes). The Quality Indexes (**QIs)** are a series of metrics that | \n48 | enerate a single number that [**cocoapods.org](http://cocoapods.org)** uses f | \n48 | rse of a year. Here are a few **QIs** that matter a lot to me: | \n51 | a CHANGELOG and uses internal **appledoc/headerdoc.** | \n51 | OG and uses internal appledoc/**headerdoc.** | \n62 | poline for message passing on **64** bit processors sucks. Relying | \n64 | one involved. Examples being [NAMapKit](https://cocoapods.org/pods/N | \n64 | apods.org/pods/NAMapKit) and [Specta](https://cocoapods.org/pods/S | \n64 | //cocoapods.org/pods/Specta)/[Expecta](https://cocoapods.org/pods/E | \n81 | system similar to CocoaPods' **subspecs** which lets a library consumer | \n83 | **ReactiveCocoa** feels quite similar. In excha | \n85 | * Swizzling **dealloc** on objects in order to do it' | \n85 | cts in order to do it's magic **KVO-unbinding** at runtime. | \n86 | tead you can use their custom **dtrace** instrument. | \n89 | happily made in exchange for **ReactiveCocoa's** well thought out API. Functio | \n93 | pecific task. Something like [ObjectiveSugar](https://cocoapods.org/pods/O | \n99 | One such example has been **ReactiveCocoa.** While they are free to make | \n101 | s such a pleasure. We've sent **PRs,**  helped out on [documentatio | \n105 | rly, but coming back at Swift **2.0** feels good. We just started i | \n107 | d chunk of time over the last **6** months discussing and testing | \n111 | uld we want this in more than **2** apps\" at the moment. This is | \n113 | -sink, we've been supporting [ARAnalytics](https://cocoapods.org/pods/A | \n113 | ods.org/pods/ARAnalytics) for **4** years now and nearly all feat | \n113 | rly all features for the last **3** years have come from external | \n113 | ation up to date takes time. [Moya](https://cocoapods.org/pods/M | \n115 | ok forwards to doing that to [ORStackView](https://cocoapods.org/pods/O | \n115 | when everyone is building for **iOS9+.** | \n119 | in dependency\". The CocoaPods **QIs** can give you a sense of what | \n#### [_posts/2016-01-30-iOS-Junior-Interviews.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-01-30-iOS-Junior-Interviews.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | good explanation is in [this **StackOverflow][1].** | \n20 | ][2]. However, in this [post @**dbgrandi][3]** neatly sums up the lower | \n24 | SON to present some data in a **UITableView.** | \n28 | r a lot of things, and that's **ok.** | \n34 | - [**StackOverflow** jobs][4] | \n38 | - [@**xcodejobs][8]** | \n40 | irst programming job through [**CocoaDev** Jobs][9]. | \n42 | s in the city. In NYC we have **3-4** big iOS meet-ups a month, and | \n42 | , I almost became a full-time **rubyist** because of it. I have quite a | \n44 | Artsy's job postings are on [**AngelList][10]** and [Glassdoor][11] but | \n44 | s are on [AngelList][10] and [**Glassdoor][11]** but the vast majority of | \n44 | nkedIn][13], [Hired][14] and [**weworkremotely][15]** are probably worth a loo | \n56 | These are **15-30** minute informal chats, but fr | \n56 | u'll usually get a yes. Tamar **Nachmany** has some [great, salient poin | \n62 | lived for most of my life (\\~**25** years) about 2 hours train ri | \n62 | of my life (\\~**2**5 years) about **2** hours train ride from Manches | \n64 | ould work out well for mentor/**mentoree.** You'd need the entire compan | \n76 | t's amazing that there is now **1** billion active users a day. I | \n80 | e position first through Orta **Therox,** who spoke highly of Artsy. | \n82 | world, with a thorough mix of **math,** software engineering, and ar | \n82 | in our society, as I did with **500px.** | \n84 | _**10/10._** Extremely on topic. | \n84 | _10/**10._** Extremely on topic. | \n88 | GitHub, have written for the **Teehan+Lax** blog professionally, and | \n96 | _**10/10_** ✔ | \n96 | _10/**10_** ✔ | \n98 | ground, I just graduated from **NYU** with a B.S. in Electrical Eng | \n98 | ust graduated from NYU with a **B.S.** in Electrical Engineering and | \n98 | ary (a home security hardware **startup).** While I do enjoy building h | \n116 | - [**2007][23]** as a part of the WWDC St | \n116 | - [2007][23] as a part of the **WWDC** Student Scholarship. It was s | \n117 | - [**2008][24]** as a graduate applying f | \n118 | - [**2008][25]** as a graduate applying f | \n119 | - [**2010][26]** when applying for jobs o | \n120 | - [**2015][27]** my CV as a part of my U. | \n120 | 15][27] my CV as a part of my **U.S.** VISA process. | \n157 | tions happening over the last **8** years, but the tone of how I | \n159 | onsider my personal web-page [**orta.io][28]** to act as a portfolio, A | \n196 | _More **infö** that I've reviewed and given | \n199 | * [8 **Minute** Guide to Writing a Res | \n204 | you think being a engineer at S**potify** would be a dream job. How do | \n206 | test out the water. Then for S**potify,** you should make sure everyth | \n208 | ompanies have public employee g**et-togethers,** for example at Artsy we have | \n208 | d the curtain. In the case of S**potify,** they host a lot of meet-ups, | \n214 | t IMO is a solid resource is [CameronBanga/iOS-Developer-and-Designer-In | \n230 | e real interviews in the last 2 **years.** | \n234 | Have a Technical Interview at Ma**coscope][43]** - Again, probably a bit | \n240 | nvest probably something like 10 **hours** into you. This is sprea | \n266 | be threading, view controller li**fecycle,** code coupling, dynamic vs st | \n268 | Here's [a long wr**iteup][47],** with a lot of depth (an | \n288 | our interview seems to be the et**tiquette** in the US. I don't recall doi | \n299 | een given an offer. If it's a st**artup,** you might be offered equity. | \n301 | offer much there. But I have re**cieved** [some good][52] advice I'll p | \n309 | own blog. [Jekyll][54] is the de**facto** go-to in that space, but I kn | \n309 | ed using [middleman][55] and [hu**go][56].** Do not use Octopress, v | \n309 | 5] and [hugo][56]. Do not use Oc**topress,** vanilla Jekyll will do you j | \n311 | , talk about code. It took me 4 **years** to hit my first thousan | \n317 | ing to Open Source][61]: [Fix RE**ADMEs][62],** [improve documentation  | \n332 | - Video code-reviews: [Ei**dolon][72]** / [Emergence][73] - On t | \n#### [_posts/2016-06-19-graphql-for-mobile.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-19-graphql-for-mobile.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | e and Runtime_. GraphQL is a [spec](http://facebook.github.io/gr | \n10 | m have as much control as the **backend.** | \n12 | what I've learned in the last **3** months of using it in [Eigen] | \n12 | last 3 months of using it in [Eigen](https://github.com/artsy/eig | \n48 | r data means your app is more **resiliant** to things outside of your con | \n50 | ld actually contain a list of **hrefs** instead of the model data, an | \n54 | singly) open-source, it's at [artsy/metaphysics](https://github.c | \n54 | g against a GraphQL server is **GraphiQL** - an IDE for exploring your A | \n54 | , but I can send you to [Clay **Allsop's](http://clayallsopp.com)** [Gra | \n54 | p's](http://clayallsopp.com) [**GraphQLHub](https://www.graphqlhub.com):** | \n56 | t link in a new window. Press **cmd** + enter to see the results. W | \n58 | ction APIs inside the GraphQL **spec.** | \n70 | eeded to be re-implemented in **3-4** clients. On the native side w | \n78 | tive/) for our flagship app, [Eigen](https://github.com/artsy/eig | \n101 | ors) gave GraphQL a try, and [welcome'd](https://github.com/artsy/met | \n#### [_posts/2016-06-29-code-spelunking-injection.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-29-code-spelunking-injection.markdown)\n\nLine | Typo |\n| --- | ------ |\n27 | take-risks) - the code we are **spelunking** through can feel foreign to m | \n27 | -C, and it's not got tests. [@**Johno1962][johnno1962]** described it to | \n27 | cribed it to me as being like **1997's** Objective-C. The end result o | \n31 | * **InjectionPlugin** - The user facing Xcode plugi | \n32 | * **InjectionLoader** - A Bundle used to skip patch | \n33 | * **iOSBundleTemplate** - A folder to a reference imp | \n34 | * **OSXBundleTemplate** - Same but for OSX Project | \n34 | BundleTemplate - Same but for **OSX** Project | \n42 | * **Recieves** a call to inject. | \n46 | lass][principal_class] in the **info.plist,** this class, `INPluginMenuCon | \n48 | u ( note: [interesting use of **c-structs** here][menu_structs] ) and sta | \n73 | everything went well, then a [**Bonjour][bonjour]** [service][bonjour_s | \n73 | thread and starts a infinite **runloop** checking for new connections | \n73 | nections on the [socket every **0.5** seconds][socket_runloop]. | \n75 | unning][bbrowser_running] in [**Bonjour** Browser][bbrowser]. So, what | \n87 | tarts at `injectSource` [from **INPluginMenuController][inject_source].** | \n91 | ence to the currently running **LLDB** session, the console in the b | \n95 | d, then requests a pause from **LLDB,** allowing the plugin to send | \n103 | for file changes inside your **Xcodeproject.** | \n105 | injection work is done inside **perl** scripts, another new language | \n105 | nd of `injectSource` it runs [**injectSource.pl][injection_source_pl]** with an | \n107 | a lot of ground-work for the **perl** scripts is done inside [commo | \n107 | perl scripts is done inside [**common.pm][common_pm]** - which is a modu | \n109 | setup, maintain and amend an **xcodeproject** that compiles just the class | \n111 | rts out by copying a template **xcodeproject** (either `iOSBundleTemplate` o | \n117 | a reference to the build log **dirs** for the [derived data][derive | \n117 | compiling a single class from **Eigen** looks like][a_build_log] (I'v | \n117 | ly, this is called the learnt **db.** | \n119 | The learnt **db** is used to compile a class to | \n127 | With the `Logs` **dir** being a symlink to the derive | \n133 | or which tells the server the **filepath** of the now compiled `Injectio | \n139 | Alright, back to [the **INPluginClientController][INPluginClientController].** S | \n141 | going on from the high level **thoughout** this [connection setup functi | \n143 | console's info label to that **filepath,** this is the `BundleContents. | \n144 | om a storyboard (not too sure **whats** going on there TBH) | \n144 | too sure whats going on there **TBH)** | \n162 | stand this, we need to grok a **1,200** LOC header file `:D`, it | \n162 | and this, we need to grok a 1,**200** LOC header file `:D`, it has | \n162 | this, we need to grok a 1,200 **LOC** header file `:D`, it has a fe | \n162 | n try work through those, to [**BundleInjection.h][BundleInjection.h].** Interest | \n162 | this file inside your `/tmp/` **dir.** | \n176 | two responsibilities - using **Bonjour** to find the server, and raw s | \n176 | e is nothing unique about the **Bonjour** mutlicast work, so I'm skippi | \n176 | hing unique about the Bonjour **mutlicast** work, so I'm skipping that. O | \n180 | so][param_setup] it sets up [**INParameters** and INColors][tunable] for tu | \n180 | it sets up [INParameters and **INColors][tunable]** for tunable paramet | \n182 | mpt to connect to the server, **5** times. | \n185 | e some][nib_swizzling] of the **UINib** init functions. | \n185 | ][nib_swizzling] of the UINib **init** functions. | \n188 | om there the socket goes into **runloop** mode on it's on thread. | \n190 | #### Client Socket **Runloop** | \n194 | ects, then Re-creates the app **degelate** + view controller hierarchy. | \n198 | te_image] an `NS/UIImage` via **NSData** for Tunable Parameters. | \n215 | * A global **NSNotification** for . | \n219 | of quoting the README that [@**Johno1962][johnno1962]** and I worked on | \n225 | ects that are referred to via **sharedInstance.** If that fails, well, Injecti | \n258 | ibrary. These bundles contain **2** files `Info.plist`, `Injectio | \n258 | ide the bundle that is linked **ar** runtime (and thus dynamically | \n260 | c library info][dl_lib_info] [**struct][dl_struct]** and uses [dladdr] | \n260 | [struct][dl_struct] and uses [**dladdr][dladdr]** to fill the struct, | \n260 | [dladdr][dladdr] to fill the **struct,** based on the function pointe | \n262 | classlist] `__classlist` via [**getsectdatafromheader][getsectdatafromheader]** for t | \n262 | log post][objc_reverse] from [**Zynamics][zynamics].** Injection then lo | \n262 | rary, via the most [intensely **casted][class_references]** line in of | \n264 | es]. If you don't know what a **vtable** is check this [page on Wikipe | \n272 | see if the class's instances **reponds** to `- injected` if it does, i | \n272 | tances of the objects in it's **liveObjects** array. If the array hasn't be | \n274 | Injection has an [**Xprobe][xprobe]-lite** included inside | \n274 | ction has an [Xprobe][xprobe]-**lite** included inside it. This live | \n274 | ded inside it. This lives in [**BundleSweeper.h][BundleSweeper.h].** The quote | \n274 | on above gave the start away, **BundleSweeper** [looks at the app delegate][b | \n274 | elegate][bprobe_seed] ( or a [**Cocos2D** director object][cocos2d]) an | \n274 | and \"reference\" classes e.g [**NSBlock][NSBlock],** [NSData][NSData], | \n274 | sses e.g [NSBlock][NSBlock], [**NSData][NSData],** NSString, NSValue e | \n274 | ][NSBlock], [NSData][NSData], **NSString,** NSValue etc. The `bsweep` fu | \n274 | , [NSData][NSData], NSString, **NSValue** etc. The `bsweep` function ad | \n274 | ot then it loops through the [**IvarList][ivar_list]** and runs `bsweep` | \n278 | l the fancy class an instance **nofications** sorted, there is a good old r | \n278 | what I based my [work on for **Eigen][eigen_injection],** super simp | \n286 | wed a draft of this post to [@**Johno1962][johnno1962]** he reminded me t | \n286 | er read][diamond_reloader] at **120** LOC. However, can't understan | \n286 | ead][diamond_reloader] at 120 **LOC.** However, can't understand th | \n293 | easy to understand without c/**Mach-o** domain knowledge. It's making | \n293 | like Storyboards, Android via **Apportable,** ARC and no-ARC, 32bit vs 64b | \n293 | a Apportable, ARC and no-ARC, **32bit** vs 64bit and iOS vs Mac where | \n293 | ble, ARC and no-ARC, 32bit vs **64bit** and iOS vs Mac where things s | \n295 | As of Xcode **8,** Xcode Plugins are on the way | \n301 | this kind of stuff, follow [@**Johno1962][johnno1962]** on Twitter, he's | \n301 | ohnno1962] on Twitter, he's [@**Injection4Xcode][Injection4Xcode]** - Chris Lat | \n301 | ode][Injection4Xcode] - Chris **Lattner** follows him, so you know it's | \n301 | ome project that is pushing a **boundry** or two. | \n#### [_posts/2016-08-15-React-Native-at-Artsy.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-08-15-React-Native-at-Artsy.markdown)\n\nLine | Typo |\n| --- | ------ |\n28 | application and entirely in [**2** other apps](http://artsy.gith | \n49 | _everywhere_ in no time; **593** packages to be exactly, at th | \n69 | a lot that you would get with **UIKit** for free, e.g. `UICollectionV | \n94 | compose them to make complex **UIs.** | \n116 | once, write anywhere.” is the **neo-cross-platform** slogan deployed by React, whi | \n130 | [flexbox](https://en.wikipedia.org/wik | \n131 | ound classic CSS, I find that **flexbox** is an abstraction that nicely | \n139 | attern is not as ingrained in **UIKit** thus usually leading to more | \n140 | replacements such as [**AsyncDisplayKit](http://asyncdisplaykit.org).** | \n147 | than with your typical native **UIKit-based** | \n151 | it out, unlike e.g. Xcode and **UIKit.** (Granted, you | \n175 | ks with our application-wide [SDWebImage](https://cocoapods.org/pods/S | \n186 | about React Native. Follow [@ArtsyOpenSource](https://twitter.com/ArtsyOpe | \n#### [_posts/2016-11-14-JS-Glossary.md](/artsy/artsy.github.io/tree/swift/_posts/2016-11-14-JS-Glossary.md)\n\nLine | Typo |\n| --- | ------ |\n10 | environment now, and can try **summerize** a lot of topics. This should | \n99 | a much deeper explanation in [**uberVU/react-guide][react-guide]** | \n177 | Yarn is a NPM replacement (**ish)** by Facebook. It's very new. | \n195 | ### **Webpack** | \n197 | an be easy to confuse Babel + **Webpack,** so in simple: | \n200 | * **Webpack** will take source code and mer | \n202 | hey work at different scopes. **Webpack** is mainly a web front-end too | \n250 | hat JavaScript was created in **10** days, which is a cute anecdot | \n250 | ript has evolved for the next **21** years. The JavaScript you wro | \n250 | ars. The JavaScript you wrote **10** years ago would still run, ho | \n256 | JavaScript called ECMAScript **6.** | \n264 | cts. Quite a SemVer jump from **6** to 201**6**. | \n264 | Quite a SemVer jump from 6 to **2016.** | \n270 | [believe starting][stages] at **0,** and working up to 4. 0 Idea, | \n270 | ages] at 0, and working up to **4.** 0 Idea, 1 Proposal, 2 Draft, | \n270 | s] at **0**, and working up to 4. **0** Idea, 1 Proposal, 2 Draft, 3 | \n270 | and working up to 4. 0 Idea, **1** Proposal, 2 Draft, 3 Accepted | \n270 | up to 4. 0 Idea, 1 Proposal, **2** Draft, 3 Accepted and 4 Done. | \n270 | 0 Idea, 1 Proposal, 2 Draft, **3** Accepted and 4 Done. | \n270 | osal, 2 Draft, 3 Accepted and **4** Done. | \n272 | So a ECMAScript Stage **0** feature is going to be really | \n272 | er the number, the longer the **spec** has been discussed, and the m | \n274 | d these improvements are the [**TC39][tc39]** committee, the cool bi | \n297 | packaging JavaScript called [**CommonJS][commonjs].** It was replaced b | \n301 | pt has classes introduced in [**es6](#es6),** this means that inste | \n332 | not an implementation,” and “**favor** object composition over class | \n336 | So, classes - it took **20ish** years before they happened? B | \n338 | Danger I do almost exclusive **OOP** in JavaScript, sometimes the | \n398 | Introduced in ECMAScript **5.1,** it provides a way to [opt-in | \n499 | haracters but having the same **behavior.** | \n501 | , but it's not the only one. [**Rollup][rollup]** is considered the de | \n501 | it is in [babel](#babel) and [**webpack](#babel)** also. | \n563 | r my experiences with [making **PRs][inline-mac]** to VS Code. Type | \n579 | could probably do it in about **2** days using a Babel plugin, th | \n581 | volve further, then help them **stablize** and mature. | \n#### [_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md)\n\nLine | Typo |\n| --- | ------ |\n13 | ers of node, and for the last **4** years the stable stack for th | \n13 | ript + Express + Backbone. In **2016** the mobile team [announced][r | \n15 | parate dev teams for building **Artsy.net** and the corresponding iOS app | \n15 | llector Mobile. By the end of **2016** we decided to merge the teams | \n17 | stack for web/native Artsy in **2017.** | \n25 | Our web stack has been [**ezel.js][ezel]** since 2013, and contin | \n25 | as been [ezel.js][ezel] since **2013,** and continues to be a mature | \n25 | using React and GraphQL with [**muraljs][mural].** However, since the m | \n51 | n VS Code, and tried learning **OCaml** to help out on the [Flow tool | \n65 | er can conform to the GraphQL **spec,** and then clients can make qu | \n86 | ld actually contain a list of **hrefs** instead of the model data, an | \n90 | ive of a native developer [in **2016][mob-graph].** So I'll leave th | \n207 | y's local cache, and then any **un-cached** items are requested from the | \n221 | roject that replaces the NPM [**cli][cli]** client. It's very new, | \n221 | e a fresh re-write of the NPM **cli** would look like. | \n223 | node modules as with the NPM **cli.** | \n246 | change in one source file and **60** tests run from 6 different te | \n246 | ce file and **6**0 tests run from **6** different test suites. Finish | \n272 | , if I changed the background **color** to `blue` from `white`. I get | \n278 | **No **config**** - When we first integrated | \n278 | st integrated Jest, we had no **config.** Now, to make sure that TypeS | \n278 | ns for: Babel, TypeScript and **webpack.** Three of the biggest modern | \n280 | s, useful JSON output, ESLint **linters,** Elegant Mocking tools and na | \n282 | ferent testing frameworks in [**jest-codemods][jest-codemods]** - getting sta | \n282 | 'd also recommend looking at [**wallaby.js][wallaby]** and [vscode-jest][v | \n294 | of this culture came from the **TextMate** and Rails days with the infam | \n294 | ys with the infamous [blog in **15** minutes video][tm-blog]. When | \n296 | and IDEs where you have fully **spec'd** out projects. | \n298 | able to have project specific **setups** is where VS Code really start | \n321 | sound a bit corporate for a ~**25** person dev team, but one chie | \n329 | ound Facebook tech, based on [**three20][three20]** - which I think is | \n329 | ve shown to be really open to **PRs** and discussion, and our work | \n#### [_posts/2017-02-05-Retrospective-Swift-at-Artsy.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Retrospective-Swift-at-Artsy.md)\n\nLine | Typo |\n| --- | ------ |\n14 | Swift became public in June **2014,** by August we had started usi | \n16 | on Apple platforms. It was a **no-brainer** to then build an [appleTV app | \n16 | no-brainer to then build an [**appleTV** app][emergence] in Swift, int | \n16 | wift-support into our key app **Eigen** and built non-trivial parts o | \n18 | with React Native in February **2016,** and by August **2016,** we annou | \n18 | February **2016,** and by August **2016,** we announced that [Artsy mov | \n22 | ct Native][react-n], and our [**1-year** summary][summary]. | \n26 | rew. Building anything inside **Eigen** rarely re-used existing nativ | \n26 | till eventually it would take **2** iOS engineers to build a feat | \n28 | By [March **2015][gave_up],** we gave up trying | \n30 | this?\" Over the course of the **2015** winter break we explored idea | \n36 | [**Eigen][eigen]** is an app where we ta | \n36 | data and mapping it to a UI. [**Eidolon][eidolon]** (our Auctions Kiosk | \n36 | . [Emergence][emergence] is a **trivial-ish** tvOS app which has a few view | \n36 | ][emergence] is a trivial-ish **tvOS** app which has a few view cont | \n40 | **Eigen** is where we worried about how | \n40 | e limited in their scope, but **Eigen** is basically the mobile repre | \n40 | going to have something like **Eigen.** | \n42 | needed to re-think our entire **UIKit** stack for Eigen. Strictly spe | \n42 | nk our entire UIKit stack for **Eigen.** Strictly speaking, Objective | \n46 | In the end, for **Eigen,** we came to the conclusion th | \n51 | hich would have ended up like **Spotify's** ([hub][hub]) or Hyperslo's ([ | \n51 | ike Spotify's ([hub][hub]) or **Hyperslo's** ([Spots][spots]) ). | \n62 | The majority of the team had **5+** years of Cocoa experience an | \n74 | OS apps. From libraries like [**Moya][moya],** to foundational proje | \n76 | . This is what happened with [**Moya][moya].** It's a pattern Baseca | \n76 | [Moya][moya]. It's a pattern **Basecamp** discuss when they [talk about | \n84 | Think of apps with their own **filetypes,** that can control inputs and | \n86 | rking with an API is for most **3rd** party developers it should co | \n88 | peaking, don't have. They use **iCloud,** or CloudKit, or whatever, an | \n88 | n't have. They use iCloud, or **CloudKit,** or whatever, and expect you | \n96 | n. A trivial string change in **Eigen** takes [25 seconds][eigen_25] | \n96 | string change in Eigen takes [**25** seconds][eigen_**25**] to show up | \n98 | single edit in a string takes **25** seconds to see the difference | \n98 | ference in the swift parts of **Eigen** <a href=\"https://t.co/MOPGPEW | \n98 | ref=\"https://t.co/MOPGPEWqxX\">**pic.twitter.com/MOPGPEWqxX</a></p>&mdash;** 💍r | \n98 | o/MOPGPEWqxX\">pic.twitter.com/**MOPGPEWqxX</a></p>&mdash;** 💍rta Therox ( | \n98 | m/MOPGPEWqxX</a></p>&mdash; 💍r**ta** Therox (@or**ta**) <a href=\"https | \n98 | PGPEWqxX</a></p>&mdash; 💍rta T**herox** (@orta) <a href=\"https://twit | \n98 | 778242899821621249\">September 2**0,** 2016</a></blockquote></cente | \n98 | 42899821621249\">September 20, 2**016</a></blockquote></center>** | \n100 | talked to Apple engineers at W**WDC,** the idea was dismissed as \"d | \n102 | me of these problems, and the K**ickstarter** app has probably the closest | \n121 | _S**idenote:_** I found it hard to write th | \n121 | encing a sibling article: [JS 2**017][js-2017].** | \n127 | > References from JS 2**017:** [Relay][relay], [Jest][jest] | \n133 | r Apple first and then for us 3**rd** party devs. Outside influence | \n133 | language is Open Source (and [S**wiftPM][swiftpm])** | \n135 | a common word for it, being [S**herlocked][sherlocked].** The project I'v | \n135 | he project I've worked on for 5 **years,** CocoaPods, had an anno | \n135 | had an announcement of being s**herlocked** in late-2015 - you just have | \n135 | cement of being sherlocked in l**ate-2015** - you just have to deal with | \n137 | n\" dir=\"ltr\">Alfred, Dropbox, S**napchat,** Parse, OpenGL, Objective-C… | \n137 | <br>Quite the body count this W**WDC.</p>&mdash;** Mattt (@mattt) <a | \n137 | y count this WWDC.</p>&mdash; M**attt** (@m**attt**) <a href=\"https://twi | \n137 | this WWDC.</p>&mdash; Mattt (@m**attt)** <a href=\"https://twitter.com | \n137 | atus/473544723118837760\">June 2**,** 2014</a></blockquote> <scrip | \n137 | s/473544723118837760\">June 2, 2**014</a></blockquote>** <script asyn | \n141 | makes it tough for us, as the 3**rd** party community, to build use | \n143 | mpare Jest to either Quick or S**pecta.** Then remember that only Appl | \n145 | > Reference from JS 2**017:** [Jest][jest] | \n157 | rface API (either the DOM, or U**IKit.)** | \n163 | > References from JS 2**017:** [React][react], [Relay][rela | \n165 | running simultaneously as you a**rer** building your application. Im | \n167 | d make your changes. <em>From 2**5** seconds, to less than one</em | \n173 | > Reference from JS 2**017:** [TypeScript][typescript] | \n179 | he dev team. Artsy has around 2**5** developers, the majority of w | \n183 | of the company. For the past 5 **years,** the native mobile proj | \n185 | h the web team. At the end of 2**015,** the Collector Web team intro | \n187 | > Reference from JS 2**017:** [GraphQL][graphql] | \n189 | t a rough prototype ported in 2 **days** work. By working at Reac | \n197 | r skills would continue to be s**iloed.** | \n207 | evel of our application above U**IKit** and we can fork it. All our t | \n209 | no concepts like, _\"We'll use S**teipete's** fork of UIKit for UIPopover r | \n209 | \"We'll use Steipete's fork of U**IKit** for UIPopover rotation fixes\" | \n209 | Steipete's fork of UIKit for U**IPopover** rotation fixes\"_ or _\"My vers | \n213 | > Reference from JS 2**017:** [VS Code][code] | \n215 | much easier to live with the [5**93** dependencies](/blog/2016/08/1 | \n219 | With Swift the language, and S**wiftPM** the package manager, Apple ar | \n219 | ift-pm-slack], Mailing Lists, J**IRA** and Twitter. | \n223 | ks4] _weeks_ during the Swift 2 **->** 3 migration. Having the la | \n223 | _weeks_ during the Swift 2 -> 3 **migration.** Having the languag | \n227 | . So here's the summary after 1 **year.** | \n252 | - Run through the [f**8** app][f**8**] series on  [makeitop | \n252 | the [f8 app][f8] series on  [m**akeitopen.com][f8-open].** | \n259 | - [s**craphold](https://scaphold.io).** | \n260 | - [g**raphcool](https://www.graph.cool/).** | \n\n\n### Spell Checker found issues\n\n#### [_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown](/artsy/artsy.github.io/tree/swift/_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown)\n\nLine | Typo |\n| --- | ------ |\n18 | ncies as being things in your **Podfile,** but it's a bit more nuanced | \n38 | `xcodebuild` either via Xcode/**AppCode/Vim** as a part of our individu | \n48 | ndexes). The Quality Indexes (**QIs)** are a series of metrics that | \n48 | enerate a single number that [**cocoapods.org](http://cocoapods.org)** uses f | \n48 | rse of a year. Here are a few **QIs** that matter a lot to me: | \n51 | a CHANGELOG and uses internal **appledoc/headerdoc.** | \n51 | OG and uses internal appledoc/**headerdoc.** | \n62 | poline for message passing on **64** bit processors sucks. Relying | \n64 | one involved. Examples being [NAMapKit](https://cocoapods.org/pods/N | \n64 | apods.org/pods/NAMapKit) and [Specta](https://cocoapods.org/pods/S | \n64 | //cocoapods.org/pods/Specta)/[Expecta](https://cocoapods.org/pods/E | \n81 | system similar to CocoaPods' **subspecs** which lets a library consumer | \n83 | **ReactiveCocoa** feels quite similar. In excha | \n85 | * Swizzling **dealloc** on objects in order to do it' | \n85 | cts in order to do it's magic **KVO-unbinding** at runtime. | \n86 | tead you can use their custom **dtrace** instrument. | \n89 | happily made in exchange for **ReactiveCocoa's** well thought out API. Functio | \n93 | pecific task. Something like [ObjectiveSugar](https://cocoapods.org/pods/O | \n99 | One such example has been **ReactiveCocoa.** While they are free to make | \n101 | s such a pleasure. We've sent **PRs,**  helped out on [documentatio | \n105 | rly, but coming back at Swift **2.0** feels good. We just started i | \n107 | d chunk of time over the last **6** months discussing and testing | \n111 | uld we want this in more than **2** apps\" at the moment. This is | \n113 | -sink, we've been supporting [ARAnalytics](https://cocoapods.org/pods/A | \n113 | ods.org/pods/ARAnalytics) for **4** years now and nearly all feat | \n113 | rly all features for the last **3** years have come from external | \n113 | ation up to date takes time. [Moya](https://cocoapods.org/pods/M | \n115 | ok forwards to doing that to [ORStackView](https://cocoapods.org/pods/O | \n115 | when everyone is building for **iOS9+.** | \n119 | in dependency\". The CocoaPods **QIs** can give you a sense of what | \n#### [_posts/2016-01-30-iOS-Junior-Interviews.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-01-30-iOS-Junior-Interviews.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | good explanation is in [this **StackOverflow][1].** | \n20 | ][2]. However, in this [post @**dbgrandi][3]** neatly sums up the lower | \n24 | SON to present some data in a **UITableView.** | \n28 | r a lot of things, and that's **ok.** | \n34 | - [**StackOverflow** jobs][4] | \n38 | - [@**xcodejobs][8]** | \n40 | irst programming job through [**CocoaDev** Jobs][9]. | \n42 | s in the city. In NYC we have **3-4** big iOS meet-ups a month, and | \n42 | , I almost became a full-time **rubyist** because of it. I have quite a | \n44 | Artsy's job postings are on [**AngelList][10]** and [Glassdoor][11] but | \n44 | s are on [AngelList][10] and [**Glassdoor][11]** but the vast majority of | \n44 | nkedIn][13], [Hired][14] and [**weworkremotely][15]** are probably worth a loo | \n56 | These are **15-30** minute informal chats, but fr | \n56 | u'll usually get a yes. Tamar **Nachmany** has some [great, salient poin | \n62 | lived for most of my life (\\~**25** years) about 2 hours train ri | \n62 | of my life (\\~**2**5 years) about **2** hours train ride from Manches | \n64 | ould work out well for mentor/**mentoree.** You'd need the entire compan | \n76 | t's amazing that there is now **1** billion active users a day. I | \n80 | e position first through Orta **Therox,** who spoke highly of Artsy. | \n82 | world, with a thorough mix of **math,** software engineering, and ar | \n82 | in our society, as I did with **500px.** | \n84 | _**10/10._** Extremely on topic. | \n84 | _10/**10._** Extremely on topic. | \n88 | GitHub, have written for the **Teehan+Lax** blog professionally, and | \n96 | _**10/10_** ✔ | \n96 | _10/**10_** ✔ | \n98 | ground, I just graduated from **NYU** with a B.S. in Electrical Eng | \n98 | ust graduated from NYU with a **B.S.** in Electrical Engineering and | \n98 | ary (a home security hardware **startup).** While I do enjoy building h | \n116 | - [**2007][23]** as a part of the WWDC St | \n116 | - [2007][23] as a part of the **WWDC** Student Scholarship. It was s | \n117 | - [**2008][24]** as a graduate applying f | \n118 | - [**2008][25]** as a graduate applying f | \n119 | - [**2010][26]** when applying for jobs o | \n120 | - [**2015][27]** my CV as a part of my U. | \n120 | 15][27] my CV as a part of my **U.S.** VISA process. | \n157 | tions happening over the last **8** years, but the tone of how I | \n159 | onsider my personal web-page [**orta.io][28]** to act as a portfolio, A | \n196 | _More **infö** that I've reviewed and given | \n199 | * [8 **Minute** Guide to Writing a Res | \n204 | you think being a engineer at S**potify** would be a dream job. How do | \n206 | test out the water. Then for S**potify,** you should make sure everyth | \n208 | ompanies have public employee g**et-togethers,** for example at Artsy we have | \n208 | d the curtain. In the case of S**potify,** they host a lot of meet-ups, | \n214 | t IMO is a solid resource is [CameronBanga/iOS-Developer-and-Designer-In | \n230 | e real interviews in the last 2 **years.** | \n234 | Have a Technical Interview at Ma**coscope][43]** - Again, probably a bit | \n240 | nvest probably something like 10 **hours** into you. This is sprea | \n266 | be threading, view controller li**fecycle,** code coupling, dynamic vs st | \n268 | Here's [a long wr**iteup][47],** with a lot of depth (an | \n288 | our interview seems to be the et**tiquette** in the US. I don't recall doi | \n299 | een given an offer. If it's a st**artup,** you might be offered equity. | \n301 | offer much there. But I have re**cieved** [some good][52] advice I'll p | \n309 | own blog. [Jekyll][54] is the de**facto** go-to in that space, but I kn | \n309 | ed using [middleman][55] and [hu**go][56].** Do not use Octopress, v | \n309 | 5] and [hugo][56]. Do not use Oc**topress,** vanilla Jekyll will do you j | \n311 | , talk about code. It took me 4 **years** to hit my first thousan | \n317 | ing to Open Source][61]: [Fix RE**ADMEs][62],** [improve documentation  | \n332 | - Video code-reviews: [Ei**dolon][72]** / [Emergence][73] - On t | \n#### [_posts/2016-06-19-graphql-for-mobile.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-19-graphql-for-mobile.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | e and Runtime_. GraphQL is a [spec](http://facebook.github.io/gr | \n10 | m have as much control as the **backend.** | \n12 | what I've learned in the last **3** months of using it in [Eigen] | \n12 | last 3 months of using it in [Eigen](https://github.com/artsy/eig | \n48 | r data means your app is more **resiliant** to things outside of your con | \n50 | ld actually contain a list of **hrefs** instead of the model data, an | \n54 | singly) open-source, it's at [artsy/metaphysics](https://github.c | \n54 | g against a GraphQL server is **GraphiQL** - an IDE for exploring your A | \n54 | , but I can send you to [Clay **Allsop's](http://clayallsopp.com)** [Gra | \n54 | p's](http://clayallsopp.com) [**GraphQLHub](https://www.graphqlhub.com):** | \n56 | t link in a new window. Press **cmd** + enter to see the results. W | \n58 | ction APIs inside the GraphQL **spec.** | \n70 | eeded to be re-implemented in **3-4** clients. On the native side w | \n78 | tive/) for our flagship app, [Eigen](https://github.com/artsy/eig | \n101 | ors) gave GraphQL a try, and [welcome'd](https://github.com/artsy/met | \n#### [_posts/2016-06-29-code-spelunking-injection.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-29-code-spelunking-injection.markdown)\n\nLine | Typo |\n| --- | ------ |\n27 | take-risks) - the code we are **spelunking** through can feel foreign to m | \n27 | -C, and it's not got tests. [@**Johno1962][johnno1962]** described it to | \n27 | cribed it to me as being like **1997's** Objective-C. The end result o | \n31 | * **InjectionPlugin** - The user facing Xcode plugi | \n32 | * **InjectionLoader** - A Bundle used to skip patch | \n33 | * **iOSBundleTemplate** - A folder to a reference imp | \n34 | * **OSXBundleTemplate** - Same but for OSX Project | \n34 | BundleTemplate - Same but for **OSX** Project | \n42 | * **Recieves** a call to inject. | \n46 | lass][principal_class] in the **info.plist,** this class, `INPluginMenuCon | \n48 | u ( note: [interesting use of **c-structs** here][menu_structs] ) and sta | \n73 | everything went well, then a [**Bonjour][bonjour]** [service][bonjour_s | \n73 | thread and starts a infinite **runloop** checking for new connections | \n73 | nections on the [socket every **0.5** seconds][socket_runloop]. | \n75 | unning][bbrowser_running] in [**Bonjour** Browser][bbrowser]. So, what | \n87 | tarts at `injectSource` [from **INPluginMenuController][inject_source].** | \n91 | ence to the currently running **LLDB** session, the console in the b | \n95 | d, then requests a pause from **LLDB,** allowing the plugin to send | \n103 | for file changes inside your **Xcodeproject.** | \n105 | injection work is done inside **perl** scripts, another new language | \n105 | nd of `injectSource` it runs [**injectSource.pl][injection_source_pl]** with an | \n107 | a lot of ground-work for the **perl** scripts is done inside [commo | \n107 | perl scripts is done inside [**common.pm][common_pm]** - which is a modu | \n109 | setup, maintain and amend an **xcodeproject** that compiles just the class | \n111 | rts out by copying a template **xcodeproject** (either `iOSBundleTemplate` o | \n117 | a reference to the build log **dirs** for the [derived data][derive | \n117 | compiling a single class from **Eigen** looks like][a_build_log] (I'v | \n117 | ly, this is called the learnt **db.** | \n119 | The learnt **db** is used to compile a class to | \n127 | With the `Logs` **dir** being a symlink to the derive | \n133 | or which tells the server the **filepath** of the now compiled `Injectio | \n139 | Alright, back to [the **INPluginClientController][INPluginClientController].** S | \n141 | going on from the high level **thoughout** this [connection setup functi | \n143 | console's info label to that **filepath,** this is the `BundleContents. | \n144 | om a storyboard (not too sure **whats** going on there TBH) | \n144 | too sure whats going on there **TBH)** | \n162 | stand this, we need to grok a **1,200** LOC header file `:D`, it | \n162 | and this, we need to grok a 1,**200** LOC header file `:D`, it has | \n162 | this, we need to grok a 1,200 **LOC** header file `:D`, it has a fe | \n162 | n try work through those, to [**BundleInjection.h][BundleInjection.h].** Interest | \n162 | this file inside your `/tmp/` **dir.** | \n176 | two responsibilities - using **Bonjour** to find the server, and raw s | \n176 | e is nothing unique about the **Bonjour** mutlicast work, so I'm skippi | \n176 | hing unique about the Bonjour **mutlicast** work, so I'm skipping that. O | \n180 | so][param_setup] it sets up [**INParameters** and INColors][tunable] for tu | \n180 | it sets up [INParameters and **INColors][tunable]** for tunable paramet | \n182 | mpt to connect to the server, **5** times. | \n185 | e some][nib_swizzling] of the **UINib** init functions. | \n185 | ][nib_swizzling] of the UINib **init** functions. | \n188 | om there the socket goes into **runloop** mode on it's on thread. | \n190 | #### Client Socket **Runloop** | \n194 | ects, then Re-creates the app **degelate** + view controller hierarchy. | \n198 | te_image] an `NS/UIImage` via **NSData** for Tunable Parameters. | \n215 | * A global **NSNotification** for . | \n219 | of quoting the README that [@**Johno1962][johnno1962]** and I worked on | \n225 | ects that are referred to via **sharedInstance.** If that fails, well, Injecti | \n258 | ibrary. These bundles contain **2** files `Info.plist`, `Injectio | \n258 | ide the bundle that is linked **ar** runtime (and thus dynamically | \n260 | c library info][dl_lib_info] [**struct][dl_struct]** and uses [dladdr] | \n260 | [struct][dl_struct] and uses [**dladdr][dladdr]** to fill the struct, | \n260 | [dladdr][dladdr] to fill the **struct,** based on the function pointe | \n262 | classlist] `__classlist` via [**getsectdatafromheader][getsectdatafromheader]** for t | \n262 | log post][objc_reverse] from [**Zynamics][zynamics].** Injection then lo | \n262 | rary, via the most [intensely **casted][class_references]** line in of | \n264 | es]. If you don't know what a **vtable** is check this [page on Wikipe | \n272 | see if the class's instances **reponds** to `- injected` if it does, i | \n272 | tances of the objects in it's **liveObjects** array. If the array hasn't be | \n274 | Injection has an [**Xprobe][xprobe]-lite** included inside | \n274 | ction has an [Xprobe][xprobe]-**lite** included inside it. This live | \n274 | ded inside it. This lives in [**BundleSweeper.h][BundleSweeper.h].** The quote | \n274 | on above gave the start away, **BundleSweeper** [looks at the app delegate][b | \n274 | elegate][bprobe_seed] ( or a [**Cocos2D** director object][cocos2d]) an | \n274 | and \"reference\" classes e.g [**NSBlock][NSBlock],** [NSData][NSData], | \n274 | sses e.g [NSBlock][NSBlock], [**NSData][NSData],** NSString, NSValue e | \n274 | ][NSBlock], [NSData][NSData], **NSString,** NSValue etc. The `bsweep` fu | \n274 | , [NSData][NSData], NSString, **NSValue** etc. The `bsweep` function ad | \n274 | ot then it loops through the [**IvarList][ivar_list]** and runs `bsweep` | \n278 | l the fancy class an instance **nofications** sorted, there is a good old r | \n278 | what I based my [work on for **Eigen][eigen_injection],** super simp | \n286 | wed a draft of this post to [@**Johno1962][johnno1962]** he reminded me t | \n286 | er read][diamond_reloader] at **120** LOC. However, can't understan | \n286 | ead][diamond_reloader] at 120 **LOC.** However, can't understand th | \n293 | easy to understand without c/**Mach-o** domain knowledge. It's making | \n293 | like Storyboards, Android via **Apportable,** ARC and no-ARC, 32bit vs 64b | \n293 | a Apportable, ARC and no-ARC, **32bit** vs 64bit and iOS vs Mac where | \n293 | ble, ARC and no-ARC, 32bit vs **64bit** and iOS vs Mac where things s | \n295 | As of Xcode **8,** Xcode Plugins are on the way | \n301 | this kind of stuff, follow [@**Johno1962][johnno1962]** on Twitter, he's | \n301 | ohnno1962] on Twitter, he's [@**Injection4Xcode][Injection4Xcode]** - Chris Lat | \n301 | ode][Injection4Xcode] - Chris **Lattner** follows him, so you know it's | \n301 | ome project that is pushing a **boundry** or two. | \n#### [_posts/2016-08-15-React-Native-at-Artsy.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-08-15-React-Native-at-Artsy.markdown)\n\nLine | Typo |\n| --- | ------ |\n28 | application and entirely in [**2** other apps](http://artsy.gith | \n49 | _everywhere_ in no time; **593** packages to be exactly, at th | \n69 | a lot that you would get with **UIKit** for free, e.g. `UICollectionV | \n94 | compose them to make complex **UIs.** | \n116 | once, write anywhere.” is the **neo-cross-platform** slogan deployed by React, whi | \n130 | [flexbox](https://en.wikipedia.org/wik | \n131 | ound classic CSS, I find that **flexbox** is an abstraction that nicely | \n139 | attern is not as ingrained in **UIKit** thus usually leading to more | \n140 | replacements such as [**AsyncDisplayKit](http://asyncdisplaykit.org).** | \n147 | than with your typical native **UIKit-based** | \n151 | it out, unlike e.g. Xcode and **UIKit.** (Granted, you | \n175 | ks with our application-wide [SDWebImage](https://cocoapods.org/pods/S | \n186 | about React Native. Follow [@ArtsyOpenSource](https://twitter.com/ArtsyOpe | \n#### [_posts/2016-11-14-JS-Glossary.md](/artsy/artsy.github.io/tree/swift/_posts/2016-11-14-JS-Glossary.md)\n\nLine | Typo |\n| --- | ------ |\n10 | environment now, and can try **summerize** a lot of topics. This should | \n99 | a much deeper explanation in [**uberVU/react-guide][react-guide]** | \n177 | Yarn is a NPM replacement (**ish)** by Facebook. It's very new. | \n195 | ### **Webpack** | \n197 | an be easy to confuse Babel + **Webpack,** so in simple: | \n200 | * **Webpack** will take source code and mer | \n202 | hey work at different scopes. **Webpack** is mainly a web front-end too | \n250 | hat JavaScript was created in **10** days, which is a cute anecdot | \n250 | ript has evolved for the next **21** years. The JavaScript you wro | \n250 | ars. The JavaScript you wrote **10** years ago would still run, ho | \n256 | JavaScript called ECMAScript **6.** | \n264 | cts. Quite a SemVer jump from **6** to 201**6**. | \n264 | Quite a SemVer jump from 6 to **2016.** | \n270 | [believe starting][stages] at **0,** and working up to 4. 0 Idea, | \n270 | ages] at 0, and working up to **4.** 0 Idea, 1 Proposal, 2 Draft, | \n270 | s] at **0**, and working up to 4. **0** Idea, 1 Proposal, 2 Draft, 3 | \n270 | and working up to 4. 0 Idea, **1** Proposal, 2 Draft, 3 Accepted | \n270 | up to 4. 0 Idea, 1 Proposal, **2** Draft, 3 Accepted and 4 Done. | \n270 | 0 Idea, 1 Proposal, 2 Draft, **3** Accepted and 4 Done. | \n270 | osal, 2 Draft, 3 Accepted and **4** Done. | \n272 | So a ECMAScript Stage **0** feature is going to be really | \n272 | er the number, the longer the **spec** has been discussed, and the m | \n274 | d these improvements are the [**TC39][tc39]** committee, the cool bi | \n297 | packaging JavaScript called [**CommonJS][commonjs].** It was replaced b | \n301 | pt has classes introduced in [**es6](#es6),** this means that inste | \n332 | not an implementation,” and “**favor** object composition over class | \n336 | So, classes - it took **20ish** years before they happened? B | \n338 | Danger I do almost exclusive **OOP** in JavaScript, sometimes the | \n398 | Introduced in ECMAScript **5.1,** it provides a way to [opt-in | \n499 | haracters but having the same **behavior.** | \n501 | , but it's not the only one. [**Rollup][rollup]** is considered the de | \n501 | it is in [babel](#babel) and [**webpack](#babel)** also. | \n563 | r my experiences with [making **PRs][inline-mac]** to VS Code. Type | \n579 | could probably do it in about **2** days using a Babel plugin, th | \n581 | volve further, then help them **stablize** and mature. | \n#### [_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md)\n\nLine | Typo |\n| --- | ------ |\n13 | ers of node, and for the last **4** years the stable stack for th | \n13 | ript + Express + Backbone. In **2016** the mobile team [announced][r | \n15 | parate dev teams for building **Artsy.net** and the corresponding iOS app | \n15 | llector Mobile. By the end of **2016** we decided to merge the teams | \n17 | stack for web/native Artsy in **2017.** | \n25 | Our web stack has been [**ezel.js][ezel]** since 2013, and contin | \n25 | as been [ezel.js][ezel] since **2013,** and continues to be a mature | \n25 | using React and GraphQL with [**muraljs][mural].** However, since the m | \n51 | n VS Code, and tried learning **OCaml** to help out on the [Flow tool | \n65 | er can conform to the GraphQL **spec,** and then clients can make qu | \n86 | ld actually contain a list of **hrefs** instead of the model data, an | \n90 | ive of a native developer [in **2016][mob-graph].** So I'll leave th | \n207 | y's local cache, and then any **un-cached** items are requested from the | \n221 | roject that replaces the NPM [**cli][cli]** client. It's very new, | \n221 | e a fresh re-write of the NPM **cli** would look like. | \n223 | node modules as with the NPM **cli.** | \n246 | change in one source file and **60** tests run from 6 different te | \n246 | ce file and **6**0 tests run from **6** different test suites. Finish | \n272 | , if I changed the background **color** to `blue` from `white`. I get | \n278 | **No **config**** - When we first integrated | \n278 | st integrated Jest, we had no **config.** Now, to make sure that TypeS | \n278 | ns for: Babel, TypeScript and **webpack.** Three of the biggest modern | \n280 | s, useful JSON output, ESLint **linters,** Elegant Mocking tools and na | \n282 | ferent testing frameworks in [**jest-codemods][jest-codemods]** - getting sta | \n282 | 'd also recommend looking at [**wallaby.js][wallaby]** and [vscode-jest][v | \n294 | of this culture came from the **TextMate** and Rails days with the infam | \n294 | ys with the infamous [blog in **15** minutes video][tm-blog]. When | \n296 | and IDEs where you have fully **spec'd** out projects. | \n298 | able to have project specific **setups** is where VS Code really start | \n321 | sound a bit corporate for a ~**25** person dev team, but one chie | \n329 | ound Facebook tech, based on [**three20][three20]** - which I think is | \n329 | ve shown to be really open to **PRs** and discussion, and our work | \n#### [_posts/2017-02-05-Retrospective-Swift-at-Artsy.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Retrospective-Swift-at-Artsy.md)\n\nLine | Typo |\n| --- | ------ |\n14 | Swift became public in June **2014,** by August we had started usi | \n16 | on Apple platforms. It was a **no-brainer** to then build an [appleTV app | \n16 | no-brainer to then build an [**appleTV** app][emergence] in Swift, int | \n16 | wift-support into our key app **Eigen** and built non-trivial parts o | \n18 | with React Native in February **2016,** and by August **2016,** we annou | \n18 | February **2016,** and by August **2016,** we announced that [Artsy mov | \n22 | ct Native][react-n], and our [**1-year** summary][summary]. | \n26 | rew. Building anything inside **Eigen** rarely re-used existing nativ | \n26 | till eventually it would take **2** iOS engineers to build a feat | \n28 | By [March **2015][gave_up],** we gave up trying | \n30 | this?\" Over the course of the **2015** winter break we explored idea | \n36 | [**Eigen][eigen]** is an app where we ta | \n36 | data and mapping it to a UI. [**Eidolon][eidolon]** (our Auctions Kiosk | \n36 | . [Emergence][emergence] is a **trivial-ish** tvOS app which has a few view | \n36 | ][emergence] is a trivial-ish **tvOS** app which has a few view cont | \n40 | **Eigen** is where we worried about how | \n40 | e limited in their scope, but **Eigen** is basically the mobile repre | \n40 | going to have something like **Eigen.** | \n42 | needed to re-think our entire **UIKit** stack for Eigen. Strictly spe | \n42 | nk our entire UIKit stack for **Eigen.** Strictly speaking, Objective | \n46 | In the end, for **Eigen,** we came to the conclusion th | \n51 | hich would have ended up like **Spotify's** ([hub][hub]) or Hyperslo's ([ | \n51 | ike Spotify's ([hub][hub]) or **Hyperslo's** ([Spots][spots]) ). | \n62 | The majority of the team had **5+** years of Cocoa experience an | \n74 | OS apps. From libraries like [**Moya][moya],** to foundational proje | \n76 | . This is what happened with [**Moya][moya].** It's a pattern Baseca | \n76 | [Moya][moya]. It's a pattern **Basecamp** discuss when they [talk about | \n84 | Think of apps with their own **filetypes,** that can control inputs and | \n86 | rking with an API is for most **3rd** party developers it should co | \n88 | peaking, don't have. They use **iCloud,** or CloudKit, or whatever, an | \n88 | n't have. They use iCloud, or **CloudKit,** or whatever, and expect you | \n96 | n. A trivial string change in **Eigen** takes [25 seconds][eigen_25] | \n96 | string change in Eigen takes [**25** seconds][eigen_**25**] to show up | \n98 | single edit in a string takes **25** seconds to see the difference | \n98 | ference in the swift parts of **Eigen** <a href=\"https://t.co/MOPGPEW | \n98 | ref=\"https://t.co/MOPGPEWqxX\">**pic.twitter.com/MOPGPEWqxX</a></p>&mdash;** 💍r | \n98 | o/MOPGPEWqxX\">pic.twitter.com/**MOPGPEWqxX</a></p>&mdash;** 💍rta Therox ( | \n98 | m/MOPGPEWqxX</a></p>&mdash; 💍r**ta** Therox (@or**ta**) <a href=\"https | \n98 | PGPEWqxX</a></p>&mdash; 💍rta T**herox** (@orta) <a href=\"https://twit | \n98 | 778242899821621249\">September 2**0,** 2016</a></blockquote></cente | \n98 | 42899821621249\">September 20, 2**016</a></blockquote></center>** | \n100 | talked to Apple engineers at W**WDC,** the idea was dismissed as \"d | \n102 | me of these problems, and the K**ickstarter** app has probably the closest | \n121 | _S**idenote:_** I found it hard to write th | \n121 | encing a sibling article: [JS 2**017][js-2017].** | \n127 | > References from JS 2**017:** [Relay][relay], [Jest][jest] | \n133 | r Apple first and then for us 3**rd** party devs. Outside influence | \n133 | language is Open Source (and [S**wiftPM][swiftpm])** | \n135 | a common word for it, being [S**herlocked][sherlocked].** The project I'v | \n135 | he project I've worked on for 5 **years,** CocoaPods, had an anno | \n135 | had an announcement of being s**herlocked** in late-2015 - you just have | \n135 | cement of being sherlocked in l**ate-2015** - you just have to deal with | \n137 | n\" dir=\"ltr\">Alfred, Dropbox, S**napchat,** Parse, OpenGL, Objective-C… | \n137 | <br>Quite the body count this W**WDC.</p>&mdash;** Mattt (@mattt) <a | \n137 | y count this WWDC.</p>&mdash; M**attt** (@m**attt**) <a href=\"https://twi | \n137 | this WWDC.</p>&mdash; Mattt (@m**attt)** <a href=\"https://twitter.com | \n137 | atus/473544723118837760\">June 2**,** 2014</a></blockquote> <scrip | \n137 | s/473544723118837760\">June 2, 2**014</a></blockquote>** <script asyn | \n141 | makes it tough for us, as the 3**rd** party community, to build use | \n143 | mpare Jest to either Quick or S**pecta.** Then remember that only Appl | \n145 | > Reference from JS 2**017:** [Jest][jest] | \n157 | rface API (either the DOM, or U**IKit.)** | \n163 | > References from JS 2**017:** [React][react], [Relay][rela | \n165 | running simultaneously as you a**rer** building your application. Im | \n167 | d make your changes. <em>From 2**5** seconds, to less than one</em | \n173 | > Reference from JS 2**017:** [TypeScript][typescript] | \n179 | he dev team. Artsy has around 2**5** developers, the majority of w | \n183 | of the company. For the past 5 **years,** the native mobile proj | \n185 | h the web team. At the end of 2**015,** the Collector Web team intro | \n187 | > Reference from JS 2**017:** [GraphQL][graphql] | \n189 | t a rough prototype ported in 2 **days** work. By working at Reac | \n197 | r skills would continue to be s**iloed.** | \n207 | evel of our application above U**IKit** and we can fork it. All our t | \n209 | no concepts like, _\"We'll use S**teipete's** fork of UIKit for UIPopover r | \n209 | \"We'll use Steipete's fork of U**IKit** for UIPopover rotation fixes\" | \n209 | Steipete's fork of UIKit for U**IPopover** rotation fixes\"_ or _\"My vers | \n213 | > Reference from JS 2**017:** [VS Code][code] | \n215 | much easier to live with the [5**93** dependencies](/blog/2016/08/1 | \n219 | With Swift the language, and S**wiftPM** the package manager, Apple ar | \n219 | ift-pm-slack], Mailing Lists, J**IRA** and Twitter. | \n223 | ks4] _weeks_ during the Swift 2 **->** 3 migration. Having the la | \n223 | _weeks_ during the Swift 2 -> 3 **migration.** Having the languag | \n227 | . So here's the summary after 1 **year.** | \n252 | - Run through the [f**8** app][f**8**] series on  [makeitop | \n252 | the [f8 app][f8] series on  [m**akeitopen.com][f8-open].** | \n259 | - [s**craphold](https://scaphold.io).** | \n260 | - [g**raphcool](https://www.graph.cool/).** | \n\n\n### Spell Checker found issues\n\n#### [_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown](/artsy/artsy.github.io/tree/swift/_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown)\n\nLine | Typo |\n| --- | ------ |\n18 | ncies as being things in your **Podfile,** but it's a bit more nuanced | \n38 | `xcodebuild` either via Xcode/**AppCode/Vim** as a part of our individu | \n48 | ndexes). The Quality Indexes (**QIs)** are a series of metrics that | \n48 | enerate a single number that [**cocoapods.org](http://cocoapods.org)** uses f | \n48 | rse of a year. Here are a few **QIs** that matter a lot to me: | \n51 | a CHANGELOG and uses internal **appledoc/headerdoc.** | \n51 | OG and uses internal appledoc/**headerdoc.** | \n62 | poline for message passing on **64** bit processors sucks. Relying | \n64 | one involved. Examples being [NAMapKit](https://cocoapods.org/pods/N | \n64 | apods.org/pods/NAMapKit) and [Specta](https://cocoapods.org/pods/S | \n64 | //cocoapods.org/pods/Specta)/[Expecta](https://cocoapods.org/pods/E | \n81 | system similar to CocoaPods' **subspecs** which lets a library consumer | \n83 | **ReactiveCocoa** feels quite similar. In excha | \n85 | * Swizzling **dealloc** on objects in order to do it' | \n85 | cts in order to do it's magic **KVO-unbinding** at runtime. | \n86 | tead you can use their custom **dtrace** instrument. | \n89 | happily made in exchange for **ReactiveCocoa's** well thought out API. Functio | \n93 | pecific task. Something like [ObjectiveSugar](https://cocoapods.org/pods/O | \n99 | One such example has been **ReactiveCocoa.** While they are free to make | \n101 | s such a pleasure. We've sent **PRs,**  helped out on [documentatio | \n105 | rly, but coming back at Swift **2.0** feels good. We just started i | \n107 | d chunk of time over the last **6** months discussing and testing | \n111 | uld we want this in more than **2** apps\" at the moment. This is | \n113 | -sink, we've been supporting [ARAnalytics](https://cocoapods.org/pods/A | \n113 | ods.org/pods/ARAnalytics) for **4** years now and nearly all feat | \n113 | rly all features for the last **3** years have come from external | \n113 | ation up to date takes time. [Moya](https://cocoapods.org/pods/M | \n115 | ok forwards to doing that to [ORStackView](https://cocoapods.org/pods/O | \n115 | when everyone is building for **iOS9+.** | \n119 | in dependency\". The CocoaPods **QIs** can give you a sense of what | \n#### [_posts/2016-01-30-iOS-Junior-Interviews.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-01-30-iOS-Junior-Interviews.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | good explanation is in [this **StackOverflow][1].** | \n20 | ][2]. However, in this [post @**dbgrandi][3]** neatly sums up the lower | \n24 | SON to present some data in a **UITableView.** | \n28 | r a lot of things, and that's **ok.** | \n34 | - [**StackOverflow** jobs][4] | \n38 | - [@**xcodejobs][8]** | \n40 | irst programming job through [**CocoaDev** Jobs][9]. | \n42 | s in the city. In NYC we have **3-4** big iOS meet-ups a month, and | \n42 | , I almost became a full-time **rubyist** because of it. I have quite a | \n44 | Artsy's job postings are on [**AngelList][10]** and [Glassdoor][11] but | \n44 | s are on [AngelList][10] and [**Glassdoor][11]** but the vast majority of | \n44 | nkedIn][13], [Hired][14] and [**weworkremotely][15]** are probably worth a loo | \n56 | These are **15-30** minute informal chats, but fr | \n56 | u'll usually get a yes. Tamar **Nachmany** has some [great, salient poin | \n62 | lived for most of my life (\\~**25** years) about 2 hours train ri | \n62 | of my life (\\~**2**5 years) about **2** hours train ride from Manches | \n64 | ould work out well for mentor/**mentoree.** You'd need the entire compan | \n76 | t's amazing that there is now **1** billion active users a day. I | \n80 | e position first through Orta **Therox,** who spoke highly of Artsy. | \n82 | world, with a thorough mix of **math,** software engineering, and ar | \n82 | in our society, as I did with **500px.** | \n84 | _**10/10._** Extremely on topic. | \n84 | _10/**10._** Extremely on topic. | \n88 | GitHub, have written for the **Teehan+Lax** blog professionally, and | \n96 | _**10/10_** ✔ | \n96 | _10/**10_** ✔ | \n98 | ground, I just graduated from **NYU** with a B.S. in Electrical Eng | \n98 | ust graduated from NYU with a **B.S.** in Electrical Engineering and | \n98 | ary (a home security hardware **startup).** While I do enjoy building h | \n116 | - [**2007][23]** as a part of the WWDC St | \n116 | - [2007][23] as a part of the **WWDC** Student Scholarship. It was s | \n117 | - [**2008][24]** as a graduate applying f | \n118 | - [**2008][25]** as a graduate applying f | \n119 | - [**2010][26]** when applying for jobs o | \n120 | - [**2015][27]** my CV as a part of my U. | \n120 | 15][27] my CV as a part of my **U.S.** VISA process. | \n157 | tions happening over the last **8** years, but the tone of how I | \n159 | onsider my personal web-page [**orta.io][28]** to act as a portfolio, A | \n196 | _More **infö** that I've reviewed and given | \n199 | * [8 **Minute** Guide to Writing a Res | \n204 | you think being a engineer at S**potify** would be a dream job. How do | \n206 | test out the water. Then for S**potify,** you should make sure everyth | \n208 | ompanies have public employee g**et-togethers,** for example at Artsy we have | \n208 | d the curtain. In the case of S**potify,** they host a lot of meet-ups, | \n214 | t IMO is a solid resource is [CameronBanga/iOS-Developer-and-Designer-In | \n230 | e real interviews in the last 2 **years.** | \n234 | Have a Technical Interview at Ma**coscope][43]** - Again, probably a bit | \n240 | nvest probably something like 10 **hours** into you. This is sprea | \n266 | be threading, view controller li**fecycle,** code coupling, dynamic vs st | \n268 | Here's [a long wr**iteup][47],** with a lot of depth (an | \n288 | our interview seems to be the et**tiquette** in the US. I don't recall doi | \n299 | een given an offer. If it's a st**artup,** you might be offered equity. | \n301 | offer much there. But I have re**cieved** [some good][52] advice I'll p | \n309 | own blog. [Jekyll][54] is the de**facto** go-to in that space, but I kn | \n309 | ed using [middleman][55] and [hu**go][56].** Do not use Octopress, v | \n309 | 5] and [hugo][56]. Do not use Oc**topress,** vanilla Jekyll will do you j | \n311 | , talk about code. It took me 4 **years** to hit my first thousan | \n317 | ing to Open Source][61]: [Fix RE**ADMEs][62],** [improve documentation  | \n332 | - Video code-reviews: [Ei**dolon][72]** / [Emergence][73] - On t | \n#### [_posts/2016-06-19-graphql-for-mobile.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-19-graphql-for-mobile.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | e and Runtime_. GraphQL is a [spec](http://facebook.github.io/gr | \n10 | m have as much control as the **backend.** | \n12 | what I've learned in the last **3** months of using it in [Eigen] | \n12 | last 3 months of using it in [Eigen](https://github.com/artsy/eig | \n48 | r data means your app is more **resiliant** to things outside of your con | \n50 | ld actually contain a list of **hrefs** instead of the model data, an | \n54 | singly) open-source, it's at [artsy/metaphysics](https://github.c | \n54 | g against a GraphQL server is **GraphiQL** - an IDE for exploring your A | \n54 | , but I can send you to [Clay **Allsop's](http://clayallsopp.com)** [Gra | \n54 | p's](http://clayallsopp.com) [**GraphQLHub](https://www.graphqlhub.com):** | \n56 | t link in a new window. Press **cmd** + enter to see the results. W | \n58 | ction APIs inside the GraphQL **spec.** | \n70 | eeded to be re-implemented in **3-4** clients. On the native side w | \n78 | tive/) for our flagship app, [Eigen](https://github.com/artsy/eig | \n101 | ors) gave GraphQL a try, and [welcome'd](https://github.com/artsy/met | \n#### [_posts/2016-06-29-code-spelunking-injection.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-29-code-spelunking-injection.markdown)\n\nLine | Typo |\n| --- | ------ |\n27 | take-risks) - the code we are **spelunking** through can feel foreign to m | \n27 | -C, and it's not got tests. [@**Johno1962][johnno1962]** described it to | \n27 | cribed it to me as being like **1997's** Objective-C. The end result o | \n31 | * **InjectionPlugin** - The user facing Xcode plugi | \n32 | * **InjectionLoader** - A Bundle used to skip patch | \n33 | * **iOSBundleTemplate** - A folder to a reference imp | \n34 | * **OSXBundleTemplate** - Same but for OSX Project | \n34 | BundleTemplate - Same but for **OSX** Project | \n42 | * **Recieves** a call to inject. | \n46 | lass][principal_class] in the **info.plist,** this class, `INPluginMenuCon | \n48 | u ( note: [interesting use of **c-structs** here][menu_structs] ) and sta | \n73 | everything went well, then a [**Bonjour][bonjour]** [service][bonjour_s | \n73 | thread and starts a infinite **runloop** checking for new connections | \n73 | nections on the [socket every **0.5** seconds][socket_runloop]. | \n75 | unning][bbrowser_running] in [**Bonjour** Browser][bbrowser]. So, what | \n87 | tarts at `injectSource` [from **INPluginMenuController][inject_source].** | \n91 | ence to the currently running **LLDB** session, the console in the b | \n95 | d, then requests a pause from **LLDB,** allowing the plugin to send | \n103 | for file changes inside your **Xcodeproject.** | \n105 | injection work is done inside **perl** scripts, another new language | \n105 | nd of `injectSource` it runs [**injectSource.pl][injection_source_pl]** with an | \n107 | a lot of ground-work for the **perl** scripts is done inside [commo | \n107 | perl scripts is done inside [**common.pm][common_pm]** - which is a modu | \n109 | setup, maintain and amend an **xcodeproject** that compiles just the class | \n111 | rts out by copying a template **xcodeproject** (either `iOSBundleTemplate` o | \n117 | a reference to the build log **dirs** for the [derived data][derive | \n117 | compiling a single class from **Eigen** looks like][a_build_log] (I'v | \n117 | ly, this is called the learnt **db.** | \n119 | The learnt **db** is used to compile a class to | \n127 | With the `Logs` **dir** being a symlink to the derive | \n133 | or which tells the server the **filepath** of the now compiled `Injectio | \n139 | Alright, back to [the **INPluginClientController][INPluginClientController].** S | \n141 | going on from the high level **thoughout** this [connection setup functi | \n143 | console's info label to that **filepath,** this is the `BundleContents. | \n144 | om a storyboard (not too sure **whats** going on there TBH) | \n144 | too sure whats going on there **TBH)** | \n162 | stand this, we need to grok a **1,200** LOC header file `:D`, it | \n162 | and this, we need to grok a 1,**200** LOC header file `:D`, it has | \n162 | this, we need to grok a 1,200 **LOC** header file `:D`, it has a fe | \n162 | n try work through those, to [**BundleInjection.h][BundleInjection.h].** Interest | \n162 | this file inside your `/tmp/` **dir.** | \n176 | two responsibilities - using **Bonjour** to find the server, and raw s | \n176 | e is nothing unique about the **Bonjour** mutlicast work, so I'm skippi | \n176 | hing unique about the Bonjour **mutlicast** work, so I'm skipping that. O | \n180 | so][param_setup] it sets up [**INParameters** and INColors][tunable] for tu | \n180 | it sets up [INParameters and **INColors][tunable]** for tunable paramet | \n182 | mpt to connect to the server, **5** times. | \n185 | e some][nib_swizzling] of the **UINib** init functions. | \n185 | ][nib_swizzling] of the UINib **init** functions. | \n188 | om there the socket goes into **runloop** mode on it's on thread. | \n190 | #### Client Socket **Runloop** | \n194 | ects, then Re-creates the app **degelate** + view controller hierarchy. | \n198 | te_image] an `NS/UIImage` via **NSData** for Tunable Parameters. | \n215 | * A global **NSNotification** for . | \n219 | of quoting the README that [@**Johno1962][johnno1962]** and I worked on | \n225 | ects that are referred to via **sharedInstance.** If that fails, well, Injecti | \n258 | ibrary. These bundles contain **2** files `Info.plist`, `Injectio | \n258 | ide the bundle that is linked **ar** runtime (and thus dynamically | \n260 | c library info][dl_lib_info] [**struct][dl_struct]** and uses [dladdr] | \n260 | [struct][dl_struct] and uses [**dladdr][dladdr]** to fill the struct, | \n260 | [dladdr][dladdr] to fill the **struct,** based on the function pointe | \n262 | classlist] `__classlist` via [**getsectdatafromheader][getsectdatafromheader]** for t | \n262 | log post][objc_reverse] from [**Zynamics][zynamics].** Injection then lo | \n262 | rary, via the most [intensely **casted][class_references]** line in of | \n264 | es]. If you don't know what a **vtable** is check this [page on Wikipe | \n272 | see if the class's instances **reponds** to `- injected` if it does, i | \n272 | tances of the objects in it's **liveObjects** array. If the array hasn't be | \n274 | Injection has an [**Xprobe][xprobe]-lite** included inside | \n274 | ction has an [Xprobe][xprobe]-**lite** included inside it. This live | \n274 | ded inside it. This lives in [**BundleSweeper.h][BundleSweeper.h].** The quote | \n274 | on above gave the start away, **BundleSweeper** [looks at the app delegate][b | \n274 | elegate][bprobe_seed] ( or a [**Cocos2D** director object][cocos2d]) an | \n274 | and \"reference\" classes e.g [**NSBlock][NSBlock],** [NSData][NSData], | \n274 | sses e.g [NSBlock][NSBlock], [**NSData][NSData],** NSString, NSValue e | \n274 | ][NSBlock], [NSData][NSData], **NSString,** NSValue etc. The `bsweep` fu | \n274 | , [NSData][NSData], NSString, **NSValue** etc. The `bsweep` function ad | \n274 | ot then it loops through the [**IvarList][ivar_list]** and runs `bsweep` | \n278 | l the fancy class an instance **nofications** sorted, there is a good old r | \n278 | what I based my [work on for **Eigen][eigen_injection],** super simp | \n286 | wed a draft of this post to [@**Johno1962][johnno1962]** he reminded me t | \n286 | er read][diamond_reloader] at **120** LOC. However, can't understan | \n286 | ead][diamond_reloader] at 120 **LOC.** However, can't understand th | \n293 | easy to understand without c/**Mach-o** domain knowledge. It's making | \n293 | like Storyboards, Android via **Apportable,** ARC and no-ARC, 32bit vs 64b | \n293 | a Apportable, ARC and no-ARC, **32bit** vs 64bit and iOS vs Mac where | \n293 | ble, ARC and no-ARC, 32bit vs **64bit** and iOS vs Mac where things s | \n295 | As of Xcode **8,** Xcode Plugins are on the way | \n301 | this kind of stuff, follow [@**Johno1962][johnno1962]** on Twitter, he's | \n301 | ohnno1962] on Twitter, he's [@**Injection4Xcode][Injection4Xcode]** - Chris Lat | \n301 | ode][Injection4Xcode] - Chris **Lattner** follows him, so you know it's | \n301 | ome project that is pushing a **boundry** or two. | \n#### [_posts/2016-08-15-React-Native-at-Artsy.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-08-15-React-Native-at-Artsy.markdown)\n\nLine | Typo |\n| --- | ------ |\n28 | application and entirely in [**2** other apps](http://artsy.gith | \n49 | _everywhere_ in no time; **593** packages to be exactly, at th | \n69 | a lot that you would get with **UIKit** for free, e.g. `UICollectionV | \n94 | compose them to make complex **UIs.** | \n116 | once, write anywhere.” is the **neo-cross-platform** slogan deployed by React, whi | \n130 | [flexbox](https://en.wikipedia.org/wik | \n131 | ound classic CSS, I find that **flexbox** is an abstraction that nicely | \n139 | attern is not as ingrained in **UIKit** thus usually leading to more | \n140 | replacements such as [**AsyncDisplayKit](http://asyncdisplaykit.org).** | \n147 | than with your typical native **UIKit-based** | \n151 | it out, unlike e.g. Xcode and **UIKit.** (Granted, you | \n175 | ks with our application-wide [SDWebImage](https://cocoapods.org/pods/S | \n186 | about React Native. Follow [@ArtsyOpenSource](https://twitter.com/ArtsyOpe | \n#### [_posts/2016-11-14-JS-Glossary.md](/artsy/artsy.github.io/tree/swift/_posts/2016-11-14-JS-Glossary.md)\n\nLine | Typo |\n| --- | ------ |\n10 | environment now, and can try **summerize** a lot of topics. This should | \n99 | a much deeper explanation in [**uberVU/react-guide][react-guide]** | \n177 | Yarn is a NPM replacement (**ish)** by Facebook. It's very new. | \n195 | ### **Webpack** | \n197 | an be easy to confuse Babel + **Webpack,** so in simple: | \n200 | * **Webpack** will take source code and mer | \n202 | hey work at different scopes. **Webpack** is mainly a web front-end too | \n250 | hat JavaScript was created in **10** days, which is a cute anecdot | \n250 | ript has evolved for the next **21** years. The JavaScript you wro | \n250 | ars. The JavaScript you wrote **10** years ago would still run, ho | \n256 | JavaScript called ECMAScript **6.** | \n264 | cts. Quite a SemVer jump from **6** to 201**6**. | \n264 | Quite a SemVer jump from 6 to **2016.** | \n270 | [believe starting][stages] at **0,** and working up to 4. 0 Idea, | \n270 | ages] at 0, and working up to **4.** 0 Idea, 1 Proposal, 2 Draft, | \n270 | s] at **0**, and working up to 4. **0** Idea, 1 Proposal, 2 Draft, 3 | \n270 | and working up to 4. 0 Idea, **1** Proposal, 2 Draft, 3 Accepted | \n270 | up to 4. 0 Idea, 1 Proposal, **2** Draft, 3 Accepted and 4 Done. | \n270 | 0 Idea, 1 Proposal, 2 Draft, **3** Accepted and 4 Done. | \n270 | osal, 2 Draft, 3 Accepted and **4** Done. | \n272 | So a ECMAScript Stage **0** feature is going to be really | \n272 | er the number, the longer the **spec** has been discussed, and the m | \n274 | d these improvements are the [**TC39][tc39]** committee, the cool bi | \n297 | packaging JavaScript called [**CommonJS][commonjs].** It was replaced b | \n301 | pt has classes introduced in [**es6](#es6),** this means that inste | \n332 | not an implementation,” and “**favor** object composition over class | \n336 | So, classes - it took **20ish** years before they happened? B | \n338 | Danger I do almost exclusive **OOP** in JavaScript, sometimes the | \n398 | Introduced in ECMAScript **5.1,** it provides a way to [opt-in | \n499 | haracters but having the same **behavior.** | \n501 | , but it's not the only one. [**Rollup][rollup]** is considered the de | \n501 | it is in [babel](#babel) and [**webpack](#babel)** also. | \n563 | r my experiences with [making **PRs][inline-mac]** to VS Code. Type | \n579 | could probably do it in about **2** days using a Babel plugin, th | \n581 | volve further, then help them **stablize** and mature. | \n#### [_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md)\n\nLine | Typo |\n| --- | ------ |\n13 | ers of node, and for the last **4** years the stable stack for th | \n13 | ript + Express + Backbone. In **2016** the mobile team [announced][r | \n15 | parate dev teams for building **Artsy.net** and the corresponding iOS app | \n15 | llector Mobile. By the end of **2016** we decided to merge the teams | \n17 | stack for web/native Artsy in **2017.** | \n25 | Our web stack has been [**ezel.js][ezel]** since 2013, and contin | \n25 | as been [ezel.js][ezel] since **2013,** and continues to be a mature | \n25 | using React and GraphQL with [**muraljs][mural].** However, since the m | \n51 | n VS Code, and tried learning **OCaml** to help out on the [Flow tool | \n65 | er can conform to the GraphQL **spec,** and then clients can make qu | \n86 | ld actually contain a list of **hrefs** instead of the model data, an | \n90 | ive of a native developer [in **2016][mob-graph].** So I'll leave th | \n207 | y's local cache, and then any **un-cached** items are requested from the | \n221 | roject that replaces the NPM [**cli][cli]** client. It's very new, | \n221 | e a fresh re-write of the NPM **cli** would look like. | \n223 | node modules as with the NPM **cli.** | \n246 | change in one source file and **60** tests run from 6 different te | \n246 | ce file and **6**0 tests run from **6** different test suites. Finish | \n272 | , if I changed the background **color** to `blue` from `white`. I get | \n278 | **No **config**** - When we first integrated | \n278 | st integrated Jest, we had no **config.** Now, to make sure that TypeS | \n278 | ns for: Babel, TypeScript and **webpack.** Three of the biggest modern | \n280 | s, useful JSON output, ESLint **linters,** Elegant Mocking tools and na | \n282 | ferent testing frameworks in [**jest-codemods][jest-codemods]** - getting sta | \n282 | 'd also recommend looking at [**wallaby.js][wallaby]** and [vscode-jest][v | \n294 | of this culture came from the **TextMate** and Rails days with the infam | \n294 | ys with the infamous [blog in **15** minutes video][tm-blog]. When | \n296 | and IDEs where you have fully **spec'd** out projects. | \n298 | able to have project specific **setups** is where VS Code really start | \n321 | sound a bit corporate for a ~**25** person dev team, but one chie | \n329 | ound Facebook tech, based on [**three20][three20]** - which I think is | \n329 | ve shown to be really open to **PRs** and discussion, and our work | \n#### [_posts/2017-02-05-Retrospective-Swift-at-Artsy.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Retrospective-Swift-at-Artsy.md)\n\nLine | Typo |\n| --- | ------ |\n14 | Swift became public in June **2014,** by August we had started usi | \n16 | on Apple platforms. It was a **no-brainer** to then build an [appleTV app | \n16 | no-brainer to then build an [**appleTV** app][emergence] in Swift, int | \n16 | wift-support into our key app **Eigen** and built non-trivial parts o | \n18 | with React Native in February **2016,** and by August **2016,** we annou | \n18 | February **2016,** and by August **2016,** we announced that [Artsy mov | \n22 | ct Native][react-n], and our [**1-year** summary][summary]. | \n26 | rew. Building anything inside **Eigen** rarely re-used existing nativ | \n26 | till eventually it would take **2** iOS engineers to build a feat | \n28 | By [March **2015][gave_up],** we gave up trying | \n30 | this?\" Over the course of the **2015** winter break we explored idea | \n36 | [**Eigen][eigen]** is an app where we ta | \n36 | data and mapping it to a UI. [**Eidolon][eidolon]** (our Auctions Kiosk | \n36 | . [Emergence][emergence] is a **trivial-ish** tvOS app which has a few view | \n36 | ][emergence] is a trivial-ish **tvOS** app which has a few view cont | \n40 | **Eigen** is where we worried about how | \n40 | e limited in their scope, but **Eigen** is basically the mobile repre | \n40 | going to have something like **Eigen.** | \n42 | needed to re-think our entire **UIKit** stack for Eigen. Strictly spe | \n42 | nk our entire UIKit stack for **Eigen.** Strictly speaking, Objective | \n46 | In the end, for **Eigen,** we came to the conclusion th | \n51 | hich would have ended up like **Spotify's** ([hub][hub]) or Hyperslo's ([ | \n51 | ike Spotify's ([hub][hub]) or **Hyperslo's** ([Spots][spots]) ). | \n62 | The majority of the team had **5+** years of Cocoa experience an | \n74 | OS apps. From libraries like [**Moya][moya],** to foundational proje | \n76 | . This is what happened with [**Moya][moya].** It's a pattern Baseca | \n76 | [Moya][moya]. It's a pattern **Basecamp** discuss when they [talk about | \n84 | Think of apps with their own **filetypes,** that can control inputs and | \n86 | rking with an API is for most **3rd** party developers it should co | \n88 | peaking, don't have. They use **iCloud,** or CloudKit, or whatever, an | \n88 | n't have. They use iCloud, or **CloudKit,** or whatever, and expect you | \n96 | n. A trivial string change in **Eigen** takes [25 seconds][eigen_25] | \n96 | string change in Eigen takes [**25** seconds][eigen_**25**] to show up | \n98 | single edit in a string takes **25** seconds to see the difference | \n98 | ference in the swift parts of **Eigen** <a href=\"https://t.co/MOPGPEW | \n98 | ref=\"https://t.co/MOPGPEWqxX\">**pic.twitter.com/MOPGPEWqxX</a></p>&mdash;** 💍r | \n98 | o/MOPGPEWqxX\">pic.twitter.com/**MOPGPEWqxX</a></p>&mdash;** 💍rta Therox ( | \n98 | m/MOPGPEWqxX</a></p>&mdash; 💍r**ta** Therox (@or**ta**) <a href=\"https | \n98 | PGPEWqxX</a></p>&mdash; 💍rta T**herox** (@orta) <a href=\"https://twit | \n98 | 778242899821621249\">September 2**0,** 2016</a></blockquote></cente | \n98 | 42899821621249\">September 20, 2**016</a></blockquote></center>** | \n100 | talked to Apple engineers at W**WDC,** the idea was dismissed as \"d | \n102 | me of these problems, and the K**ickstarter** app has probably the closest | \n121 | _S**idenote:_** I found it hard to write th | \n121 | encing a sibling article: [JS 2**017][js-2017].** | \n127 | > References from JS 2**017:** [Relay][relay], [Jest][jest] | \n133 | r Apple first and then for us 3**rd** party devs. Outside influence | \n133 | language is Open Source (and [S**wiftPM][swiftpm])** | \n135 | a common word for it, being [S**herlocked][sherlocked].** The project I'v | \n135 | he project I've worked on for 5 **years,** CocoaPods, had an anno | \n135 | had an announcement of being s**herlocked** in late-2015 - you just have | \n135 | cement of being sherlocked in l**ate-2015** - you just have to deal with | \n137 | n\" dir=\"ltr\">Alfred, Dropbox, S**napchat,** Parse, OpenGL, Objective-C… | \n137 | <br>Quite the body count this W**WDC.</p>&mdash;** Mattt (@mattt) <a | \n137 | y count this WWDC.</p>&mdash; M**attt** (@m**attt**) <a href=\"https://twi | \n137 | this WWDC.</p>&mdash; Mattt (@m**attt)** <a href=\"https://twitter.com | \n137 | atus/473544723118837760\">June 2**,** 2014</a></blockquote> <scrip | \n137 | s/473544723118837760\">June 2, 2**014</a></blockquote>** <script asyn | \n141 | makes it tough for us, as the 3**rd** party community, to build use | \n143 | mpare Jest to either Quick or S**pecta.** Then remember that only Appl | \n145 | > Reference from JS 2**017:** [Jest][jest] | \n157 | rface API (either the DOM, or U**IKit.)** | \n163 | > References from JS 2**017:** [React][react], [Relay][rela | \n165 | running simultaneously as you a**rer** building your application. Im | \n167 | d make your changes. <em>From 2**5** seconds, to less than one</em | \n173 | > Reference from JS 2**017:** [TypeScript][typescript] | \n179 | he dev team. Artsy has around 2**5** developers, the majority of w | \n183 | of the company. For the past 5 **years,** the native mobile proj | \n185 | h the web team. At the end of 2**015,** the Collector Web team intro | \n187 | > Reference from JS 2**017:** [GraphQL][graphql] | \n189 | t a rough prototype ported in 2 **days** work. By working at Reac | \n197 | r skills would continue to be s**iloed.** | \n207 | evel of our application above U**IKit** and we can fork it. All our t | \n209 | no concepts like, _\"We'll use S**teipete's** fork of UIKit for UIPopover r | \n209 | \"We'll use Steipete's fork of U**IKit** for UIPopover rotation fixes\" | \n209 | Steipete's fork of UIKit for U**IPopover** rotation fixes\"_ or _\"My vers | \n213 | > Reference from JS 2**017:** [VS Code][code] | \n215 | much easier to live with the [5**93** dependencies](/blog/2016/08/1 | \n219 | With Swift the language, and S**wiftPM** the package manager, Apple ar | \n219 | ift-pm-slack], Mailing Lists, J**IRA** and Twitter. | \n223 | ks4] _weeks_ during the Swift 2 **->** 3 migration. Having the la | \n223 | _weeks_ during the Swift 2 -> 3 **migration.** Having the languag | \n227 | . So here's the summary after 1 **year.** | \n252 | - Run through the [f**8** app][f**8**] series on  [makeitop | \n252 | the [f8 app][f8] series on  [m**akeitopen.com][f8-open].** | \n259 | - [s**craphold](https://scaphold.io).** | \n260 | - [g**raphcool](https://www.graph.cool/).** | \n\n\n### Spell Checker found issues\n\n#### [_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown](/artsy/artsy.github.io/tree/swift/_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown)\n\nLine | Typo |\n| --- | ------ |\n18 | ncies as being things in your **Podfile,** but it's a bit more nuanced | \n38 | `xcodebuild` either via Xcode/**AppCode/Vim** as a part of our individu | \n48 | ndexes). The Quality Indexes (**QIs)** are a series of metrics that | \n48 | enerate a single number that [**cocoapods.org](http://cocoapods.org)** uses f | \n48 | rse of a year. Here are a few **QIs** that matter a lot to me: | \n51 | a CHANGELOG and uses internal **appledoc/headerdoc.** | \n51 | OG and uses internal appledoc/**headerdoc.** | \n62 | poline for message passing on **64** bit processors sucks. Relying | \n64 | one involved. Examples being [NAMapKit](https://cocoapods.org/pods/N | \n64 | apods.org/pods/NAMapKit) and [Specta](https://cocoapods.org/pods/S | \n64 | //cocoapods.org/pods/Specta)/[Expecta](https://cocoapods.org/pods/E | \n81 | system similar to CocoaPods' **subspecs** which lets a library consumer | \n83 | **ReactiveCocoa** feels quite similar. In excha | \n85 | * Swizzling **dealloc** on objects in order to do it' | \n85 | cts in order to do it's magic **KVO-unbinding** at runtime. | \n86 | tead you can use their custom **dtrace** instrument. | \n89 | happily made in exchange for **ReactiveCocoa's** well thought out API. Functio | \n93 | pecific task. Something like [ObjectiveSugar](https://cocoapods.org/pods/O | \n99 | One such example has been **ReactiveCocoa.** While they are free to make | \n101 | s such a pleasure. We've sent **PRs,**  helped out on [documentatio | \n105 | rly, but coming back at Swift **2.0** feels good. We just started i | \n107 | d chunk of time over the last **6** months discussing and testing | \n111 | uld we want this in more than **2** apps\" at the moment. This is | \n113 | -sink, we've been supporting [ARAnalytics](https://cocoapods.org/pods/A | \n113 | ods.org/pods/ARAnalytics) for **4** years now and nearly all feat | \n113 | rly all features for the last **3** years have come from external | \n113 | ation up to date takes time. [Moya](https://cocoapods.org/pods/M | \n115 | ok forwards to doing that to [ORStackView](https://cocoapods.org/pods/O | \n115 | when everyone is building for **iOS9+.** | \n119 | in dependency\". The CocoaPods **QIs** can give you a sense of what | \n#### [_posts/2016-01-30-iOS-Junior-Interviews.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-01-30-iOS-Junior-Interviews.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | good explanation is in [this **StackOverflow][1].** | \n20 | ][2]. However, in this [post @**dbgrandi][3]** neatly sums up the lower | \n24 | SON to present some data in a **UITableView.** | \n28 | r a lot of things, and that's **ok.** | \n34 | - [**StackOverflow** jobs][4] | \n38 | - [@**xcodejobs][8]** | \n40 | irst programming job through [**CocoaDev** Jobs][9]. | \n42 | s in the city. In NYC we have **3-4** big iOS meet-ups a month, and | \n42 | , I almost became a full-time **rubyist** because of it. I have quite a | \n44 | Artsy's job postings are on [**AngelList][10]** and [Glassdoor][11] but | \n44 | s are on [AngelList][10] and [**Glassdoor][11]** but the vast majority of | \n44 | nkedIn][13], [Hired][14] and [**weworkremotely][15]** are probably worth a loo | \n56 | These are **15-30** minute informal chats, but fr | \n56 | u'll usually get a yes. Tamar **Nachmany** has some [great, salient poin | \n62 | lived for most of my life (\\~**25** years) about 2 hours train ri | \n62 | of my life (\\~**2**5 years) about **2** hours train ride from Manches | \n64 | ould work out well for mentor/**mentoree.** You'd need the entire compan | \n76 | t's amazing that there is now **1** billion active users a day. I | \n80 | e position first through Orta **Therox,** who spoke highly of Artsy. | \n82 | world, with a thorough mix of **math,** software engineering, and ar | \n82 | in our society, as I did with **500px.** | \n84 | _**10/10._** Extremely on topic. | \n84 | _10/**10._** Extremely on topic. | \n88 | GitHub, have written for the **Teehan+Lax** blog professionally, and | \n96 | _**10/10_** ✔ | \n96 | _10/**10_** ✔ | \n98 | ground, I just graduated from **NYU** with a B.S. in Electrical Eng | \n98 | ust graduated from NYU with a **B.S.** in Electrical Engineering and | \n98 | ary (a home security hardware **startup).** While I do enjoy building h | \n116 | - [**2007][23]** as a part of the WWDC St | \n116 | - [2007][23] as a part of the **WWDC** Student Scholarship. It was s | \n117 | - [**2008][24]** as a graduate applying f | \n118 | - [**2008][25]** as a graduate applying f | \n119 | - [**2010][26]** when applying for jobs o | \n120 | - [**2015][27]** my CV as a part of my U. | \n120 | 15][27] my CV as a part of my **U.S.** VISA process. | \n157 | tions happening over the last **8** years, but the tone of how I | \n159 | onsider my personal web-page [**orta.io][28]** to act as a portfolio, A | \n196 | _More **infö** that I've reviewed and given | \n199 | * [8 **Minute** Guide to Writing a Res | \n204 | you think being a engineer at S**potify** would be a dream job. How do | \n206 | test out the water. Then for S**potify,** you should make sure everyth | \n208 | ompanies have public employee g**et-togethers,** for example at Artsy we have | \n208 | d the curtain. In the case of S**potify,** they host a lot of meet-ups, | \n214 | t IMO is a solid resource is [CameronBanga/iOS-Developer-and-Designer-In | \n230 | e real interviews in the last 2 **years.** | \n234 | Have a Technical Interview at Ma**coscope][43]** - Again, probably a bit | \n240 | nvest probably something like 10 **hours** into you. This is sprea | \n266 | be threading, view controller li**fecycle,** code coupling, dynamic vs st | \n268 | Here's [a long wr**iteup][47],** with a lot of depth (an | \n288 | our interview seems to be the et**tiquette** in the US. I don't recall doi | \n299 | een given an offer. If it's a st**artup,** you might be offered equity. | \n301 | offer much there. But I have re**cieved** [some good][52] advice I'll p | \n309 | own blog. [Jekyll][54] is the de**facto** go-to in that space, but I kn | \n309 | ed using [middleman][55] and [hu**go][56].** Do not use Octopress, v | \n309 | 5] and [hugo][56]. Do not use Oc**topress,** vanilla Jekyll will do you j | \n311 | , talk about code. It took me 4 **years** to hit my first thousan | \n317 | ing to Open Source][61]: [Fix RE**ADMEs][62],** [improve documentation  | \n332 | - Video code-reviews: [Ei**dolon][72]** / [Emergence][73] - On t | \n#### [_posts/2016-06-19-graphql-for-mobile.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-19-graphql-for-mobile.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | e and Runtime_. GraphQL is a [spec](http://facebook.github.io/gr | \n10 | m have as much control as the **backend.** | \n12 | what I've learned in the last **3** months of using it in [Eigen] | \n12 | last 3 months of using it in [Eigen](https://github.com/artsy/eig | \n48 | r data means your app is more **resiliant** to things outside of your con | \n50 | ld actually contain a list of **hrefs** instead of the model data, an | \n54 | singly) open-source, it's at [artsy/metaphysics](https://github.c | \n54 | g against a GraphQL server is **GraphiQL** - an IDE for exploring your A | \n54 | , but I can send you to [Clay **Allsop's](http://clayallsopp.com)** [Gra | \n54 | p's](http://clayallsopp.com) [**GraphQLHub](https://www.graphqlhub.com):** | \n56 | t link in a new window. Press **cmd** + enter to see the results. W | \n58 | ction APIs inside the GraphQL **spec.** | \n70 | eeded to be re-implemented in **3-4** clients. On the native side w | \n78 | tive/) for our flagship app, [Eigen](https://github.com/artsy/eig | \n101 | ors) gave GraphQL a try, and [welcome'd](https://github.com/artsy/met | \n#### [_posts/2016-06-29-code-spelunking-injection.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-29-code-spelunking-injection.markdown)\n\nLine | Typo |\n| --- | ------ |\n27 | take-risks) - the code we are **spelunking** through can feel foreign to m | \n27 | -C, and it's not got tests. [@**Johno1962][johnno1962]** described it to | \n27 | cribed it to me as being like **1997's** Objective-C. The end result o | \n31 | * **InjectionPlugin** - The user facing Xcode plugi | \n32 | * **InjectionLoader** - A Bundle used to skip patch | \n33 | * **iOSBundleTemplate** - A folder to a reference imp | \n34 | * **OSXBundleTemplate** - Same but for OSX Project | \n34 | BundleTemplate - Same but for **OSX** Project | \n42 | * **Recieves** a call to inject. | \n46 | lass][principal_class] in the **info.plist,** this class, `INPluginMenuCon | \n48 | u ( note: [interesting use of **c-structs** here][menu_structs] ) and sta | \n73 | everything went well, then a [**Bonjour][bonjour]** [service][bonjour_s | \n73 | thread and starts a infinite **runloop** checking for new connections | \n73 | nections on the [socket every **0.5** seconds][socket_runloop]. | \n75 | unning][bbrowser_running] in [**Bonjour** Browser][bbrowser]. So, what | \n87 | tarts at `injectSource` [from **INPluginMenuController][inject_source].** | \n91 | ence to the currently running **LLDB** session, the console in the b | \n95 | d, then requests a pause from **LLDB,** allowing the plugin to send | \n103 | for file changes inside your **Xcodeproject.** | \n105 | injection work is done inside **perl** scripts, another new language | \n105 | nd of `injectSource` it runs [**injectSource.pl][injection_source_pl]** with an | \n107 | a lot of ground-work for the **perl** scripts is done inside [commo | \n107 | perl scripts is done inside [**common.pm][common_pm]** - which is a modu | \n109 | setup, maintain and amend an **xcodeproject** that compiles just the class | \n111 | rts out by copying a template **xcodeproject** (either `iOSBundleTemplate` o | \n117 | a reference to the build log **dirs** for the [derived data][derive | \n117 | compiling a single class from **Eigen** looks like][a_build_log] (I'v | \n117 | ly, this is called the learnt **db.** | \n119 | The learnt **db** is used to compile a class to | \n127 | With the `Logs` **dir** being a symlink to the derive | \n133 | or which tells the server the **filepath** of the now compiled `Injectio | \n139 | Alright, back to [the **INPluginClientController][INPluginClientController].** S | \n141 | going on from the high level **thoughout** this [connection setup functi | \n143 | console's info label to that **filepath,** this is the `BundleContents. | \n144 | om a storyboard (not too sure **whats** going on there TBH) | \n144 | too sure whats going on there **TBH)** | \n162 | stand this, we need to grok a **1,200** LOC header file `:D`, it | \n162 | and this, we need to grok a 1,**200** LOC header file `:D`, it has | \n162 | this, we need to grok a 1,200 **LOC** header file `:D`, it has a fe | \n162 | n try work through those, to [**BundleInjection.h][BundleInjection.h].** Interest | \n162 | this file inside your `/tmp/` **dir.** | \n176 | two responsibilities - using **Bonjour** to find the server, and raw s | \n176 | e is nothing unique about the **Bonjour** mutlicast work, so I'm skippi | \n176 | hing unique about the Bonjour **mutlicast** work, so I'm skipping that. O | \n180 | so][param_setup] it sets up [**INParameters** and INColors][tunable] for tu | \n180 | it sets up [INParameters and **INColors][tunable]** for tunable paramet | \n182 | mpt to connect to the server, **5** times. | \n185 | e some][nib_swizzling] of the **UINib** init functions. | \n185 | ][nib_swizzling] of the UINib **init** functions. | \n188 | om there the socket goes into **runloop** mode on it's on thread. | \n190 | #### Client Socket **Runloop** | \n194 | ects, then Re-creates the app **degelate** + view controller hierarchy. | \n198 | te_image] an `NS/UIImage` via **NSData** for Tunable Parameters. | \n215 | * A global **NSNotification** for . | \n219 | of quoting the README that [@**Johno1962][johnno1962]** and I worked on | \n225 | ects that are referred to via **sharedInstance.** If that fails, well, Injecti | \n258 | ibrary. These bundles contain **2** files `Info.plist`, `Injectio | \n258 | ide the bundle that is linked **ar** runtime (and thus dynamically | \n260 | c library info][dl_lib_info] [**struct][dl_struct]** and uses [dladdr] | \n260 | [struct][dl_struct] and uses [**dladdr][dladdr]** to fill the struct, | \n260 | [dladdr][dladdr] to fill the **struct,** based on the function pointe | \n262 | classlist] `__classlist` via [**getsectdatafromheader][getsectdatafromheader]** for t | \n262 | log post][objc_reverse] from [**Zynamics][zynamics].** Injection then lo | \n262 | rary, via the most [intensely **casted][class_references]** line in of | \n264 | es]. If you don't know what a **vtable** is check this [page on Wikipe | \n272 | see if the class's instances **reponds** to `- injected` if it does, i | \n272 | tances of the objects in it's **liveObjects** array. If the array hasn't be | \n274 | Injection has an [**Xprobe][xprobe]-lite** included inside | \n274 | ction has an [Xprobe][xprobe]-**lite** included inside it. This live | \n274 | ded inside it. This lives in [**BundleSweeper.h][BundleSweeper.h].** The quote | \n274 | on above gave the start away, **BundleSweeper** [looks at the app delegate][b | \n274 | elegate][bprobe_seed] ( or a [**Cocos2D** director object][cocos2d]) an | \n274 | and \"reference\" classes e.g [**NSBlock][NSBlock],** [NSData][NSData], | \n274 | sses e.g [NSBlock][NSBlock], [**NSData][NSData],** NSString, NSValue e | \n274 | ][NSBlock], [NSData][NSData], **NSString,** NSValue etc. The `bsweep` fu | \n274 | , [NSData][NSData], NSString, **NSValue** etc. The `bsweep` function ad | \n274 | ot then it loops through the [**IvarList][ivar_list]** and runs `bsweep` | \n278 | l the fancy class an instance **nofications** sorted, there is a good old r | \n278 | what I based my [work on for **Eigen][eigen_injection],** super simp | \n286 | wed a draft of this post to [@**Johno1962][johnno1962]** he reminded me t | \n286 | er read][diamond_reloader] at **120** LOC. However, can't understan | \n286 | ead][diamond_reloader] at 120 **LOC.** However, can't understand th | \n293 | easy to understand without c/**Mach-o** domain knowledge. It's making | \n293 | like Storyboards, Android via **Apportable,** ARC and no-ARC, 32bit vs 64b | \n293 | a Apportable, ARC and no-ARC, **32bit** vs 64bit and iOS vs Mac where | \n293 | ble, ARC and no-ARC, 32bit vs **64bit** and iOS vs Mac where things s | \n295 | As of Xcode **8,** Xcode Plugins are on the way | \n301 | this kind of stuff, follow [@**Johno1962][johnno1962]** on Twitter, he's | \n301 | ohnno1962] on Twitter, he's [@**Injection4Xcode][Injection4Xcode]** - Chris Lat | \n301 | ode][Injection4Xcode] - Chris **Lattner** follows him, so you know it's | \n301 | ome project that is pushing a **boundry** or two. | \n#### [_posts/2016-08-15-React-Native-at-Artsy.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-08-15-React-Native-at-Artsy.markdown)\n\nLine | Typo |\n| --- | ------ |\n28 | application and entirely in [**2** other apps](http://artsy.gith | \n49 | _everywhere_ in no time; **593** packages to be exactly, at th | \n69 | a lot that you would get with **UIKit** for free, e.g. `UICollectionV | \n94 | compose them to make complex **UIs.** | \n116 | once, write anywhere.” is the **neo-cross-platform** slogan deployed by React, whi | \n130 | [flexbox](https://en.wikipedia.org/wik | \n131 | ound classic CSS, I find that **flexbox** is an abstraction that nicely | \n139 | attern is not as ingrained in **UIKit** thus usually leading to more | \n140 | replacements such as [**AsyncDisplayKit](http://asyncdisplaykit.org).** | \n147 | than with your typical native **UIKit-based** | \n151 | it out, unlike e.g. Xcode and **UIKit.** (Granted, you | \n175 | ks with our application-wide [SDWebImage](https://cocoapods.org/pods/S | \n186 | about React Native. Follow [@ArtsyOpenSource](https://twitter.com/ArtsyOpe | \n#### [_posts/2016-11-14-JS-Glossary.md](/artsy/artsy.github.io/tree/swift/_posts/2016-11-14-JS-Glossary.md)\n\nLine | Typo |\n| --- | ------ |\n10 | environment now, and can try **summerize** a lot of topics. This should | \n99 | a much deeper explanation in [**uberVU/react-guide][react-guide]** | \n177 | Yarn is a NPM replacement (**ish)** by Facebook. It's very new. | \n195 | ### **Webpack** | \n197 | an be easy to confuse Babel + **Webpack,** so in simple: | \n200 | * **Webpack** will take source code and mer | \n202 | hey work at different scopes. **Webpack** is mainly a web front-end too | \n250 | hat JavaScript was created in **10** days, which is a cute anecdot | \n250 | ript has evolved for the next **21** years. The JavaScript you wro | \n250 | ars. The JavaScript you wrote **10** years ago would still run, ho | \n256 | JavaScript called ECMAScript **6.** | \n264 | cts. Quite a SemVer jump from **6** to 201**6**. | \n264 | Quite a SemVer jump from 6 to **2016.** | \n270 | [believe starting][stages] at **0,** and working up to 4. 0 Idea, | \n270 | ages] at 0, and working up to **4.** 0 Idea, 1 Proposal, 2 Draft, | \n270 | s] at **0**, and working up to 4. **0** Idea, 1 Proposal, 2 Draft, 3 | \n270 | and working up to 4. 0 Idea, **1** Proposal, 2 Draft, 3 Accepted | \n270 | up to 4. 0 Idea, 1 Proposal, **2** Draft, 3 Accepted and 4 Done. | \n270 | 0 Idea, 1 Proposal, 2 Draft, **3** Accepted and 4 Done. | \n270 | osal, 2 Draft, 3 Accepted and **4** Done. | \n272 | So a ECMAScript Stage **0** feature is going to be really | \n272 | er the number, the longer the **spec** has been discussed, and the m | \n274 | d these improvements are the [**TC39][tc39]** committee, the cool bi | \n297 | packaging JavaScript called [**CommonJS][commonjs].** It was replaced b | \n301 | pt has classes introduced in [**es6](#es6),** this means that inste | \n332 | not an implementation,” and “**favor** object composition over class | \n336 | So, classes - it took **20ish** years before they happened? B | \n338 | Danger I do almost exclusive **OOP** in JavaScript, sometimes the | \n398 | Introduced in ECMAScript **5.1,** it provides a way to [opt-in | \n499 | haracters but having the same **behavior.** | \n501 | , but it's not the only one. [**Rollup][rollup]** is considered the de | \n501 | it is in [babel](#babel) and [**webpack](#babel)** also. | \n563 | r my experiences with [making **PRs][inline-mac]** to VS Code. Type | \n579 | could probably do it in about **2** days using a Babel plugin, th | \n581 | volve further, then help them **stablize** and mature. | \n#### [_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md)\n\nLine | Typo |\n| --- | ------ |\n13 | ers of node, and for the last **4** years the stable stack for th | \n13 | ript + Express + Backbone. In **2016** the mobile team [announced][r | \n15 | parate dev teams for building **Artsy.net** and the corresponding iOS app | \n15 | llector Mobile. By the end of **2016** we decided to merge the teams | \n17 | stack for web/native Artsy in **2017.** | \n25 | Our web stack has been [**ezel.js][ezel]** since 2013, and contin | \n25 | as been [ezel.js][ezel] since **2013,** and continues to be a mature | \n25 | using React and GraphQL with [**muraljs][mural].** However, since the m | \n51 | n VS Code, and tried learning **OCaml** to help out on the [Flow tool | \n65 | er can conform to the GraphQL **spec,** and then clients can make qu | \n86 | ld actually contain a list of **hrefs** instead of the model data, an | \n90 | ive of a native developer [in **2016][mob-graph].** So I'll leave th | \n207 | y's local cache, and then any **un-cached** items are requested from the | \n221 | roject that replaces the NPM [**cli][cli]** client. It's very new, | \n221 | e a fresh re-write of the NPM **cli** would look like. | \n223 | node modules as with the NPM **cli.** | \n246 | change in one source file and **60** tests run from 6 different te | \n246 | ce file and **6**0 tests run from **6** different test suites. Finish | \n272 | , if I changed the background **color** to `blue` from `white`. I get | \n278 | **No **config**** - When we first integrated | \n278 | st integrated Jest, we had no **config.** Now, to make sure that TypeS | \n278 | ns for: Babel, TypeScript and **webpack.** Three of the biggest modern | \n280 | s, useful JSON output, ESLint **linters,** Elegant Mocking tools and na | \n282 | ferent testing frameworks in [**jest-codemods][jest-codemods]** - getting sta | \n282 | 'd also recommend looking at [**wallaby.js][wallaby]** and [vscode-jest][v | \n294 | of this culture came from the **TextMate** and Rails days with the infam | \n294 | ys with the infamous [blog in **15** minutes video][tm-blog]. When | \n296 | and IDEs where you have fully **spec'd** out projects. | \n298 | able to have project specific **setups** is where VS Code really start | \n321 | sound a bit corporate for a ~**25** person dev team, but one chie | \n329 | ound Facebook tech, based on [**three20][three20]** - which I think is | \n329 | ve shown to be really open to **PRs** and discussion, and our work | \n#### [_posts/2017-02-05-Retrospective-Swift-at-Artsy.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Retrospective-Swift-at-Artsy.md)\n\nLine | Typo |\n| --- | ------ |\n14 | Swift became public in June **2014,** by August we had started usi | \n16 | on Apple platforms. It was a **no-brainer** to then build an [appleTV app | \n16 | no-brainer to then build an [**appleTV** app][emergence] in Swift, int | \n16 | wift-support into our key app **Eigen** and built non-trivial parts o | \n18 | with React Native in February **2016,** and by August **2016,** we annou | \n18 | February **2016,** and by August **2016,** we announced that [Artsy mov | \n22 | ct Native][react-n], and our [**1-year** summary][summary]. | \n26 | rew. Building anything inside **Eigen** rarely re-used existing nativ | \n26 | till eventually it would take **2** iOS engineers to build a feat | \n28 | By [March **2015][gave_up],** we gave up trying | \n30 | this?\" Over the course of the **2015** winter break we explored idea | \n36 | [**Eigen][eigen]** is an app where we ta | \n36 | data and mapping it to a UI. [**Eidolon][eidolon]** (our Auctions Kiosk | \n36 | . [Emergence][emergence] is a **trivial-ish** tvOS app which has a few view | \n36 | ][emergence] is a trivial-ish **tvOS** app which has a few view cont | \n40 | **Eigen** is where we worried about how | \n40 | e limited in their scope, but **Eigen** is basically the mobile repre | \n40 | going to have something like **Eigen.** | \n42 | needed to re-think our entire **UIKit** stack for Eigen. Strictly spe | \n42 | nk our entire UIKit stack for **Eigen.** Strictly speaking, Objective | \n46 | In the end, for **Eigen,** we came to the conclusion th | \n51 | hich would have ended up like **Spotify's** ([hub][hub]) or Hyperslo's ([ | \n51 | ike Spotify's ([hub][hub]) or **Hyperslo's** ([Spots][spots]) ). | \n62 | The majority of the team had **5+** years of Cocoa experience an | \n74 | OS apps. From libraries like [**Moya][moya],** to foundational proje | \n76 | . This is what happened with [**Moya][moya].** It's a pattern Baseca | \n76 | [Moya][moya]. It's a pattern **Basecamp** discuss when they [talk about | \n84 | Think of apps with their own **filetypes,** that can control inputs and | \n86 | rking with an API is for most **3rd** party developers it should co | \n88 | peaking, don't have. They use **iCloud,** or CloudKit, or whatever, an | \n88 | n't have. They use iCloud, or **CloudKit,** or whatever, and expect you | \n96 | n. A trivial string change in **Eigen** takes [25 seconds][eigen_25] | \n96 | string change in Eigen takes [**25** seconds][eigen_**25**] to show up | \n98 | single edit in a string takes **25** seconds to see the difference | \n98 | ference in the swift parts of **Eigen** <a href=\"https://t.co/MOPGPEW | \n98 | ref=\"https://t.co/MOPGPEWqxX\">**pic.twitter.com/MOPGPEWqxX</a></p>&mdash;** 💍r | \n98 | o/MOPGPEWqxX\">pic.twitter.com/**MOPGPEWqxX</a></p>&mdash;** 💍rta Therox ( | \n98 | m/MOPGPEWqxX</a></p>&mdash; 💍r**ta** Therox (@or**ta**) <a href=\"https | \n98 | PGPEWqxX</a></p>&mdash; 💍rta T**herox** (@orta) <a href=\"https://twit | \n98 | 778242899821621249\">September 2**0,** 2016</a></blockquote></cente | \n98 | 42899821621249\">September 20, 2**016</a></blockquote></center>** | \n100 | talked to Apple engineers at W**WDC,** the idea was dismissed as \"d | \n102 | me of these problems, and the K**ickstarter** app has probably the closest | \n121 | _S**idenote:_** I found it hard to write th | \n121 | encing a sibling article: [JS 2**017][js-2017].** | \n127 | > References from JS 2**017:** [Relay][relay], [Jest][jest] | \n133 | r Apple first and then for us 3**rd** party devs. Outside influence | \n133 | language is Open Source (and [S**wiftPM][swiftpm])** | \n135 | a common word for it, being [S**herlocked][sherlocked].** The project I'v | \n135 | he project I've worked on for 5 **years,** CocoaPods, had an anno | \n135 | had an announcement of being s**herlocked** in late-2015 - you just have | \n135 | cement of being sherlocked in l**ate-2015** - you just have to deal with | \n137 | n\" dir=\"ltr\">Alfred, Dropbox, S**napchat,** Parse, OpenGL, Objective-C… | \n137 | <br>Quite the body count this W**WDC.</p>&mdash;** Mattt (@mattt) <a | \n137 | y count this WWDC.</p>&mdash; M**attt** (@m**attt**) <a href=\"https://twi | \n137 | this WWDC.</p>&mdash; Mattt (@m**attt)** <a href=\"https://twitter.com | \n137 | atus/473544723118837760\">June 2**,** 2014</a></blockquote> <scrip | \n137 | s/473544723118837760\">June 2, 2**014</a></blockquote>** <script asyn | \n141 | makes it tough for us, as the 3**rd** party community, to build use | \n143 | mpare Jest to either Quick or S**pecta.** Then remember that only Appl | \n145 | > Reference from JS 2**017:** [Jest][jest] | \n157 | rface API (either the DOM, or U**IKit.)** | \n163 | > References from JS 2**017:** [React][react], [Relay][rela | \n165 | running simultaneously as you a**rer** building your application. Im | \n167 | d make your changes. <em>From 2**5** seconds, to less than one</em | \n173 | > Reference from JS 2**017:** [TypeScript][typescript] | \n179 | he dev team. Artsy has around 2**5** developers, the majority of w | \n183 | of the company. For the past 5 **years,** the native mobile proj | \n185 | h the web team. At the end of 2**015,** the Collector Web team intro | \n187 | > Reference from JS 2**017:** [GraphQL][graphql] | \n189 | t a rough prototype ported in 2 **days** work. By working at Reac | \n197 | r skills would continue to be s**iloed.** | \n207 | evel of our application above U**IKit** and we can fork it. All our t | \n209 | no concepts like, _\"We'll use S**teipete's** fork of UIKit for UIPopover r | \n209 | \"We'll use Steipete's fork of U**IKit** for UIPopover rotation fixes\" | \n209 | Steipete's fork of UIKit for U**IPopover** rotation fixes\"_ or _\"My vers | \n213 | > Reference from JS 2**017:** [VS Code][code] | \n215 | much easier to live with the [5**93** dependencies](/blog/2016/08/1 | \n219 | With Swift the language, and S**wiftPM** the package manager, Apple ar | \n219 | ift-pm-slack], Mailing Lists, J**IRA** and Twitter. | \n223 | ks4] _weeks_ during the Swift 2 **->** 3 migration. Having the la | \n223 | _weeks_ during the Swift 2 -> 3 **migration.** Having the languag | \n227 | . So here's the summary after 1 **year.** | \n252 | - Run through the [f**8** app][f**8**] series on  [makeitop | \n252 | the [f8 app][f8] series on  [m**akeitopen.com][f8-open].** | \n259 | - [s**craphold](https://scaphold.io).** | \n260 | - [g**raphcool](https://www.graph.cool/).** | \n\n\n### Spell Checker found issues\n\n#### [_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown](/artsy/artsy.github.io/tree/swift/_posts/2015-09-18-Cocoa-Architecture-Dependencies.markdown)\n\nLine | Typo |\n| --- | ------ |\n18 | ncies as being things in your **Podfile,** but it's a bit more nuanced | \n38 | `xcodebuild` either via Xcode/**AppCode/Vim** as a part of our individu | \n48 | ndexes). The Quality Indexes (**QIs)** are a series of metrics that | \n48 | enerate a single number that [**cocoapods.org](http://cocoapods.org)** uses f | \n48 | rse of a year. Here are a few **QIs** that matter a lot to me: | \n51 | a CHANGELOG and uses internal **appledoc/headerdoc.** | \n51 | OG and uses internal appledoc/**headerdoc.** | \n62 | poline for message passing on **64** bit processors sucks. Relying | \n64 | one involved. Examples being [NAMapKit](https://cocoapods.org/pods/N | \n64 | apods.org/pods/NAMapKit) and [Specta](https://cocoapods.org/pods/S | \n64 | //cocoapods.org/pods/Specta)/[Expecta](https://cocoapods.org/pods/E | \n81 | system similar to CocoaPods' **subspecs** which lets a library consumer | \n83 | **ReactiveCocoa** feels quite similar. In excha | \n85 | * Swizzling **dealloc** on objects in order to do it' | \n85 | cts in order to do it's magic **KVO-unbinding** at runtime. | \n86 | tead you can use their custom **dtrace** instrument. | \n89 | happily made in exchange for **ReactiveCocoa's** well thought out API. Functio | \n93 | pecific task. Something like [ObjectiveSugar](https://cocoapods.org/pods/O | \n99 | One such example has been **ReactiveCocoa.** While they are free to make | \n101 | s such a pleasure. We've sent **PRs,**  helped out on [documentatio | \n105 | rly, but coming back at Swift **2.0** feels good. We just started i | \n107 | d chunk of time over the last **6** months discussing and testing | \n111 | uld we want this in more than **2** apps\" at the moment. This is | \n113 | -sink, we've been supporting [ARAnalytics](https://cocoapods.org/pods/A | \n113 | ods.org/pods/ARAnalytics) for **4** years now and nearly all feat | \n113 | rly all features for the last **3** years have come from external | \n113 | ation up to date takes time. [Moya](https://cocoapods.org/pods/M | \n115 | ok forwards to doing that to [ORStackView](https://cocoapods.org/pods/O | \n115 | when everyone is building for **iOS9+.** | \n119 | in dependency\". The CocoaPods **QIs** can give you a sense of what | \n#### [_posts/2016-01-30-iOS-Junior-Interviews.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-01-30-iOS-Junior-Interviews.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | good explanation is in [this **StackOverflow][1].** | \n20 | ][2]. However, in this [post @**dbgrandi][3]** neatly sums up the lower | \n24 | SON to present some data in a **UITableView.** | \n28 | r a lot of things, and that's **ok.** | \n34 | - [**StackOverflow** jobs][4] | \n38 | - [@**xcodejobs][8]** | \n40 | irst programming job through [**CocoaDev** Jobs][9]. | \n42 | s in the city. In NYC we have **3-4** big iOS meet-ups a month, and | \n42 | , I almost became a full-time **rubyist** because of it. I have quite a | \n44 | Artsy's job postings are on [**AngelList][10]** and [Glassdoor][11] but | \n44 | s are on [AngelList][10] and [**Glassdoor][11]** but the vast majority of | \n44 | nkedIn][13], [Hired][14] and [**weworkremotely][15]** are probably worth a loo | \n56 | These are **15-30** minute informal chats, but fr | \n56 | u'll usually get a yes. Tamar **Nachmany** has some [great, salient poin | \n62 | lived for most of my life (\\~**25** years) about 2 hours train ri | \n62 | of my life (\\~**2**5 years) about **2** hours train ride from Manches | \n64 | ould work out well for mentor/**mentoree.** You'd need the entire compan | \n76 | t's amazing that there is now **1** billion active users a day. I | \n80 | e position first through Orta **Therox,** who spoke highly of Artsy. | \n82 | world, with a thorough mix of **math,** software engineering, and ar | \n82 | in our society, as I did with **500px.** | \n84 | _**10/10._** Extremely on topic. | \n84 | _10/**10._** Extremely on topic. | \n88 | GitHub, have written for the **Teehan+Lax** blog professionally, and | \n96 | _**10/10_** ✔ | \n96 | _10/**10_** ✔ | \n98 | ground, I just graduated from **NYU** with a B.S. in Electrical Eng | \n98 | ust graduated from NYU with a **B.S.** in Electrical Engineering and | \n98 | ary (a home security hardware **startup).** While I do enjoy building h | \n116 | - [**2007][23]** as a part of the WWDC St | \n116 | - [2007][23] as a part of the **WWDC** Student Scholarship. It was s | \n117 | - [**2008][24]** as a graduate applying f | \n118 | - [**2008][25]** as a graduate applying f | \n119 | - [**2010][26]** when applying for jobs o | \n120 | - [**2015][27]** my CV as a part of my U. | \n120 | 15][27] my CV as a part of my **U.S.** VISA process. | \n157 | tions happening over the last **8** years, but the tone of how I | \n159 | onsider my personal web-page [**orta.io][28]** to act as a portfolio, A | \n196 | _More **infö** that I've reviewed and given | \n199 | * [8 **Minute** Guide to Writing a Res | \n204 | you think being a engineer at S**potify** would be a dream job. How do | \n206 | test out the water. Then for S**potify,** you should make sure everyth | \n208 | ompanies have public employee g**et-togethers,** for example at Artsy we have | \n208 | d the curtain. In the case of S**potify,** they host a lot of meet-ups, | \n214 | t IMO is a solid resource is [CameronBanga/iOS-Developer-and-Designer-In | \n230 | e real interviews in the last 2 **years.** | \n234 | Have a Technical Interview at Ma**coscope][43]** - Again, probably a bit | \n240 | nvest probably something like 10 **hours** into you. This is sprea | \n266 | be threading, view controller li**fecycle,** code coupling, dynamic vs st | \n268 | Here's [a long wr**iteup][47],** with a lot of depth (an | \n288 | our interview seems to be the et**tiquette** in the US. I don't recall doi | \n299 | een given an offer. If it's a st**artup,** you might be offered equity. | \n301 | offer much there. But I have re**cieved** [some good][52] advice I'll p | \n309 | own blog. [Jekyll][54] is the de**facto** go-to in that space, but I kn | \n309 | ed using [middleman][55] and [hu**go][56].** Do not use Octopress, v | \n309 | 5] and [hugo][56]. Do not use Oc**topress,** vanilla Jekyll will do you j | \n311 | , talk about code. It took me 4 **years** to hit my first thousan | \n317 | ing to Open Source][61]: [Fix RE**ADMEs][62],** [improve documentation  | \n332 | - Video code-reviews: [Ei**dolon][72]** / [Emergence][73] - On t | \n#### [_posts/2016-06-19-graphql-for-mobile.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-19-graphql-for-mobile.markdown)\n\nLine | Typo |\n| --- | ------ |\n10 | e and Runtime_. GraphQL is a [spec](http://facebook.github.io/gr | \n10 | m have as much control as the **backend.** | \n12 | what I've learned in the last **3** months of using it in [Eigen] | \n12 | last 3 months of using it in [Eigen](https://github.com/artsy/eig | \n48 | r data means your app is more **resiliant** to things outside of your con | \n50 | ld actually contain a list of **hrefs** instead of the model data, an | \n54 | singly) open-source, it's at [artsy/metaphysics](https://github.c | \n54 | g against a GraphQL server is **GraphiQL** - an IDE for exploring your A | \n54 | , but I can send you to [Clay **Allsop's](http://clayallsopp.com)** [Gra | \n54 | p's](http://clayallsopp.com) [**GraphQLHub](https://www.graphqlhub.com):** | \n56 | t link in a new window. Press **cmd** + enter to see the results. W | \n58 | ction APIs inside the GraphQL **spec.** | \n70 | eeded to be re-implemented in **3-4** clients. On the native side w | \n78 | tive/) for our flagship app, [Eigen](https://github.com/artsy/eig | \n101 | ors) gave GraphQL a try, and [welcome'd](https://github.com/artsy/met | \n#### [_posts/2016-06-29-code-spelunking-injection.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-06-29-code-spelunking-injection.markdown)\n\nLine | Typo |\n| --- | ------ |\n27 | take-risks) - the code we are **spelunking** through can feel foreign to m | \n27 | -C, and it's not got tests. [@**Johno1962][johnno1962]** described it to | \n27 | cribed it to me as being like **1997's** Objective-C. The end result o | \n31 | * **InjectionPlugin** - The user facing Xcode plugi | \n32 | * **InjectionLoader** - A Bundle used to skip patch | \n33 | * **iOSBundleTemplate** - A folder to a reference imp | \n34 | * **OSXBundleTemplate** - Same but for OSX Project | \n34 | BundleTemplate - Same but for **OSX** Project | \n42 | * **Recieves** a call to inject. | \n46 | lass][principal_class] in the **info.plist,** this class, `INPluginMenuCon | \n48 | u ( note: [interesting use of **c-structs** here][menu_structs] ) and sta | \n73 | everything went well, then a [**Bonjour][bonjour]** [service][bonjour_s | \n73 | thread and starts a infinite **runloop** checking for new connections | \n73 | nections on the [socket every **0.5** seconds][socket_runloop]. | \n75 | unning][bbrowser_running] in [**Bonjour** Browser][bbrowser]. So, what | \n87 | tarts at `injectSource` [from **INPluginMenuController][inject_source].** | \n91 | ence to the currently running **LLDB** session, the console in the b | \n95 | d, then requests a pause from **LLDB,** allowing the plugin to send | \n103 | for file changes inside your **Xcodeproject.** | \n105 | injection work is done inside **perl** scripts, another new language | \n105 | nd of `injectSource` it runs [**injectSource.pl][injection_source_pl]** with an | \n107 | a lot of ground-work for the **perl** scripts is done inside [commo | \n107 | perl scripts is done inside [**common.pm][common_pm]** - which is a modu | \n109 | setup, maintain and amend an **xcodeproject** that compiles just the class | \n111 | rts out by copying a template **xcodeproject** (either `iOSBundleTemplate` o | \n117 | a reference to the build log **dirs** for the [derived data][derive | \n117 | compiling a single class from **Eigen** looks like][a_build_log] (I'v | \n117 | ly, this is called the learnt **db.** | \n119 | The learnt **db** is used to compile a class to | \n127 | With the `Logs` **dir** being a symlink to the derive | \n133 | or which tells the server the **filepath** of the now compiled `Injectio | \n139 | Alright, back to [the **INPluginClientController][INPluginClientController].** S | \n141 | going on from the high level **thoughout** this [connection setup functi | \n143 | console's info label to that **filepath,** this is the `BundleContents. | \n144 | om a storyboard (not too sure **whats** going on there TBH) | \n144 | too sure whats going on there **TBH)** | \n162 | stand this, we need to grok a **1,200** LOC header file `:D`, it | \n162 | and this, we need to grok a 1,**200** LOC header file `:D`, it has | \n162 | this, we need to grok a 1,200 **LOC** header file `:D`, it has a fe | \n162 | n try work through those, to [**BundleInjection.h][BundleInjection.h].** Interest | \n162 | this file inside your `/tmp/` **dir.** | \n176 | two responsibilities - using **Bonjour** to find the server, and raw s | \n176 | e is nothing unique about the **Bonjour** mutlicast work, so I'm skippi | \n176 | hing unique about the Bonjour **mutlicast** work, so I'm skipping that. O | \n180 | so][param_setup] it sets up [**INParameters** and INColors][tunable] for tu | \n180 | it sets up [INParameters and **INColors][tunable]** for tunable paramet | \n182 | mpt to connect to the server, **5** times. | \n185 | e some][nib_swizzling] of the **UINib** init functions. | \n185 | ][nib_swizzling] of the UINib **init** functions. | \n188 | om there the socket goes into **runloop** mode on it's on thread. | \n190 | #### Client Socket **Runloop** | \n194 | ects, then Re-creates the app **degelate** + view controller hierarchy. | \n198 | te_image] an `NS/UIImage` via **NSData** for Tunable Parameters. | \n215 | * A global **NSNotification** for . | \n219 | of quoting the README that [@**Johno1962][johnno1962]** and I worked on | \n225 | ects that are referred to via **sharedInstance.** If that fails, well, Injecti | \n258 | ibrary. These bundles contain **2** files `Info.plist`, `Injectio | \n258 | ide the bundle that is linked **ar** runtime (and thus dynamically | \n260 | c library info][dl_lib_info] [**struct][dl_struct]** and uses [dladdr] | \n260 | [struct][dl_struct] and uses [**dladdr][dladdr]** to fill the struct, | \n260 | [dladdr][dladdr] to fill the **struct,** based on the function pointe | \n262 | classlist] `__classlist` via [**getsectdatafromheader][getsectdatafromheader]** for t | \n262 | log post][objc_reverse] from [**Zynamics][zynamics].** Injection then lo | \n262 | rary, via the most [intensely **casted][class_references]** line in of | \n264 | es]. If you don't know what a **vtable** is check this [page on Wikipe | \n272 | see if the class's instances **reponds** to `- injected` if it does, i | \n272 | tances of the objects in it's **liveObjects** array. If the array hasn't be | \n274 | Injection has an [**Xprobe][xprobe]-lite** included inside | \n274 | ction has an [Xprobe][xprobe]-**lite** included inside it. This live | \n274 | ded inside it. This lives in [**BundleSweeper.h][BundleSweeper.h].** The quote | \n274 | on above gave the start away, **BundleSweeper** [looks at the app delegate][b | \n274 | elegate][bprobe_seed] ( or a [**Cocos2D** director object][cocos2d]) an | \n274 | and \"reference\" classes e.g [**NSBlock][NSBlock],** [NSData][NSData], | \n274 | sses e.g [NSBlock][NSBlock], [**NSData][NSData],** NSString, NSValue e | \n274 | ][NSBlock], [NSData][NSData], **NSString,** NSValue etc. The `bsweep` fu | \n274 | , [NSData][NSData], NSString, **NSValue** etc. The `bsweep` function ad | \n274 | ot then it loops through the [**IvarList][ivar_list]** and runs `bsweep` | \n278 | l the fancy class an instance **nofications** sorted, there is a good old r | \n278 | what I based my [work on for **Eigen][eigen_injection],** super simp | \n286 | wed a draft of this post to [@**Johno1962][johnno1962]** he reminded me t | \n286 | er read][diamond_reloader] at **120** LOC. However, can't understan | \n286 | ead][diamond_reloader] at 120 **LOC.** However, can't understand th | \n293 | easy to understand without c/**Mach-o** domain knowledge. It's making | \n293 | like Storyboards, Android via **Apportable,** ARC and no-ARC, 32bit vs 64b | \n293 | a Apportable, ARC and no-ARC, **32bit** vs 64bit and iOS vs Mac where | \n293 | ble, ARC and no-ARC, 32bit vs **64bit** and iOS vs Mac where things s | \n295 | As of Xcode **8,** Xcode Plugins are on the way | \n301 | this kind of stuff, follow [@**Johno1962][johnno1962]** on Twitter, he's | \n301 | ohnno1962] on Twitter, he's [@**Injection4Xcode][Injection4Xcode]** - Chris Lat | \n301 | ode][Injection4Xcode] - Chris **Lattner** follows him, so you know it's | \n301 | ome project that is pushing a **boundry** or two. | \n#### [_posts/2016-08-15-React-Native-at-Artsy.markdown](/artsy/artsy.github.io/tree/swift/_posts/2016-08-15-React-Native-at-Artsy.markdown)\n\nLine | Typo |\n| --- | ------ |\n28 | application and entirely in [**2** other apps](http://artsy.gith | \n49 | _everywhere_ in no time; **593** packages to be exactly, at th | \n69 | a lot that you would get with **UIKit** for free, e.g. `UICollectionV | \n94 | compose them to make complex **UIs.** | \n116 | once, write anywhere.” is the **neo-cross-platform** slogan deployed by React, whi | \n130 | [flexbox](https://en.wikipedia.org/wik | \n131 | ound classic CSS, I find that **flexbox** is an abstraction that nicely | \n139 | attern is not as ingrained in **UIKit** thus usually leading to more | \n140 | replacements such as [**AsyncDisplayKit](http://asyncdisplaykit.org).** | \n147 | than with your typical native **UIKit-based** | \n151 | it out, unlike e.g. Xcode and **UIKit.** (Granted, you | \n175 | ks with our application-wide [SDWebImage](https://cocoapods.org/pods/S | \n186 | about React Native. Follow [@ArtsyOpenSource](https://twitter.com/ArtsyOpe | \n#### [_posts/2016-11-14-JS-Glossary.md](/artsy/artsy.github.io/tree/swift/_posts/2016-11-14-JS-Glossary.md)\n\nLine | Typo |\n| --- | ------ |\n10 | environment now, and can try **summerize** a lot of topics. This should | \n99 | a much deeper explanation in [**uberVU/react-guide][react-guide]** | \n177 | Yarn is a NPM replacement (**ish)** by Facebook. It's very new. | \n195 | ### **Webpack** | \n197 | an be easy to confuse Babel + **Webpack,** so in simple: | \n200 | * **Webpack** will take source code and mer | \n202 | hey work at different scopes. **Webpack** is mainly a web front-end too | \n250 | hat JavaScript was created in **10** days, which is a cute anecdot | \n250 | ript has evolved for the next **21** years. The JavaScript you wro | \n250 | ars. The JavaScript you wrote **10** years ago would still run, ho | \n256 | JavaScript called ECMAScript **6.** | \n264 | cts. Quite a SemVer jump from **6** to 201**6**. | \n264 | Quite a SemVer jump from 6 to **2016.** | \n270 | [believe starting][stages] at **0,** and working up to 4. 0 Idea, | \n270 | ages] at 0, and working up to **4.** 0 Idea, 1 Proposal, 2 Draft, | \n270 | s] at **0**, and working up to 4. **0** Idea, 1 Proposal, 2 Draft, 3 | \n270 | and working up to 4. 0 Idea, **1** Proposal, 2 Draft, 3 Accepted | \n270 | up to 4. 0 Idea, 1 Proposal, **2** Draft, 3 Accepted and 4 Done. | \n270 | 0 Idea, 1 Proposal, 2 Draft, **3** Accepted and 4 Done. | \n270 | osal, 2 Draft, 3 Accepted and **4** Done. | \n272 | So a ECMAScript Stage **0** feature is going to be really | \n272 | er the number, the longer the **spec** has been discussed, and the m | \n274 | d these improvements are the [**TC39][tc39]** committee, the cool bi | \n297 | packaging JavaScript called [**CommonJS][commonjs].** It was replaced b | \n301 | pt has classes introduced in [**es6](#es6),** this means that inste | \n332 | not an implementation,” and “**favor** object composition over class | \n336 | So, classes - it took **20ish** years before they happened? B | \n338 | Danger I do almost exclusive **OOP** in JavaScript, sometimes the | \n398 | Introduced in ECMAScript **5.1,** it provides a way to [opt-in | \n499 | haracters but having the same **behavior.** | \n501 | , but it's not the only one. [**Rollup][rollup]** is considered the de | \n501 | it is in [babel](#babel) and [**webpack](#babel)** also. | \n563 | r my experiences with [making **PRs][inline-mac]** to VS Code. Type | \n579 | could probably do it in about **2** days using a Babel plugin, th | \n581 | volve further, then help them **stablize** and mature. | \n#### [_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md)\n\nLine | Typo |\n| --- | ------ |\n13 | ers of node, and for the last **4** years the stable stack for th | \n13 | ript + Express + Backbone. In **2016** the mobile team [announced][r | \n15 | parate dev teams for building **Artsy.net** and the corresponding iOS app | \n15 | llector Mobile. By the end of **2016** we decided to merge the teams | \n17 | stack for web/native Artsy in **2017.** | \n25 | Our web stack has been [**ezel.js][ezel]** since 2013, and contin | \n25 | as been [ezel.js][ezel] since **2013,** and continues to be a mature | \n25 | using React and GraphQL with [**muraljs][mural].** However, since the m | \n51 | n VS Code, and tried learning **OCaml** to help out on the [Flow tool | \n65 | er can conform to the GraphQL **spec,** and then clients can make qu | \n86 | ld actually contain a list of **hrefs** instead of the model data, an | \n90 | ive of a native developer [in **2016][mob-graph].** So I'll leave th | \n207 | y's local cache, and then any **un-cached** items are requested from the | \n221 | roject that replaces the NPM [**cli][cli]** client. It's very new, | \n221 | e a fresh re-write of the NPM **cli** would look like. | \n223 | node modules as with the NPM **cli.** | \n246 | change in one source file and **60** tests run from 6 different te | \n246 | ce file and **6**0 tests run from **6** different test suites. Finish | \n272 | , if I changed the background **color** to `blue` from `white`. I get | \n278 | **No **config**** - When we first integrated | \n278 | st integrated Jest, we had no **config.** Now, to make sure that TypeS | \n278 | ns for: Babel, TypeScript and **webpack.** Three of the biggest modern | \n280 | s, useful JSON output, ESLint **linters,** Elegant Mocking tools and na | \n282 | ferent testing frameworks in [**jest-codemods][jest-codemods]** - getting sta | \n282 | 'd also recommend looking at [**wallaby.js][wallaby]** and [vscode-jest][v | \n294 | of this culture came from the **TextMate** and Rails days with the infam | \n294 | ys with the infamous [blog in **15** minutes video][tm-blog]. When | \n296 | and IDEs where you have fully **spec'd** out projects. | \n298 | able to have project specific **setups** is where VS Code really start | \n321 | sound a bit corporate for a ~**25** person dev team, but one chie | \n329 | ound Facebook tech, based on [**three20][three20]** - which I think is | \n329 | ve shown to be really open to **PRs** and discussion, and our work | \n#### [_posts/2017-02-05-Retrospective-Swift-at-Artsy.md](/artsy/artsy.github.io/tree/swift/_posts/2017-02-05-Retrospective-Swift-at-Artsy.md)\n\nLine | Typo |\n| --- | ------ |\n14 | Swift became public in June **2014,** by August we had started usi | \n16 | on Apple platforms. It was a **no-brainer** to then build an [appleTV app | \n16 | no-brainer to then build an [**appleTV** app][emergence] in Swift, int | \n16 | wift-support into our key app **Eigen** and built non-trivial parts o | \n18 | with React Native in February **2016,** and by August **2016,** we annou | \n18 | February **2016,** and by August **2016,** we announced that [Artsy mov | \n22 | ct Native][react-n], and our [**1-year** summary][summary]. | \n26 | rew. Building anything inside **Eigen** rarely re-used existing nativ | \n26 | till eventually it would take **2** iOS engineers to build a feat | \n28 | By [March **2015][gave_up],** we gave up trying | \n30 | this?\" Over the course of the **2015** winter break we explored idea | \n36 | [**Eigen][eigen]** is an app where we ta | \n36 | data and mapping it to a UI. [**Eidolon][eidolon]** (our Auctions Kiosk | \n36 | . [Emergence][emergence] is a **trivial-ish** tvOS app which has a few view | \n36 | ][emergence] is a trivial-ish **tvOS** app which has a few view cont | \n40 | **Eigen** is where we worried about how | \n40 | e limited in their scope, but **Eigen** is basically the mobile repre | \n40 | going to have something like **Eigen.** | \n42 | needed to re-think our entire **UIKit** stack for Eigen. Strictly spe | \n42 | nk our entire UIKit stack for **Eigen.** Strictly speaking, Objective | \n46 | In the end, for **Eigen,** we came to the conclusion th | \n51 | hich would have ended up like **Spotify's** ([hub][hub]) or Hyperslo's ([ | \n51 | ike Spotify's ([hub][hub]) or **Hyperslo's** ([Spots][spots]) ). | \n62 | The majority of the team had **5+** years of Cocoa experience an | \n74 | OS apps. From libraries like [**Moya][moya],** to foundational proje | \n76 | . This is what happened with [**Moya][moya].** It's a pattern Baseca | \n76 | [Moya][moya]. It's a pattern **Basecamp** discuss when they [talk about | \n84 | Think of apps with their own **filetypes,** that can control inputs and | \n86 | rking with an API is for most **3rd** party developers it should co | \n88 | peaking, don't have. They use **iCloud,** or CloudKit, or whatever, an | \n88 | n't have. They use iCloud, or **CloudKit,** or whatever, and expect you | \n96 | n. A trivial string change in **Eigen** takes [25 seconds][eigen_25] | \n96 | string change in Eigen takes [**25** seconds][eigen_**25**] to show up | \n98 | single edit in a string takes **25** seconds to see the difference | \n98 | ference in the swift parts of **Eigen** <a href=\"https://t.co/MOPGPEW | \n98 | ref=\"https://t.co/MOPGPEWqxX\">**pic.twitter.com/MOPGPEWqxX</a></p>&mdash;** 💍r | \n98 | o/MOPGPEWqxX\">pic.twitter.com/**MOPGPEWqxX</a></p>&mdash;** 💍rta Therox ( | \n98 | m/MOPGPEWqxX</a></p>&mdash; 💍r**ta** Therox (@or**ta**) <a href=\"https | \n98 | PGPEWqxX</a></p>&mdash; 💍rta T**herox** (@orta) <a href=\"https://twit | \n98 | 778242899821621249\">September 2**0,** 2016</a></blockquote></cente | \n98 | 42899821621249\">September 20, 2**016</a></blockquote></center>** | \n100 | talked to Apple engineers at W**WDC,** the idea was dismissed as \"d | \n102 | me of these problems, and the K**ickstarter** app has probably the closest | \n121 | _S**idenote:_** I found it hard to write th | \n121 | encing a sibling article: [JS 2**017][js-2017].** | \n127 | > References from JS 2**017:** [Relay][relay], [Jest][jest] | \n133 | r Apple first and then for us 3**rd** party devs. Outside influence | \n133 | language is Open Source (and [S**wiftPM][swiftpm])** | \n135 | a common word for it, being [S**herlocked][sherlocked].** The project I'v | \n135 | he project I've worked on for 5 **years,** CocoaPods, had an anno | \n135 | had an announcement of being s**herlocked** in late-2015 - you just have | \n135 | cement of being sherlocked in l**ate-2015** - you just have to deal with | \n137 | n\" dir=\"ltr\">Alfred, Dropbox, S**napchat,** Parse, OpenGL, Objective-C… | \n137 | <br>Quite the body count this W**WDC.</p>&mdash;** Mattt (@mattt) <a | \n137 | y count this WWDC.</p>&mdash; M**attt** (@m**attt**) <a href=\"https://twi | \n137 | this WWDC.</p>&mdash; Mattt (@m**attt)** <a href=\"https://twitter.com | \n137 | atus/473544723118837760\">June 2**,** 2014</a></blockquote> <scrip | \n137 | s/473544723118837760\">June 2, 2**014</a></blockquote>** <script asyn | \n141 | makes it tough for us, as the 3**rd** party community, to build use | \n143 | mpare Jest to either Quick or S**pecta.** Then remember that only Appl | \n145 | > Reference from JS 2**017:** [Jest][jest] | \n157 | rface API (either the DOM, or U**IKit.)** | \n163 | > References from JS 2**017:** [React][react], [Relay][rela | \n165 | running simultaneously as you a**rer** building your application. Im | \n167 | d make your changes. <em>From 2**5** seconds, to less than one</em | \n173 | > Reference from JS 2**017:** [TypeScript][typescript] | \n179 | he dev team. Artsy has around 2**5** developers, the majority of w | \n183 | of the company. For the past 5 **years,** the native mobile proj | \n185 | h the web team. At the end of 2**015,** the Collector Web team intro | \n187 | > Reference from JS 2**017:** [GraphQL][graphql] | \n189 | t a rough prototype ported in 2 **days** work. By working at Reac | \n197 | r skills would continue to be s**iloed.** | \n207 | evel of our application above U**IKit** and we can fork it. All our t | \n209 | no concepts like, _\"We'll use S**teipete's** fork of UIKit for UIPopover r | \n209 | \"We'll use Steipete's fork of U**IKit** for UIPopover rotation fixes\" | \n209 | Steipete's fork of UIKit for U**IPopover** rotation fixes\"_ or _\"My vers | \n213 | > Reference from JS 2**017:** [VS Code][code] | \n215 | much easier to live with the [5**93** dependencies](/blog/2016/08/1 | \n219 | With Swift the language, and S**wiftPM** the package manager, Apple ar | \n219 | ift-pm-slack], Mailing Lists, J**IRA** and Twitter. | \n223 | ks4] _weeks_ during the Swift 2 **->** 3 migration. Having the la | \n223 | _weeks_ during the Swift 2 -> 3 **migration.** Having the languag | \n227 | . So here's the summary after 1 **year.** | \n252 | - Run through the [f**8** app][f**8**] series on  [makeitop | \n252 | the [f8 app][f8] series on  [m**akeitopen.com][f8-open].** | \n259 | - [s**craphold](https://scaphold.io).** | \n260 | - [g**raphcool](https://www.graph.cool/).** | \n\n\n<p align=\"right\" data-meta=\"generated_by_danger\">\n  Generated by :no_entry_sign: <a href=\"http://danger.systems/\">danger</a>\n</p>\n",
          "createdAt": "2017-01-30T17:56:10Z",
          "author": { "login": "ArtsyOpenSource", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "I found that I couldn't write about what we wanted to do when moving to JS, without being able to say what was interesting about JS ",
          "createdAt": "2017-01-30T17:56:23Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Adds a cool icon to the post :D\r\n\r\n![screen shot 2017-01-30 at 7 45 00 pm](https://cloud.githubusercontent.com/assets/49038/22448071/b4338896-e724-11e6-920c-a6aaef75d790.png)\r\n",
          "createdAt": "2017-01-31T00:46:03Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Note: post is too long to show in the diff - you need to expand it now",
          "createdAt": "2017-02-01T03:35:14Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "OK - that's the Swift one done.",
          "createdAt": "2017-02-01T18:36:17Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Thanks mike, all feedback addressed :+1: ",
          "createdAt": "2017-02-04T19:32:06Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Really liked that JS read 👍 \r\n\r\nGoing to give the Swift one a last read tomorrow.",
          "createdAt": "2017-02-05T23:41:17Z",
          "author": { "login": "alloy", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "OK, it's happening.",
          "createdAt": "2017-02-06T17:31:12Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 70,
      "nodes": [
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> Collector Web, and Collector Mobile\r\n\r\nMight be useful describing the source/context of these terms, or \"(Art) Collector Web, and Collector Mobile\" or something similar.\r\n\r\n",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T14:29:18Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "> anything new inside Eigen barely re-used existing code\r\n\r\nCould clarify that this is native code or JS code from the web side of things.",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T15:54:40Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "> it would take 2 iOS engineers\r\n\r\nI think it's worth explaining that this isn't the engineer's fault, maybe expand on the demoralizing nature of it too.",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T15:55:17Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Could be worth linking to https://www.joelonsoftware.com/2000/04/06/things-you-should-never-do-part-i/",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T15:55:48Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "There's a conflation between writing native apps and writing Swift code. Could be worth pointing out that, if we had stuck with native, we'd use Swift instead of Objective-C (this is something people might not take for granted).",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T15:56:41Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> and expect you to too\r\n\r\n\"and expect you to as well\" maybe?",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T15:57:31Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> This becomes extremely painful once you start ...\r\n\r\nThis wasn't entirely clear to me. I know what you mean but only because we've talked about it.",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T15:58:23Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "I wasn't entirely convinced of the \"types imply slow compiler times\" argument here. It could be worth linking to an explanation if we can find one, or removing that line. ",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T15:59:33Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Hrm, OK. My point is not that Types do that,  but Protocol Extensions on Generics only constrained to Equatables ( I'm not sure the terms ) or Inferring every object's type inside a dictionary are computationally more expensive than Objective-C",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-02-01T01:51:43Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> provide a great API, documentation\r\n\r\n\"provide a great API and documentation\"",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T15:59:51Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "> It becomes trivial...\r\n\r\nIt's worth expanding on how it becomes trivial, for readers who have no experience in RN/React.",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T16:00:33Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "In this case, I'll be leaving that to the JS 2017 - but yeah, I grok ya - thanks",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-02-01T01:57:57Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> From 25 seconds, to less than one.\r\n\r\nFor me, this is the most important sentence in the post. Could be worth expanding or using &lt;em&gt; to emphasize things.",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T16:01:10Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 3,
            "nodes": [
              {
                "body": "\"special snowflakes\" has become a politically charged term since the inauguration. I'd consider rewording.",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T16:01:52Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "> The mobile team was the single development team\r\n\r\nNot strictly true, the auctions team uses a Scala backend.",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T16:02:18Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Cool re:snowflakes 👍 \r\n\r\nre: not strictly true - this is why I tried to note the lack of API work too, all other projects like this  ( like the elixir projects ) are backend systems",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-02-01T02:24:58Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> For the past 5 years, the native mobile projects had close to zero contributions from anyone outside of the mobile team\r\n\r\nCould follow this up with a line explaining that our toolchain was just too unfamiliar to them.",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T16:02:48Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> specifically by having an engineer\r\n\r\nspecifically by _not_ having an engineer?",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T16:03:10Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "Ehhhhhh, not really but I agree that the barrier to entry is far, far higher than improving JS tools. Maybe reword?",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T16:03:59Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "definitely agree",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-02-01T03:34:59Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "You touch on people being excited about Swift, maybe emphasize that Swift itself is an exciting language? It's kind of a pain to migrate between versions (worth noting its instability in downsides) but it's also genuinely exciting to see things change and participate in that change through swift-evolution. ",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T16:05:34Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "This tweet sums up the excitement people have for the language well: https://twitter.com/wilshipley/status/565001293975257091",
                "author": { "login": "ashfurrow", "__typename": "User" },
                "createdAt": "2017-01-31T16:06:45Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "I don't get the intended point of the last sentence in this paragraph. Is it, \"our iOS engineers are super smart, so it's silly it took them so long\"? \"Because we understand the value of building tools, we thought it was important to fix this\"? Something else?",
                "author": { "login": "lazerwalker", "__typename": "User" },
                "createdAt": "2017-02-04T16:30:47Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "The capitalization feels weird here? It's inconsistent (\"Our 1-year Summary\" as opposed to either \"our 1-year summary\" or \"Our 1-Year Summary\"). I'd argue killing capitalization on anything that isn't a proper noun is probably best.",
                "author": { "login": "lazerwalker", "__typename": "User" },
                "createdAt": "2017-02-04T16:32:49Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "I'd kill \"specifically\"",
                "author": { "login": "lazerwalker", "__typename": "User" },
                "createdAt": "2017-02-04T16:34:52Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "The other apps have links — just worth a reminder that you should linkify Eigen as well.",
                "author": { "login": "lazerwalker", "__typename": "User" },
                "createdAt": "2017-02-04T16:37:54Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "It feels weird that you start off by talking about Eigen, then back up and talk about how Artsy has lots of apps. I'd rearrange the text you already have to introduce things a bit more generally before diving into Eigen. e.g.:\r\n\r\n> We have different apps with different trade-offs.\r\n>\r\n> Eigen is an app where we taken JSON data from the server, and convert it into a user interface. It nearly always can be described as a function taking data and mapping it to a UI. [Eidolon][eidolon] (our Auctions Kiosk app) which contains a lot of Artsy-wide unique business logic which is handled with local state like card reader input, or unique user identification modes. [Emergence][emergence] is a trivial-ish tvOS app which has a few view controllers, and is mostly handled by Xcode's storyboards.\r\n\r\n(etc)",
                "author": { "login": "lazerwalker", "__typename": "User" },
                "createdAt": "2017-02-04T16:38:53Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "It might be worth explaining a bit more explicitly what a component-based architecture is, and why it's something you'd find value in?",
                "author": { "login": "lazerwalker", "__typename": "User" },
                "createdAt": "2017-02-04T16:42:42Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Typo — assume you mean \"make _it_ hard  to build\"",
                "author": { "login": "lazerwalker", "__typename": "User" },
                "createdAt": "2017-02-04T16:47:06Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Typo — strictly typed _languages_",
                "author": { "login": "lazerwalker", "__typename": "User" },
                "createdAt": "2017-02-04T16:47:33Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Might be worth a line about how Swift on the server doesn't have any impact on writing web front-end code.",
                "author": { "login": "lazerwalker", "__typename": "User" },
                "createdAt": "2017-02-04T16:56:27Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "s/strucutre/structure/",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-05T23:21:25Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> could make changes to ~~to~~**the** view in memory",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-05T23:24:15Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": ">up,here's\r\n\r\nMissing space",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-05T23:25:14Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "s/heirarchy/hierarchy/",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-05T23:26:21Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "…MVC? Missing ending.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-05T23:26:43Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "s/react apps/React apps/",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-05T23:29:32Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "I have a hard time parsing this comment.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-05T23:30:03Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> are ~~a~~ great tutorials ~~,~~ to help you",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-05T23:30:38Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> tooling ~~is~~ allows",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-05T23:31:17Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "> setting up a~~nd~~ project",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-05T23:32:19Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "> as ~~you~~ with",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-05T23:32:58Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> With our React Native,\r\n\r\nFeels like an unfinished construction.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-05T23:34:37Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> say**s** a lot about the (a?) project",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-05T23:36:44Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Unfinished sentence.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-05T23:38:01Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Seems unfinished?",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-05T23:38:43Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> which works ~~is~~**in** most cases",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T13:57:15Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> ~~with~~ with React Native",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T13:58:38Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "> with decades of **native** experience\r\n\r\n?",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T13:59:43Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "def",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-02-06T14:01:57Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> where we take~~n~~ JSON data",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:07:37Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 3,
            "nodes": [
              {
                "body": "I’m not sure what you mean by Eigen being the place where we worry?",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:09:45Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Does \"Eigen is where we worried about how we were building apps\" make more sense?",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-02-06T14:12:04Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Aye",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:41:36Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "s/abut/about/\r\n\r\n🇨🇦😛 /cc @ashfurrow ",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:11:46Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> building the structure from based on JSON\r\n\r\nThis doesn’t read right",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:12:36Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> The rest of the development team\r\n\r\nI’d make it explicit that this is about engineers _outside_ of those with existing native/mobile experience.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:14:19Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "> Apple obviously _want**s**_",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:15:36Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "> it's become~~s~~",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:16:20Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 3,
            "nodes": [
              {
                "body": "I’m not sure I understand what you’re getting at in the last sentence. Are you allowing for the possibility that we’ve overlooked another option?",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:17:26Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "I was allowing that, back when we were searching - aye. Will try make that more explicit",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-02-06T14:21:13Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Gotcha, yeah that’s probably a good idea.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:32:56Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "I don’t understand what is that “is worth continuing here” ?",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:18:08Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "> expect you to too aswell\r\n\r\nto too overflow",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:19:51Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "The end of the last sentence doesn’t read well.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:20:23Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 3,
            "nodes": [
              {
                "body": "Maybe use a less judgemental word than “embarrassing” ?",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:27:19Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "> no support **for** code reloading",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:27:33Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Hah, did not remember that Xcode 2 had attempted this.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:28:33Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> they use ~~using~~ Playgrounds",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:28:58Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 4,
            "nodes": [
              {
                "body": "> One argument that it won't ever be as fast as Objective-C\r\n\r\nWho has made this argument? Can we link to an authoritative source?",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:30:05Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "I did, just now. Hrm, I can't think of anything other than some private discussion around sourcekit for documentation at WWDC which I can't link to. Will change wording around.",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-02-06T14:33:20Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "On a second look, I don't think comparing swift tot obj-c is particularly relevant - ditched it",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-02-06T14:40:17Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "👍 ",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:42:19Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> a company like Twitter/Google to behind to handle\r\n\r\nThis sentence needs fixing",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T14:49:41Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "I didn’t know “stopping power”. Maybe “momentum” is a simpler way to convey what you mean?",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:05:03Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> without a tool like Relay **again**.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:07:09Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> like:[debuggers][rn-debugger]\r\n\r\nMissing space",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:07:48Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> Add in with that it's no problem\r\n\r\nSlightly hard to parse",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:09:46Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> we have all tests related to all the changes in git running on save.\r\n\r\nI’m not sure what you mean here",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:11:34Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "s/Reach/React/",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:12:15Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "> This **is** such a completely different mind space\r\n\r\nIs “mind space” really a thing? Couldn’t find it in dictionaries.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:15:36Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "in my head it is, but mindset is probably a better word",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-02-06T15:21:31Z",
                "reactions": {
                  "totalCount": 1,
                  "nodes": [
                    {
                      "user": { "login": "alloy", "__typename": "User" },
                      "__typename": "Reaction"
                    }
                  ],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> the VS Code\r\n\r\n👨‍💼 ",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:17:11Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 4,
            "nodes": [
              {
                "body": "> totally feels like a waste of time\r\n\r\nI’d rephrase this as “often” rather than “totally”.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:18:45Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "> doesn't ~~have to~~ have to wait",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:19:16Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "https://www.youtube.com/watch?v=pWdd6_ZxX8c",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-02-06T15:22:26Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "I mean, if you would link to _that_ video instead of the GTFO article, then I’d _totally_ be on board 😄 ",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:34:55Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "The “extending TypScript” link 404s",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:24:50Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "This could do with some elaboration",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:26:11Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Reading this on its own feels like it might be a negative judgement on React Native.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:27:18Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Might read nicer if only “probably” has emphasis.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:27:46Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> They really make~~s~~ React Native shine.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:28:28Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 3,
            "nodes": [
              {
                "body": "Maybe we should get metaphysics available and suggest that?",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:29:20Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "I think initially we were/are worried about people DDOSing us through it, but it's probably not going to happen IMO. A CURL could do the same thing. I'd be game for it, wanna bring it up in #metaphysics?",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-02-06T15:33:06Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Afaik @l2succes and @mzikherman were working on getting MP available to the public.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-02-06T15:45:06Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "> my favourite being that `yarn run [x]` will check to see if that is a local [...]\r\n\r\nNo need to use `run` -- `yarn [x]` will check in the `node_modules` scope. ",
                "author": { "login": "damassi", "__typename": "User" },
                "createdAt": "2017-02-06T15:51:14Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "noooooooo wayyyyyyyyyyy\r\n\r\nAMAZE",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-02-06T15:52:13Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        }
      ],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA0ODYxMDg3",
    "number": 310,
    "title": "Longform wide posts",
    "author": { "login": "orta", "__typename": "User" },
    "additions": 44,
    "deletions": 5,
    "createdAt": "2017-02-06T19:06:20Z",
    "closedAt": "2017-02-06T19:07:13Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/310",
    "body": "Adds a potentially wider, with larger text layout for long posts. Feels more medium-y.\r\n\r\n![screen shot 2017-02-06 at 2 05 42 pm](https://cloud.githubusercontent.com/assets/49038/22661977/5bb15814-ec75-11e6-9077-2b64dd534b9e.png)\r\n",
    "reactions": {
      "totalCount": 1,
      "nodes": [
        {
          "user": { "login": "anandaroop", "__typename": "User" },
          "__typename": "Reaction"
        }
      ],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "orta", "__typename": "User" },
        { "login": "ArtsyOpenSource", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "\n### Proselint found issues\n\n#### [_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md](/artsy/artsy.github.io/tree/longform_wide_posts/_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n#### [_posts/2017-02-05-Retrospective-Swift-at-Artsy.md](/artsy/artsy.github.io/tree/longform_wide_posts/_posts/2017-02-05-Retrospective-Swift-at-Artsy.md)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n139 | Redundancy. Use 'free' instead of 'for free'. | warning\n139 | 'for free' is cliché. | warning\n263 | '[wot]' is archaic. | warning\n312 | No hyphen is necessary in phrasal adjectives with an adverb ending in -ly. | warning\n342 | No hyphen is necessary in phrasal adjectives with an adverb ending in -ly. | warning\n345 | Annotation left in text. | warning\n\n\n### Spell Checker found issues\n\n#### [_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md](/artsy/artsy.github.io/tree/longform_wide_posts/_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md)\n\nLine | Typo |\n| --- | ------ |\n13 | ers of node, and for the last **4** years the stable stack for th | \n13 | ript + Express + Backbone. In **2016** the mobile team [announced][r | \n15 | parate dev teams for building **Artsy.net** and the corresponding iOS app | \n15 | llector Mobile. By the end of **2016** we decided to merge the teams | \n17 | stack for web/native Artsy in **2017.** | \n25 | Our web stack has been [**ezel.js][ezel]** since 2013, and contin | \n25 | as been [ezel.js][ezel] since **2013,** and continues to be a mature | \n25 | using React and GraphQL with [**muraljs][mural].** However, since the m | \n51 | n VS Code, and tried learning **OCaml** to help out on the [Flow tool | \n65 | er can conform to the GraphQL **spec,** and then clients can make qu | \n86 | ld actually contain a list of **hrefs** instead of the model data, an | \n90 | ive of a native developer [in **2016][mob-graph].** So I'll leave th | \n207 | y's local cache, and then any **un-cached** items are requested from the | \n221 | roject that replaces the NPM [**cli][cli]** client. It's very new, | \n221 | e a fresh re-write of the NPM **cli** would look like. | \n223 | node modules as with the NPM **cli.** | \n246 | change in one source file and **60** tests run from 6 different te | \n246 | ce file and **6**0 tests run from **6** different test suites. Finish | \n272 | , if I changed the background **color** to `blue` from `white`. I get | \n278 | **No **config**** - When we first integrated | \n278 | st integrated Jest, we had no **config.** Now, to make sure that TypeS | \n278 | ns for: Babel, TypeScript and **webpack.** Three of the biggest modern | \n280 | s, useful JSON output, ESLint **linters,** Elegant Mocking tools and na | \n282 | ferent testing frameworks in [**jest-codemods][jest-codemods]** - getting sta | \n282 | 'd also recommend looking at [**wallaby.js][wallaby]** and [vscode-jest][v | \n294 | of this culture came from the **TextMate** and Rails days with the infam | \n294 | ys with the infamous [blog in **15** minutes video][tm-blog]. When | \n296 | and IDEs where you have fully **spec'd** out projects. | \n298 | able to have project specific **setups** is where VS Code really start | \n321 | sound a bit corporate for a ~**25** person dev team, but one chie | \n329 | ound Facebook tech, based on [**three20][three20]** - which I think is | \n329 | ve shown to be really open to **PRs** and discussion, and our work | \n#### [_posts/2017-02-05-Retrospective-Swift-at-Artsy.md](/artsy/artsy.github.io/tree/longform_wide_posts/_posts/2017-02-05-Retrospective-Swift-at-Artsy.md)\n\nLine | Typo |\n| --- | ------ |\n14 | Swift became public in June **2014,** by August we had started usi | \n16 | on Apple platforms. It was a **no-brainer** to then build an [appleTV app | \n16 | no-brainer to then build an [**appleTV** app][emergence] in Swift, int | \n16 | wift-support into our key app **Eigen** and built non-trivial parts o | \n18 | with React Native in February **2016,** and by August **2016,** we annou | \n18 | February **2016,** and by August **2016,** we announced that [Artsy mov | \n22 | ct Native][react-n], and our [**1-year** summary][summary]. | \n26 | rew. Building anything inside **Eigen** rarely re-used existing nativ | \n26 | till eventually it would take **2** iOS engineers to build a feat | \n28 | By [March **2015][gave_up],** we gave up trying | \n30 | this?\" Over the course of the **2015** winter break we explored idea | \n36 | [**Eigen][eigen]** is an app where we ta | \n36 | data and mapping it to a UI. [**Eidolon][eidolon]** (our Auctions Kiosk | \n36 | . [Emergence][emergence] is a **trivial-ish** tvOS app which has a few view | \n36 | ][emergence] is a trivial-ish **tvOS** app which has a few view cont | \n40 | **Eigen** is where we worried about how | \n40 | e limited in their scope, but **Eigen** is basically the mobile repre | \n40 | going to have something like **Eigen.** | \n42 | needed to re-think our entire **UIKit** stack for Eigen. Strictly spe | \n42 | nk our entire UIKit stack for **Eigen.** Strictly speaking, Objective | \n46 | In the end, for **Eigen,** we came to the conclusion th | \n51 | hich would have ended up like **Spotify's** ([hub][hub]) or Hyperslo's ([ | \n51 | ike Spotify's ([hub][hub]) or **Hyperslo's** ([Spots][spots]) ). | \n62 | The majority of the team had **5+** years of Cocoa experience an | \n74 | OS apps. From libraries like [**Moya][moya],** to foundational proje | \n76 | . This is what happened with [**Moya][moya].** It's a pattern Baseca | \n76 | [Moya][moya]. It's a pattern **Basecamp** discuss when they [talk about | \n84 | Think of apps with their own **filetypes,** that can control inputs and | \n86 | rking with an API is for most **3rd** party developers it should co | \n88 | peaking, don't have. They use **iCloud,** or CloudKit, or whatever, an | \n88 | n't have. They use iCloud, or **CloudKit,** or whatever, and expect you | \n96 | n. A trivial string change in **Eigen** takes [25 seconds][eigen_25] | \n96 | string change in Eigen takes [**25** seconds][eigen_**25**] to show up | \n98 | single edit in a string takes **25** seconds to see the difference | \n98 | ference in the swift parts of **Eigen** <a href=\"https://t.co/MOPGPEW | \n98 | ref=\"https://t.co/MOPGPEWqxX\">**pic.twitter.com/MOPGPEWqxX</a></p>&mdash;** 💍r | \n98 | o/MOPGPEWqxX\">pic.twitter.com/**MOPGPEWqxX</a></p>&mdash;** 💍rta Therox ( | \n98 | m/MOPGPEWqxX</a></p>&mdash; 💍r**ta** Therox (@or**ta**) <a href=\"https | \n98 | PGPEWqxX</a></p>&mdash; 💍rta T**herox** (@orta) <a href=\"https://twit | \n98 | 778242899821621249\">September 2**0,** 2016</a></blockquote></cente | \n98 | 42899821621249\">September 20, 2**016</a></blockquote></center>** | \n100 | talked to Apple engineers at W**WDC,** the idea was dismissed as \"d | \n102 | me of these problems, and the K**ickstarter** app has probably the closest | \n121 | _S**idenote:_** I found it hard to write th | \n121 | encing a sibling article: [JS 2**017][js-2017].** | \n127 | > References from JS 2**017:** [Relay][relay], [Jest][jest] | \n133 | r Apple first and then for us 3**rd** party devs. Outside influence | \n133 | language is Open Source (and [S**wiftPM][swiftpm])** | \n135 | a common word for it, being [S**herlocked][sherlocked].** The project I'v | \n135 | he project I've worked on for 5 **years,** CocoaPods, had an anno | \n135 | had an announcement of being s**herlocked** in late-2015 - you just have | \n135 | cement of being sherlocked in l**ate-2015** - you just have to deal with | \n137 | n\" dir=\"ltr\">Alfred, Dropbox, S**napchat,** Parse, OpenGL, Objective-C… | \n137 | <br>Quite the body count this W**WDC.</p>&mdash;** Mattt (@mattt) <a | \n137 | y count this WWDC.</p>&mdash; M**attt** (@m**attt**) <a href=\"https://twi | \n137 | this WWDC.</p>&mdash; Mattt (@m**attt)** <a href=\"https://twitter.com | \n137 | atus/473544723118837760\">June 2**,** 2014</a></blockquote> <scrip | \n137 | s/473544723118837760\">June 2, 2**014</a></blockquote>** <script asyn | \n141 | makes it tough for us, as the 3**rd** party community, to build use | \n143 | mpare Jest to either Quick or S**pecta.** Then remember that only Appl | \n145 | > Reference from JS 2**017:** [Jest][jest] | \n157 | rface API (either the DOM, or U**IKit.)** | \n163 | > References from JS 2**017:** [React][react], [Relay][rela | \n165 | running simultaneously as you a**rer** building your application. Im | \n167 | d make your changes. <em>From 2**5** seconds, to less than one</em | \n173 | > Reference from JS 2**017:** [TypeScript][typescript] | \n179 | he dev team. Artsy has around 2**5** developers, the majority of w | \n183 | of the company. For the past 5 **years,** the native mobile proj | \n185 | h the web team. At the end of 2**015,** the Collector Web team intro | \n187 | > Reference from JS 2**017:** [GraphQL][graphql] | \n189 | t a rough prototype ported in 2 **days** work. By working at Reac | \n197 | r skills would continue to be s**iloed.** | \n207 | evel of our application above U**IKit** and we can fork it. All our t | \n209 | no concepts like, _\"We'll use S**teipete's** fork of UIKit for UIPopover r | \n209 | \"We'll use Steipete's fork of U**IKit** for UIPopover rotation fixes\" | \n209 | Steipete's fork of UIKit for U**IPopover** rotation fixes\"_ or _\"My vers | \n213 | > Reference from JS 2**017:** [VS Code][code] | \n215 | much easier to live with the [5**93** dependencies](/blog/2016/08/1 | \n219 | With Swift the language, and S**wiftPM** the package manager, Apple ar | \n219 | ift-pm-slack], Mailing Lists, J**IRA** and Twitter. | \n223 | ks4] _weeks_ during the Swift 2 **->** 3 migration. Having the la | \n223 | _weeks_ during the Swift 2 -> 3 **migration.** Having the languag | \n227 | . So here's the summary after 1 **year.** | \n252 | - Run through the [f**8** app][f**8**] series on  [makeitop | \n252 | the [f8 app][f8] series on  [m**akeitopen.com][f8-open].** | \n259 | - [s**craphold](https://scaphold.io).** | \n260 | - [g**raphcool](https://www.graph.cool/).** | \n\n\n### Spell Checker found issues\n\n#### [_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md](/artsy/artsy.github.io/tree/longform_wide_posts/_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md)\n\nLine | Typo |\n| --- | ------ |\n13 | ers of node, and for the last **4** years the stable stack for th | \n13 | ript + Express + Backbone. In **2016** the mobile team [announced][r | \n15 | parate dev teams for building **Artsy.net** and the corresponding iOS app | \n15 | llector Mobile. By the end of **2016** we decided to merge the teams | \n17 | stack for web/native Artsy in **2017.** | \n25 | Our web stack has been [**ezel.js][ezel]** since 2013, and contin | \n25 | as been [ezel.js][ezel] since **2013,** and continues to be a mature | \n25 | using React and GraphQL with [**muraljs][mural].** However, since the m | \n51 | n VS Code, and tried learning **OCaml** to help out on the [Flow tool | \n65 | er can conform to the GraphQL **spec,** and then clients can make qu | \n86 | ld actually contain a list of **hrefs** instead of the model data, an | \n90 | ive of a native developer [in **2016][mob-graph].** So I'll leave th | \n207 | y's local cache, and then any **un-cached** items are requested from the | \n221 | roject that replaces the NPM [**cli][cli]** client. It's very new, | \n221 | e a fresh re-write of the NPM **cli** would look like. | \n223 | node modules as with the NPM **cli.** | \n246 | change in one source file and **60** tests run from 6 different te | \n246 | ce file and **6**0 tests run from **6** different test suites. Finish | \n272 | , if I changed the background **color** to `blue` from `white`. I get | \n278 | **No **config**** - When we first integrated | \n278 | st integrated Jest, we had no **config.** Now, to make sure that TypeS | \n278 | ns for: Babel, TypeScript and **webpack.** Three of the biggest modern | \n280 | s, useful JSON output, ESLint **linters,** Elegant Mocking tools and na | \n282 | ferent testing frameworks in [**jest-codemods][jest-codemods]** - getting sta | \n282 | 'd also recommend looking at [**wallaby.js][wallaby]** and [vscode-jest][v | \n294 | of this culture came from the **TextMate** and Rails days with the infam | \n294 | ys with the infamous [blog in **15** minutes video][tm-blog]. When | \n296 | and IDEs where you have fully **spec'd** out projects. | \n298 | able to have project specific **setups** is where VS Code really start | \n321 | sound a bit corporate for a ~**25** person dev team, but one chie | \n329 | ound Facebook tech, based on [**three20][three20]** - which I think is | \n329 | ve shown to be really open to **PRs** and discussion, and our work | \n#### [_posts/2017-02-05-Retrospective-Swift-at-Artsy.md](/artsy/artsy.github.io/tree/longform_wide_posts/_posts/2017-02-05-Retrospective-Swift-at-Artsy.md)\n\nLine | Typo |\n| --- | ------ |\n14 | Swift became public in June **2014,** by August we had started usi | \n16 | on Apple platforms. It was a **no-brainer** to then build an [appleTV app | \n16 | no-brainer to then build an [**appleTV** app][emergence] in Swift, int | \n16 | wift-support into our key app **Eigen** and built non-trivial parts o | \n18 | with React Native in February **2016,** and by August **2016,** we annou | \n18 | February **2016,** and by August **2016,** we announced that [Artsy mov | \n22 | ct Native][react-n], and our [**1-year** summary][summary]. | \n26 | rew. Building anything inside **Eigen** rarely re-used existing nativ | \n26 | till eventually it would take **2** iOS engineers to build a feat | \n28 | By [March **2015][gave_up],** we gave up trying | \n30 | this?\" Over the course of the **2015** winter break we explored idea | \n36 | [**Eigen][eigen]** is an app where we ta | \n36 | data and mapping it to a UI. [**Eidolon][eidolon]** (our Auctions Kiosk | \n36 | . [Emergence][emergence] is a **trivial-ish** tvOS app which has a few view | \n36 | ][emergence] is a trivial-ish **tvOS** app which has a few view cont | \n40 | **Eigen** is where we worried about how | \n40 | e limited in their scope, but **Eigen** is basically the mobile repre | \n40 | going to have something like **Eigen.** | \n42 | needed to re-think our entire **UIKit** stack for Eigen. Strictly spe | \n42 | nk our entire UIKit stack for **Eigen.** Strictly speaking, Objective | \n46 | In the end, for **Eigen,** we came to the conclusion th | \n51 | hich would have ended up like **Spotify's** ([hub][hub]) or Hyperslo's ([ | \n51 | ike Spotify's ([hub][hub]) or **Hyperslo's** ([Spots][spots]) ). | \n62 | The majority of the team had **5+** years of Cocoa experience an | \n74 | OS apps. From libraries like [**Moya][moya],** to foundational proje | \n76 | . This is what happened with [**Moya][moya].** It's a pattern Baseca | \n76 | [Moya][moya]. It's a pattern **Basecamp** discuss when they [talk about | \n84 | Think of apps with their own **filetypes,** that can control inputs and | \n86 | rking with an API is for most **3rd** party developers it should co | \n88 | peaking, don't have. They use **iCloud,** or CloudKit, or whatever, an | \n88 | n't have. They use iCloud, or **CloudKit,** or whatever, and expect you | \n96 | n. A trivial string change in **Eigen** takes [25 seconds][eigen_25] | \n96 | string change in Eigen takes [**25** seconds][eigen_**25**] to show up | \n98 | single edit in a string takes **25** seconds to see the difference | \n98 | ference in the swift parts of **Eigen** <a href=\"https://t.co/MOPGPEW | \n98 | ref=\"https://t.co/MOPGPEWqxX\">**pic.twitter.com/MOPGPEWqxX</a></p>&mdash;** 💍r | \n98 | o/MOPGPEWqxX\">pic.twitter.com/**MOPGPEWqxX</a></p>&mdash;** 💍rta Therox ( | \n98 | m/MOPGPEWqxX</a></p>&mdash; 💍r**ta** Therox (@or**ta**) <a href=\"https | \n98 | PGPEWqxX</a></p>&mdash; 💍rta T**herox** (@orta) <a href=\"https://twit | \n98 | 778242899821621249\">September 2**0,** 2016</a></blockquote></cente | \n98 | 42899821621249\">September 20, 2**016</a></blockquote></center>** | \n100 | talked to Apple engineers at W**WDC,** the idea was dismissed as \"d | \n102 | me of these problems, and the K**ickstarter** app has probably the closest | \n121 | _S**idenote:_** I found it hard to write th | \n121 | encing a sibling article: [JS 2**017][js-2017].** | \n127 | > References from JS 2**017:** [Relay][relay], [Jest][jest] | \n133 | r Apple first and then for us 3**rd** party devs. Outside influence | \n133 | language is Open Source (and [S**wiftPM][swiftpm])** | \n135 | a common word for it, being [S**herlocked][sherlocked].** The project I'v | \n135 | he project I've worked on for 5 **years,** CocoaPods, had an anno | \n135 | had an announcement of being s**herlocked** in late-2015 - you just have | \n135 | cement of being sherlocked in l**ate-2015** - you just have to deal with | \n137 | n\" dir=\"ltr\">Alfred, Dropbox, S**napchat,** Parse, OpenGL, Objective-C… | \n137 | <br>Quite the body count this W**WDC.</p>&mdash;** Mattt (@mattt) <a | \n137 | y count this WWDC.</p>&mdash; M**attt** (@m**attt**) <a href=\"https://twi | \n137 | this WWDC.</p>&mdash; Mattt (@m**attt)** <a href=\"https://twitter.com | \n137 | atus/473544723118837760\">June 2**,** 2014</a></blockquote> <scrip | \n137 | s/473544723118837760\">June 2, 2**014</a></blockquote>** <script asyn | \n141 | makes it tough for us, as the 3**rd** party community, to build use | \n143 | mpare Jest to either Quick or S**pecta.** Then remember that only Appl | \n145 | > Reference from JS 2**017:** [Jest][jest] | \n157 | rface API (either the DOM, or U**IKit.)** | \n163 | > References from JS 2**017:** [React][react], [Relay][rela | \n165 | running simultaneously as you a**rer** building your application. Im | \n167 | d make your changes. <em>From 2**5** seconds, to less than one</em | \n173 | > Reference from JS 2**017:** [TypeScript][typescript] | \n179 | he dev team. Artsy has around 2**5** developers, the majority of w | \n183 | of the company. For the past 5 **years,** the native mobile proj | \n185 | h the web team. At the end of 2**015,** the Collector Web team intro | \n187 | > Reference from JS 2**017:** [GraphQL][graphql] | \n189 | t a rough prototype ported in 2 **days** work. By working at Reac | \n197 | r skills would continue to be s**iloed.** | \n207 | evel of our application above U**IKit** and we can fork it. All our t | \n209 | no concepts like, _\"We'll use S**teipete's** fork of UIKit for UIPopover r | \n209 | \"We'll use Steipete's fork of U**IKit** for UIPopover rotation fixes\" | \n209 | Steipete's fork of UIKit for U**IPopover** rotation fixes\"_ or _\"My vers | \n213 | > Reference from JS 2**017:** [VS Code][code] | \n215 | much easier to live with the [5**93** dependencies](/blog/2016/08/1 | \n219 | With Swift the language, and S**wiftPM** the package manager, Apple ar | \n219 | ift-pm-slack], Mailing Lists, J**IRA** and Twitter. | \n223 | ks4] _weeks_ during the Swift 2 **->** 3 migration. Having the la | \n223 | _weeks_ during the Swift 2 -> 3 **migration.** Having the languag | \n227 | . So here's the summary after 1 **year.** | \n252 | - Run through the [f**8** app][f**8**] series on  [makeitop | \n252 | the [f8 app][f8] series on  [m**akeitopen.com][f8-open].** | \n259 | - [s**craphold](https://scaphold.io).** | \n260 | - [g**raphcool](https://www.graph.cool/).** | \n\n\n<p align=\"right\" data-meta=\"generated_by_danger\">\n  Generated by :no_entry_sign: <a href=\"http://danger.systems/\">danger</a>\n</p>\n",
          "createdAt": "2017-02-06T19:08:08Z",
          "author": { "login": "ArtsyOpenSource", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA0ODY3Mzc2",
    "number": 311,
    "title": "Fixes typos in Retrospective-Swift-at-Artsy",
    "author": { "login": "pedrovereza", "__typename": "User" },
    "additions": 2,
    "deletions": 2,
    "createdAt": "2017-02-06T19:42:39Z",
    "closedAt": "2017-02-06T19:45:21Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/311",
    "body": "as you **arer** building -> as you are building\r\n\r\nThe only **this** we miss is visual snapshots -> The only thing we miss is visual snapshots\r\n",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "pedrovereza", "__typename": "User" },
        { "login": "orta", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "Thanks!",
          "createdAt": "2017-02-06T19:45:18Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA0ODY5MDQ5",
    "number": 312,
    "title": "Swift edits",
    "author": { "login": "jonallured", "__typename": "User" },
    "additions": 3,
    "deletions": 3,
    "createdAt": "2017-02-06T19:52:20Z",
    "closedAt": "2017-02-06T19:56:08Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/312",
    "body": "Just a few minor edits - take 'em or leave 'em! ❤️ ",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 3,
      "nodes": [
        { "login": "jonallured", "__typename": "User" },
        { "login": "ArtsyOpenSource", "__typename": "User" },
        { "login": "orta", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 2,
      "nodes": [
        {
          "body": "\n### Proselint found issues\n\n#### [_posts/2017-02-05-Retrospective-Swift-at-Artsy.md](/artsy/artsy.github.io/tree/swift-edits/_posts/2017-02-05-Retrospective-Swift-at-Artsy.md)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n139 | Redundancy. Use 'free' instead of 'for free'. | warning\n139 | 'for free' is cliché. | warning\n263 | '[wot]' is archaic. | warning\n312 | No hyphen is necessary in phrasal adjectives with an adverb ending in -ly. | warning\n342 | No hyphen is necessary in phrasal adjectives with an adverb ending in -ly. | warning\n345 | Annotation left in text. | warning\n\n\n### Spell Checker found issues\n\n#### [_posts/2017-02-05-Retrospective-Swift-at-Artsy.md](/artsy/artsy.github.io/tree/swift-edits/_posts/2017-02-05-Retrospective-Swift-at-Artsy.md)\n\nLine | Typo |\n| --- | ------ |\n14 | Swift became public in June **2014,** by August we had started usi | \n16 | on Apple platforms. It was a **no-brainer** to then build an [appleTV app | \n16 | no-brainer to then build an [**appleTV** app][emergence] in Swift, int | \n16 | wift-support into our key app **Eigen** and built non-trivial parts o | \n18 | with React Native in February **2016,** and by August **2016,** we annou | \n18 | February **2016,** and by August **2016,** we announced that [Artsy mov | \n22 | ct Native][react-n], and our [**1-year** summary][summary]. | \n26 | rew. Building anything inside **Eigen** rarely re-used existing nativ | \n26 | till eventually it would take **2** iOS engineers to build a feat | \n28 | By [March **2015][gave_up],** we gave up trying | \n30 | this?\" Over the course of the **2015** winter break we explored idea | \n36 | [**Eigen][eigen]** is an app where we ta | \n36 | data and mapping it to a UI. [**Eidolon][eidolon]** (our Auctions Kiosk | \n36 | . [Emergence][emergence] is a **trivial-ish** tvOS app which has a few view | \n36 | ][emergence] is a trivial-ish **tvOS** app which has a few view cont | \n40 | **Eigen** is where we worried about how | \n40 | e limited in their scope, but **Eigen** is basically the mobile repre | \n40 | going to have something like **Eigen.** | \n42 | needed to re-think our entire **UIKit** stack for Eigen. Strictly spe | \n42 | nk our entire UIKit stack for **Eigen.** Strictly speaking, Objective | \n46 | In the end, for **Eigen,** we came to the conclusion th | \n51 | hich would have ended up like **Spotify's** ([hub][hub]) or Hyperslo's ([ | \n51 | ike Spotify's ([hub][hub]) or **Hyperslo's** ([Spots][spots]) ). | \n62 | The majority of the team had **5+** years of Cocoa experience an | \n74 | OS apps. From libraries like [**Moya][moya],** to foundational proje | \n76 | . This is what happened with [**Moya][moya].** It's a pattern Baseca | \n76 | [Moya][moya]. It's a pattern **Basecamp** discuss when they [talk about | \n84 | Think of apps with their own **filetypes,** that can control inputs and | \n86 | rking with an API is for most **3rd** party developers it should co | \n88 | peaking, don't have. They use **iCloud,** or CloudKit, or whatever, an | \n88 | n't have. They use iCloud, or **CloudKit,** or whatever, and expect you | \n96 | n. A trivial string change in **Eigen** takes [25 seconds][eigen_25] | \n96 | string change in Eigen takes [**25** seconds][eigen_**25**] to show up | \n98 | single edit in a string takes **25** seconds to see the difference | \n98 | ference in the swift parts of **Eigen** <a href=\"https://t.co/MOPGPEW | \n98 | ref=\"https://t.co/MOPGPEWqxX\">**pic.twitter.com/MOPGPEWqxX</a></p>&mdash;** 💍r | \n98 | o/MOPGPEWqxX\">pic.twitter.com/**MOPGPEWqxX</a></p>&mdash;** 💍rta Therox ( | \n98 | m/MOPGPEWqxX</a></p>&mdash; 💍r**ta** Therox (@or**ta**) <a href=\"https | \n98 | PGPEWqxX</a></p>&mdash; 💍rta T**herox** (@orta) <a href=\"https://twit | \n98 | 778242899821621249\">September 2**0,** 2016</a></blockquote></cente | \n98 | 42899821621249\">September 20, 2**016</a></blockquote></center>** | \n100 | talked to Apple engineers at W**WDC,** the idea was dismissed as \"d | \n102 | me of these problems, and the K**ickstarter** app has probably the closest | \n121 | _S**idenote:_** I found it hard to write th | \n121 | encing a sibling article: [JS 2**017][js-2017].** | \n127 | > References from JS 2**017:** [Relay][relay], [Jest][jest] | \n133 | r Apple first and then for us 3**rd** party devs. Outside influence | \n133 | language is Open Source (and [S**wiftPM][swiftpm])** | \n135 | a common word for it, being [S**herlocked][sherlocked].** The project I'v | \n135 | he project I've worked on for 5 **years,** CocoaPods, had an anno | \n135 | had an announcement of being s**herlocked** in late-2015 - you just have | \n135 | cement of being sherlocked in l**ate-2015** - you just have to deal with | \n137 | n\" dir=\"ltr\">Alfred, Dropbox, S**napchat,** Parse, OpenGL, Objective-C… | \n137 | <br>Quite the body count this W**WDC.</p>&mdash;** Mattt (@mattt) <a | \n137 | y count this WWDC.</p>&mdash; M**attt** (@m**attt**) <a href=\"https://twi | \n137 | this WWDC.</p>&mdash; Mattt (@m**attt)** <a href=\"https://twitter.com | \n137 | atus/473544723118837760\">June 2**,** 2014</a></blockquote> <scrip | \n137 | s/473544723118837760\">June 2, 2**014</a></blockquote>** <script asyn | \n141 | makes it tough for us, as the 3**rd** party community, to build use | \n143 | mpare Jest to either Quick or S**pecta.** Then remember that only Appl | \n145 | > Reference from JS 2**017:** [Jest][jest] | \n157 | rface API (either the DOM, or U**IKit.)** | \n163 | > References from JS 2**017:** [React][react], [Relay][rela | \n167 | d make your changes. <em>From 2**5** seconds, to less than one</em | \n173 | > Reference from JS 2**017:** [TypeScript][typescript] | \n179 | he dev team. Artsy has around 2**5** developers, the majority of w | \n183 | of the company. For the past 5 **years,** the native mobile proj | \n185 | h the web team. At the end of 2**015,** the Collector Web team intro | \n187 | > Reference from JS 2**017:** [GraphQL][graphql] | \n189 | t a rough prototype ported in 2 **days** work. By working at Reac | \n197 | r skills would continue to be s**iloed.** | \n207 | evel of our application above U**IKit** and we can fork it. All our t | \n209 | no concepts like, _\"We'll use S**teipete's** fork of UIKit for UIPopover r | \n209 | \"We'll use Steipete's fork of U**IKit** for UIPopover rotation fixes\" | \n209 | Steipete's fork of UIKit for U**IPopover** rotation fixes\"_ or _\"My vers | \n213 | > Reference from JS 2**017:** [VS Code][code] | \n215 | much easier to live with the [5**93** dependencies](/blog/2016/08/1 | \n219 | With Swift the language, and S**wiftPM** the package manager, Apple ar | \n219 | ift-pm-slack], Mailing Lists, J**IRA** and Twitter. | \n223 | ks4] _weeks_ during the Swift 2 **->** 3 migration. Having the la | \n223 | _weeks_ during the Swift 2 -> 3 **migration.** Having the languag | \n227 | . So here's the summary after 1 **year.** | \n252 | - Run through the [f**8** app][f**8**] series on  [makeitop | \n252 | the [f8 app][f8] series on  [m**akeitopen.com][f8-open].** | \n259 | - [s**craphold](https://scaphold.io).** | \n260 | - [g**raphcool](https://www.graph.cool/).** | \n\n\n<p align=\"right\" data-meta=\"generated_by_danger\">\n  Generated by :no_entry_sign: <a href=\"http://danger.systems/\">danger</a>\n</p>\n",
          "createdAt": "2017-02-06T19:54:32Z",
          "author": { "login": "ArtsyOpenSource", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "I'll take 'em - thanks!",
          "createdAt": "2017-02-06T19:56:06Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA0ODk3Nzk1",
    "number": 313,
    "title": "Adds the React Native workshop code + video",
    "author": { "login": "orta", "__typename": "User" },
    "additions": 278,
    "deletions": 0,
    "createdAt": "2017-02-06T22:36:39Z",
    "closedAt": "2017-02-06T22:38:48Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/313",
    "body": "Cleaned up the workshop notes, shipped a youtube video. Should be good to go 👍 ",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "orta", "__typename": "User" },
        { "login": "ArtsyOpenSource", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "\n### Proselint found issues\n\n#### [_posts/2017-02-06-React-Native-Workshop.md](/artsy/artsy.github.io/tree/rn-workshop/_posts/2017-02-06-React-Native-Workshop.md)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n222 | More than 30 ppm of exclamations. Keep them under control. | warning\n\n\n### Spell Checker found issues\n\n#### [_posts/2017-02-06-React-Native-Workshop.md](/artsy/artsy.github.io/tree/rn-workshop/_posts/2017-02-06-React-Native-Workshop.md)\n\nLine | Typo |\n| --- | ------ |\n11 | I request. The video is about **45** minutes, with inline question | \n13 | bably get it working in about **10** minutes. | \n222 | **Tada!** You've made a working relay | \n\n\n<p align=\"right\" data-meta=\"generated_by_danger\">\n  Generated by :no_entry_sign: <a href=\"http://danger.systems/\">danger</a>\n</p>\n",
          "createdAt": "2017-02-06T22:38:04Z",
          "author": { "login": "ArtsyOpenSource", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA1MDA4ODc5",
    "number": 314,
    "title": "Fix naming (minor)",
    "author": { "login": "vtourraine", "__typename": "User" },
    "additions": 1,
    "deletions": 1,
    "createdAt": "2017-02-07T13:51:45Z",
    "closedAt": "2017-02-07T13:52:20Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/314",
    "body": "You probably want “Apple TV” or “tvOS”. 📺 \r\n\r\nPS: thanks for this great article!",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "vtourraine", "__typename": "User" },
        { "login": "orta", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "I do - thanks 👍 ",
          "createdAt": "2017-02-07T13:52:17Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA1MDM0Njcy",
    "number": 315,
    "title": "Fix typo",
    "author": { "login": "vtourraine", "__typename": "User" },
    "additions": 5,
    "deletions": 5,
    "createdAt": "2017-02-07T15:56:57Z",
    "closedAt": "2017-02-07T16:32:19Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/315",
    "body": "Just a couple more typos.",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "vtourraine", "__typename": "User" },
        { "login": "orta", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 2,
      "nodes": [
        {
          "body": "Hah, I'm a native English speaker - and I'm terrible with the its vs it's. :D",
          "createdAt": "2017-02-07T16:32:16Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "thanks",
          "createdAt": "2017-02-07T16:32:31Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 1,
            "nodes": [
              {
                "user": { "login": "vtourraine", "__typename": "User" },
                "__typename": "Reaction"
              }
            ],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA1NTE4OTk5",
    "number": 316,
    "title": "Some minor edits",
    "author": { "login": "jonallured", "__typename": "User" },
    "additions": 3,
    "deletions": 3,
    "createdAt": "2017-02-09T21:38:52Z",
    "closedAt": "2017-02-17T17:29:31Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/316",
    "body": "I hope you like 'em! ❤️ ",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 3,
      "nodes": [
        { "login": "jonallured", "__typename": "User" },
        { "login": "ArtsyOpenSource", "__typename": "User" },
        { "login": "eessex", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 2,
      "nodes": [
        {
          "body": "\n### Proselint found issues\n\n#### [_posts/2017-02-01-year-in-art.markdown](/artsy/artsy.github.io/tree/some-typos-etc/_posts/2017-02-01-year-in-art.markdown)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n59 | Inconsistent spacing after period (1 vs. 2 spaces). | warning\n76 | No hyphen is necessary in phrasal adjectives with an adverb ending in -ly. | warning\n\n\n### Spell Checker found issues\n\n#### [_posts/2017-02-01-year-in-art.markdown](/artsy/artsy.github.io/tree/some-typos-etc/_posts/2017-02-01-year-in-art.markdown)\n\nLine | Typo |\n| --- | ------ |\n9 | Created in collaboration with **UBS** and designed by Owen Dodd, [T | \n9 | with UBS and designed by Owen **Dodd,** [The Year In Art 2016](https | \n9 | y Owen Dodd, [The Year In Art 2016](https://www.artsy.net/2016-y | \n19 | animation opens out from the **center,** and because the entire conta | \n21 | the viewport already, just at **0px** tall, the library wouldn’t re | \n25 | were a known element- we had **10** pieces of content with a targ | \n25 | ntent with a target height of **33%** of the container. Additional | \n25 | ded at a different dimension, **100%** container height. | \n40 | ment should appear. Using the **getScrollZones** method below, we are able to | \n51 | **getScrollZones** returns an array from which w | \n57 | whose height corresponds to @**openHeight,** allowing us to scroll the fu | \n57 | croll the full length or our ‘**scrollZones’** without any visible change o | \n72 | y Artsy in collaboration with **UBS:** | \n74 | - [Venice Biennale 2015](https://www.artsy.net/venice | \n74 | www.artsy.net/venice-biennale-**2015)** | \n\n\n<p align=\"right\" data-meta=\"generated_by_danger\">\n  Generated by :no_entry_sign: <a href=\"http://danger.systems/\">danger</a>\n</p>\n",
          "createdAt": "2017-02-09T21:40:30Z",
          "author": { "login": "ArtsyOpenSource", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "@eessex bump",
          "createdAt": "2017-02-17T14:11:53Z",
          "author": { "login": "jonallured", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 1,
      "nodes": [
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "^ maybe I'm crazy, but I'm pretty sure that link 404s?",
                "author": { "login": "jonallured", "__typename": "User" },
                "createdAt": "2017-02-09T21:39:15Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Thanks for catching this!",
                "author": { "login": "eessex", "__typename": "User" },
                "createdAt": "2017-02-17T17:28:53Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        }
      ],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA1NTIyOTQ2",
    "number": 317,
    "title": "Edits for 2017 front end post",
    "author": { "login": "jonallured", "__typename": "User" },
    "additions": 2,
    "deletions": 2,
    "createdAt": "2017-02-09T22:01:51Z",
    "closedAt": "2017-02-09T22:32:32Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/317",
    "body": "Super minor, but there you go!",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 4,
      "nodes": [
        { "login": "jonallured", "__typename": "User" },
        { "login": "ArtsyOpenSource", "__typename": "User" },
        { "login": "orta", "__typename": "User" },
        { "login": "ashfurrow", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "\n### Proselint found issues\n\n#### [_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md](/artsy/artsy.github.io/tree/front-end-post-edits/_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n\n\n### Spell Checker found issues\n\n#### [_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md](/artsy/artsy.github.io/tree/front-end-post-edits/_posts/2017-02-05-Front-end-JavaScript-at-Artsy-2017.md)\n\nLine | Typo |\n| --- | ------ |\n13 | ers of node, and for the last **4** years the stable stack for th | \n13 | ript + Express + Backbone. In **2016** the mobile team [announced][r | \n15 | parate dev teams for building **Artsy.net** and the corresponding iOS app | \n15 | llector Mobile. By the end of **2016** we decided to merge the teams | \n17 | stack for web/native Artsy in **2017.** | \n25 | Our web stack has been [**ezel.js][ezel]** since 2013, and contin | \n25 | as been [ezel.js][ezel] since **2013,** and continues to be a mature | \n25 | using React and GraphQL with [**muraljs][mural].** However, since the m | \n51 | n VS Code, and tried learning **OCaml** to help out on the [Flow tool | \n65 | er can conform to the GraphQL **spec,** and then clients can make qu | \n86 | ld actually contain a list of **hrefs** instead of the model data, an | \n90 | ive of a native developer [in **2016][mob-graph].** So I'll leave th | \n207 | y's local cache, and then any **un-cached** items are requested from the | \n221 | roject that replaces the NPM [**cli][cli]** client. It's very new, | \n221 | e a fresh re-write of the NPM **cli** would look like. | \n223 | node modules as with the NPM **cli.** | \n246 | change in one source file and **60** tests run from 6 different te | \n246 | ce file and **6**0 tests run from **6** different test suites. Finish | \n272 | , if I changed the background **color** to `blue` from `white`. I get | \n278 | **No **config**** - When we first integrated | \n278 | st integrated Jest, we had no **config.** Now, to make sure that TypeS | \n278 | ns for: Babel, TypeScript and **webpack.** Three of the biggest modern | \n280 | s, useful JSON output, ESLint **linters,** Elegant Mocking tools and na | \n282 | ferent testing frameworks in [**jest-codemods][jest-codemods]** - getting sta | \n282 | 'd also recommend looking at [**wallaby.js][wallaby]** and [vscode-jest][v | \n294 | of this culture came from the **TextMate** and Rails days with the infam | \n294 | ys with the infamous [blog in **15** minutes video][tm-blog]. When | \n296 | and IDEs where you have fully **spec'd** out projects. | \n298 | able to have project specific **setups** is where VS Code really start | \n321 | sound a bit corporate for a ~**25** person dev team, but one chie | \n329 | ound Facebook tech, based on [**three20][three20]** - which I think is | \n329 | ve shown to be really open to **PRs** and discussion, and our work | \n\n\n<p align=\"right\" data-meta=\"generated_by_danger\">\n  Generated by :no_entry_sign: <a href=\"http://danger.systems/\">danger</a>\n</p>\n",
          "createdAt": "2017-02-09T22:03:35Z",
          "author": { "login": "ArtsyOpenSource", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA2NDIwMjcy",
    "number": 319,
    "title": "Update lamda deployment and versioning information",
    "author": { "login": "ashkan18", "__typename": "User" },
    "additions": 6,
    "deletions": 0,
    "createdAt": "2017-02-15T23:08:18Z",
    "closedAt": "2017-02-16T16:10:39Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/319",
    "body": "Add a paragraph describing when we need to go through certification process and how Lambda versioning and Alias can help in production/staging deployments.",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "ashkan18", "__typename": "User" },
        { "login": "dblock", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "How do you create these aliases?",
          "createdAt": "2017-02-16T16:10:46Z",
          "author": { "login": "dblock", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA2NDIyODA3",
    "number": 320,
    "title": "Add Elderfield, APRB and Artsy-EventService",
    "author": { "login": "ashkan18", "__typename": "User" },
    "additions": 21,
    "deletions": 0,
    "createdAt": "2017-02-15T23:26:04Z",
    "closedAt": "2017-02-16T16:11:06Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/320",
    "body": "Adding Elderfield, APRB and Artsy-EventService to list of opensource projects.",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "ashkan18", "__typename": "User" },
        { "login": "dblock", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA2ODIyNjEw",
    "number": 321,
    "title": "Added a note on a live-code of an alexa skill.",
    "author": { "login": "dblock", "__typename": "User" },
    "additions": 1,
    "deletions": 1,
    "createdAt": "2017-02-17T22:15:45Z",
    "closedAt": "2017-02-17T22:20:45Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/321",
    "body": "",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 3,
      "nodes": [
        { "login": "dblock", "__typename": "User" },
        { "login": "ashkan18", "__typename": "User" },
        { "login": "ashfurrow", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "_Alexa ask github to merge this PR after watching the video_",
          "createdAt": "2017-02-17T22:20:37Z",
          "author": { "login": "ashkan18", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA3MjY2NDY0",
    "number": 322,
    "title": "Reduce longform article width",
    "author": { "login": "damassi", "__typename": "User" },
    "additions": 3,
    "deletions": 3,
    "createdAt": "2017-02-21T19:58:25Z",
    "closedAt": "2017-02-21T21:12:27Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/322",
    "body": "This is certainly open for debate, but when clicking through to the [longform article](http://artsy.github.io/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/) off of Jest's website today it immediately struck me that the reading width is far wider than what the eyes are naturally comfortable with. \r\n\r\nGoing over to Medium (where I assume they've done an enormous amount of user testing) I see that they've capped their width at 700px, and so I've brought this PR in line with that. \r\n\r\nThis also reduces some of the cramp between the Artsy logo and the left-hand content margin.\r\n\r\n**Before:** \r\n\r\n![screen shot 2017-02-21 at 11 55 38 am](https://cloud.githubusercontent.com/assets/236943/23182282/d90865ba-f82c-11e6-8e75-bf640cb66f7d.png)\r\n\r\n**After:**\r\n\r\n<img width=\"1382\" alt=\"screen shot 2017-02-21 at 11 56 06 am\" src=\"https://cloud.githubusercontent.com/assets/236943/23182284/df69372c-f82c-11e6-9524-9f580317c43b.png\">\r\n\r\nThoughts?  ",
    "reactions": {
      "totalCount": 1,
      "nodes": [
        {
          "user": { "login": "craigspaeth", "__typename": "User" },
          "__typename": "Reaction"
        }
      ],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "damassi", "__typename": "User" },
        { "login": "orta", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "👍 much better",
          "createdAt": "2017-02-21T21:12:25Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA5MTA5NTkz",
    "number": 323,
    "title": "Bringing Artsy to Google Assistant.",
    "author": { "login": "dblock", "__typename": "User" },
    "additions": 188,
    "deletions": 0,
    "createdAt": "2017-03-04T14:38:50Z",
    "closedAt": "2017-03-06T17:15:26Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/323",
    "body": "https://www.youtube.com/embed/_biW8TDbBGo",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "dblock", "__typename": "User" },
        { "login": "ashkan18", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 2,
      "nodes": [
        {
          "body": "These are excellent points. You can have more actions and you need to bind intents. I've added that code and explanations, care to check  https://github.com/artsy/artsy.github.io/pull/323/commits/2500f11f6a0225ee337ecdf51c0b8035d6feb820 out?",
          "createdAt": "2017-03-05T16:18:00Z",
          "author": { "login": "dblock", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Perfect! 🏅 Thanks for extra explanations. Fee free to merge whenever.",
          "createdAt": "2017-03-05T16:52:19Z",
          "author": { "login": "ashkan18", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 2,
      "nodes": [
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "do we always end up having one action? is it true that everything starts from greetings and then from there everything is a dialog?\r\n\r\nAlso im having hard time understanding how we get to `welcomeIntent`, is that part of the sdk?",
                "author": { "login": "ashkan18", "__typename": "User" },
                "createdAt": "2017-03-04T15:03:41Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "It might be useful to add sample comment here about how to get input and the fact that we need to do regex or nlp at this point",
                "author": { "login": "ashkan18", "__typename": "User" },
                "createdAt": "2017-03-04T15:06:47Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        }
      ],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA5NDIxMTAy",
    "number": 325,
    "title": "Initial stab at tech stack 2017",
    "author": { "login": "orta", "__typename": "User" },
    "additions": 1289,
    "deletions": 15,
    "createdAt": "2017-03-07T07:29:04Z",
    "closedAt": "2017-04-14T18:16:04Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/325",
    "body": "Looks like these are happening every two years, got some time on the train, will keep hacking over time.\r\n\r\n![iu](https://cloud.githubusercontent.com/assets/49038/23646204/28ef29e8-0353-11e7-8c5b-b9b0c4a7f73b.gif)\r\n",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 14,
      "nodes": [
        { "login": "orta", "__typename": "User" },
        { "login": "dblock", "__typename": "User" },
        { "login": "acjay", "__typename": "User" },
        { "login": "ArtsyOpenSource", "__typename": "User" },
        { "login": "joeyAghion", "__typename": "User" },
        { "login": "cavvia", "__typename": "User" },
        { "login": "izakp", "__typename": "User" },
        { "login": "alloy", "__typename": "User" },
        { "login": "mennenia", "__typename": "User" },
        { "login": "oxaudo", "__typename": "User" },
        { "login": "starsirius", "__typename": "User" },
        { "login": "ashkan18", "__typename": "User" },
        { "login": "wrgoldstein", "__typename": "User" },
        { "login": "kanaabe", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 17,
      "nodes": [
        {
          "body": "Thanks for starting this @orta! Looking forward to the next iteration here.",
          "createdAt": "2017-03-07T14:24:51Z",
          "author": { "login": "dblock", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Indeed, I'd say that with all the innovation going on, the practices are at\r\nleast as strong as ever! We simply don't organize our product work along\r\npractice lines anymore.\r\n",
          "createdAt": "2017-03-07T15:09:22Z",
          "author": { "login": "acjay", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "<!--\n  0 Errors\n  0 Warnings\n  0 Messages\n  6 Markdowns\n-->\n\n### Proselint found issues\n\n#### [_design/artsy_all_services.md](/artsy/artsy.github.io/tree/tech_2017/_design/artsy_all_services.md)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n#### [_drafts/artsy-engineering-culture-2017.md](/artsy/artsy.github.io/tree/tech_2017/_drafts/artsy-engineering-culture-2017.md)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n#### [_posts/2016-03-28-artsy-engineering-organization-stack.markdown](/artsy/artsy.github.io/tree/tech_2017/_posts/2016-03-28-artsy-engineering-organization-stack.markdown)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n32 | 'crystal clear,' is cliché. | warning\n32 | 'crystal clear,' is a cliché. | warning\n48 | Substitute 'damn' every time you're inclined to write 'very;' your editor will delete it and the writing will be just as it should be. Found once elsewhere. | warning\n#### [_posts/2016-08-09-the-tech-behind-live-auction-integration.markdown](/artsy/artsy.github.io/tree/tech_2017/_posts/2016-08-09-the-tech-behind-live-auction-integration.markdown)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n#### [_posts/2017-03-05-artsy-technology-stack-2017.md](/artsy/artsy.github.io/tree/tech_2017/_posts/2017-03-05-artsy-technology-stack-2017.md)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n23 | Substitute 'damn' every time you're inclined to write 'very;' your editor will delete it and the writing will be just as it should be. Found 3 times elsewhere. | warning\n\n\n### Spell Checker found issues\n\n#### [_design/artsy_all_services.md](/artsy/artsy.github.io/tree/tech_2017/_design/artsy_all_services.md)\n\nLine | Typo |\n| --- | ------ |\n5 | - force/**eigen** | \n12 | - **Elasticsearch** | \n15 | force + **eigen** talk to graphQL (metaphysics) | \n23 | -  **Lewitt** (Invoicing) | \n25 | - **sandback?** | \n28 | - **gemini** | \n38 | volt -> **gemini** -> s3 | \n38 | volt -> gemini -> **s3** | \n41 | olt + radiation -> impulse -> **sendgrid** | \n49 | fulcrum talks to **saleforce,** ga, mongo, sailthru | \n49 | fulcrum talks to saleforce, **ga,** mongo, sailthru | \n49 | lcrum talks to saleforce, ga, **mongo,** sailthru | \n49 | alks to saleforce, ga, mongo, **sailthru** | \n50 | fulcrum -> **aws** s3 -> redshift -> looker | \n50 | fulcrum -> aws **s3** -> redshift -> looker | \n50 | fulcrum -> aws s3 -> **redshift** -> looker | \n51 | fulcrum -> causality **api** -> redshift | \n51 | fulcrum -> causality api -> **redshift** | \n54 | **Jupyter** Notebooks + Looker -> Looker | \n57 | **Hadoop** Cluster -> Spark jobs -> S3 - | \n57 | doop Cluster -> Spark jobs -> **S3** -> Gravity | \n#### [_drafts/artsy-engineering-culture-2017.md](/artsy/artsy.github.io/tree/tech_2017/_drafts/artsy-engineering-culture-2017.md)\n\nLine | Typo |\n| --- | ------ |\n16 | By the end of **2016,** almost every major front-end | \n16 | e in the open, from developer **PRs** to QA. This post was also wri | \n18 | lestones. This is done using [**ZenHub](https://www.zenhub.com),** and | \n24 | he default branch and all the **PRs** are made to master. Once a PR | \n28 | neering team used IRC, but in **2015** we switched to Slack and enco | \n28 | ny. We're now averaging about **16,000** Slack messages a day insi | \n28 | We're now averaging about 16,**000** Slack messages a day inside A | \n40 | evelopers and other people at **artsy(specialists,** designers, produ | \n#### [_posts/2016-03-28-artsy-engineering-organization-stack.markdown](/artsy/artsy.github.io/tree/tech_2017/_posts/2016-03-28-artsy-engineering-organization-stack.markdown)\n\nLine | Typo |\n| --- | ------ |\n12 | Artsy has now grown past **140** team members and our Engineer | \n12 | ring organization is a nimble **25.** We've recently performed a l | \n12 | ng [\"The Secret(s) to Company Re-Orgs\"](https://www.artsy.net/artic | \n18 | lace. Our growing database of **350,000** images of art, architectu | \n18 | . Our growing database of 350,**000** images of art, architecture, | \n18 | , architecture, and design by **50,000** artists spans historical, | \n18 | rchitecture, and design by 50,**000** artists spans historical, mod | \n22 | Artsy has **3** businesses: _Listings_, _Mark | \n26 | **Marketplace**: In **2015** Artsy expanded into hosting c | \n28 | arts and culture audience. In **2015** we debuted our first sponsore | \n28 | eature on Artsy, a [series of **11** educational short films about | \n28 | Biennale in partnership with UBS](https://www.artsy.net/venice | \n32 | d Key Performance Indicators (**KPIs)** for each business. For examp | \n32 | ss. For example, _churn_ is a **KPI** for the Listings business - a | \n36 | sinesses and inherit the same **KPIs.** | \n42 | **Collector **GMV**:** GMV stands for _Gross Merc | \n42 | **Collector **GMV****: **GMV** stands for _Gross Merchandisi | \n#### [_posts/2016-08-09-the-tech-behind-live-auction-integration.markdown](/artsy/artsy.github.io/tree/tech_2017/_posts/2016-08-09-the-tech-behind-live-auction-integration.markdown)\n\nLine | Typo |\n| --- | ------ |\n11 | our Live Auction Integration (**LAI)** product. It allows people to | \n15 | **LAI** raised challenges that were n | \n24 | he architecture and UX of the **LAI** product were optimized for th | \n44 | ## The iOS native app: **Eigen** | \n46 | n to our engineering team as [Eigen](https://github.com/artsy/eig | \n46 | tsy/eigen), a touch-optimized **LAI** experience was coded in Swift | \n50 | system over a bidirectional [WebSocket](https://en.wikipedia.org/wik | \n54 | ece of software delivered for **LAI** was a new auction state manag | \n54 | , and hosts the bidirectional **WebSocket** API. | \n56 | eveloped in Scala, using the [Akka](http://doc.akka.io/docs/akka | \n56 | nly storage engine, based on [**Akka** Persistence](http://doc.akka. | \n58 | Lastly, Causality has an [**Akka** HTTP](http://doc.akka.io/docs | \n58 | html)-based API layer, with a **WebSocket** server implemented using [Akk | \n58 | ket server implemented using [**Akka** Streams](http://doc.akka.io/d | \n58 | hed across the cluster using [**Akka** Distributed Pub/Sub](http://d | \n58 | and they are merged into the **WebSocket** outflow. | \n62 | gy. The work of preparing our **preexisting** tech for LAI involved widespr | \n62 | ring our preexisting tech for **LAI** involved widespread modificat | \n62 | e sale, as well as a reliable **handoff** of responsibility from these | \n62 | of responsibility from these **preexisting** front- and back-end services | \n64 | ons team, to ensure that this **handoff** functioned smoothly under var | \n64 | e delicate refactoring of our **preexisting** tooling, which we will take o | \n68 | In the process of **architecting** our LAI product, we had to ma | \n68 | e process of architecting our **LAI** product, we had to make some | \n#### [_posts/2017-03-05-artsy-technology-stack-2017.md](/artsy/artsy.github.io/tree/tech_2017/_posts/2017-03-05-artsy-technology-stack-2017.md)\n\nLine | Typo |\n| --- | ------ |\n12 | Artsy was [launched in **2012** as the \"Art Genome Project\"]( | \n14 | By **2014** we had 230,000 works of art f | \n14 | By 2014 we had **230,000** works of art from 600 mus | \n14 | By 2014 we had 230,**000** works of art from 600 museums | \n14 | had 230,000 works of art from **600** museums and institutions and | \n14 | cial galleries, bringing over **80,000** works for sale and partne | \n14 | l galleries, bringing over 80,**000** works for sale and partnershi | \n14 | or sale and partnerships with **37** art fairs and a handful of be | \n14 | ns. That year collectors from **82** countries inquired on over $5 | \n14 | 2 countries inquired on over $**5.5B** of art. | \n16 | By **2015** we doubled our \"for sale\" inv | \n16 | ale\" inventory and aggregated **4,000** of the world's leading ga | \n16 | e\" inventory and aggregated 4,**000** of the world's leading galler | \n16 | world's leading galleries and **60** art fairs. We also launched t | \n18 | Finally, in **2016** we, again, doubled our paid g | \n18 | g editorial traffic ballooned **320%.** We also launched a platform | \n21 | # The Artsy Business in **2017** | \n23 | Artsy in **2017** is a very wide platform and i | \n35 | The Artsy team is now **166** employees across three office | \n35 | gineering organization is now **28** engineers, including 4 leads, | \n35 | s now 28 engineers, including **4** leads, 3 directors and a CTO. | \n35 | engineers, including 4 leads, **3** directors and a CTO. In this | \n47 | In **2016,** we [updated the Engineering | \n49 | re product teams used to have **2** separate sub-teams of enginee | \n49 | eers, they've now merged into **1.** | \n67 | you see today when you go to [**www.artsy.net](https://artsy.net)** is a webs | \n67 | net) is a website built with [**Ezel.js](http://ezeljs.com),** which is | \n67 | s](http://expressjs.com) and [**Browserify](http://browserify.org).** We u | \n67 | he combined app is hosted on [**Heroku](http://heroku.com)** and uses | \n67 | (http://heroku.com) and uses [**Redis](http://redis.io)** for caching | \n67 | ages, are served from [Amazon **S3](http://aws.amazon.com/s3)** vi | \n67 | //aws.amazon.com/s3) via the [**CloudFront** CDN](http://aws.amazon.com/cl | \n67 | n.com/s3) via the [CloudFront CDN](http://aws.amazon.com/cloudf | \n71 | You can also find Artsy on [**Alexa](http://alexa.artsy.net)** and | \n71 | ), which are both open-source **Node.js** applications. There is also a | \n73 | y JSON. The API is hosted on [**AWS** OpsWorks](http://aws.amazon.c | \n73 | ON. The API is hosted on [AWS OpsWorks](http://aws.amazon.com/opswor | \n73 | retrieves data from several [**MongoDB](http://www.mongodb.com)** data | \n73 | ww.compose.io). It also uses [**Memcached](http://memcached.org)** for ca | \n73 | mcached.org) for caching and [**Redis](https://redis.io)** for backgr | \n73 | ) for background queues with [Sidekiq](https://github.com/mperham/s | \n73 | background jobs with [delayed_job](https://github.com/collectiv | \n73 | b). We used to employ [Apache Solr](http://lucene.apache.org/sol | \n73 | t have since consolidated on [**Elasticsearch](https://www.elastic.co).** | \n88 | and charging credit cards and **ACH)** with invoicing. | \n90 | p](http://getbootstrap.com), [Turbolinks](https://github.com/turbolink | \n90 | acebook.github.io/react) and [**Browserify](http://browserify.org).** They | \n92 | ls](http://rubyonrails.org), [Sidekiq](https://github.com/mperham/s | \n92 | ithub.com/mperham/sidekiq/), [**Redis](https://redis.io),** and [RMag | \n92 | edis](https://redis.io), and [RMagick](https://github.com/rmagick/r | \n92 | ub.com/rmagick/rmagick) with [ImageMagick](http://www.imagemagick.org/s | \n92 | iles and watermarks images on **S3.** | \n100 | r before we began our move to **microservices,** and so it is baked into our | \n102 | cala micro-service that uses [**Akka](http://akka.io)** for distribu | \n102 | only storage engine, based on **Akka** Persistence, with a small lib | \n102 | e done via a REST API, or via **WebSockets.** People visiting a Live Aucti | \n102 | om/JensRavens/Interstellar), [Starscream](https://github.com/daltoniam | \n102 | om/daltoniam/starscream) and [SwiftyJSON](https://github.com/SwiftyJSO | \n110 | Writer's **frontend** is built with [Ezel.js](http: | \n110 | ter's frontend is built with [**Ezel.js](http://ezeljs.com),** which is | \n110 | s](http://expressjs.com) and [**Browserify](http://browserify.org).** We a | \n110 | //coffeescript.org). Writer's **backend** exposes [REST](https://en.wik | \n112 | ork when you see articles on [**www.artsy.net](https://www.artsy.net),** Face | \n112 | projects such as [Year in Art 2016](https://www.artsy.net/2016-y | \n112 | ear-in-art), and [Year in Art 2015](https://www.artsy.net/articl | \n116 | plications and services into [**AWS** RedShift](https://aws.amazon. | \n116 | ations and services into [AWS RedShift](https://aws.amazon.com/redsh | \n116 | to move data from our several **MongoDB** and PostgreSQL databases to R | \n116 | from our several MongoDB and **PostgreSQL** databases to Redshift via [S3 | \n116 | B and PostgreSQL databases to **Redshift** via [S3](https://aws.amazon.c | \n116 | QL databases to Redshift via [**S3](https://aws.amazon.com/s3).** | \n116 | hese rake tasks shell out to [psql](https://www.postgresql.org/d | \n116 | 9.3/static/sql-copy.html) or [mongo-export](https://docs.mongodb.com/man | \n116 | ervices and upload them to an **S3** bucket, then load those CSV f | \n116 | there by other services) into **Redshift.** If a [Redshift copy](http:// | \n116 | ervices) into **Redshift**. If a [**Redshift** copy](http://docs.aws.amazon. | \n118 | as data from vendors such as [**Salesforce](https://www.salesforce.com)** | \n118 | ps://www.salesforce.com) and [**Sailthru](http://www.sailthru.com).** | \n120 | ite sitemaps, we have our own **Hadoop** cluster configured and manage | \n120 | er configured and managed by [**Cloudera** Manager](https://www.cloudera | \n120 | -manager.html) and running on **EC2.** We leverage [Apache Spark](h | \n120 | http://spark.apache.org) and [Hadoop](https://www.cloudera.com/pro | \n120 | pache-hadoop.html) with some [**Ooozie](http://oozie.apache.org)** wor | \n120 | pipeline that writes data to **S3** also pumps data to HDFS with | \n120 | data to S3 also pumps data to **HDFS** with either Ruby code or [Sqo | \n120 | DFS with either Ruby code or [**Sqoop](http://sqoop.apache.org)** and | \n124 | he time of writing, there are **50** users running 3,**50**0 queries a | \n124 | g, there are 50 users running **3,500** queries a day against Red | \n124 | there are 50 users running 3,**500** queries a day against Redshif | \n124 | g 3,500 queries a day against **Redshift** via Looker. We've found it ex | \n124 | and to create our own session **rollups** from raw pageviews and events | \n124 | ives us in understanding user **behavior.** | \n126 | r more in-depth work, we use [**Jupyter** Notebooks](https://ipython.or | \n126 | ebook.html) to connect to our **Redshift** cluster and by default import | \n126 | ](http://pandas.pydata.org), [**sci-kit** learn](http://scikit-learn.or | \n126 | cikit-learn.org/stable), and [pyplot](http://matplotlib.org/api/py | \n130 | eted our full migration from [Solr](http://lucene.apache.org/sol | \n130 | //lucene.apache.org/solr) to [**Elasticsearch](https://www.elastic.co)** in t | \n130 | //www.elastic.co) in the last **18** months, and now use Elasticse | \n130 | e last 18 months, and now use **Elasticsearch** across all front-ends. This r | \n130 | artwork similarity features. **Elasticsearch** gives us high availability cl | \n134 | resentational_state_transfer)-**ful** HTTP APIs, maintain separate | \n148 | rd to manage, we switched to [**RabbitMQ](https://www.rabbitmq.com)** fo | \n152 | All our recent **AWS** infrastructure is configured | \n152 | .com) workflow toolkit named [Hokusai](https://github.com/artsy/hok | \n152 | s clusters are managed using [Kops](https://github.com/kubernete | \n152 | is reducing our dependence on **Heroku,** giving us more flexibility i | \n156 | large as the daily work for a **thirty-ish** person engineering team, [the | \n\n\n### Spell Checker found issues\n\n#### [_design/artsy_all_services.md](/artsy/artsy.github.io/tree/tech_2017/_design/artsy_all_services.md)\n\nLine | Typo |\n| --- | ------ |\n5 | - force/**eigen** | \n12 | - **Elasticsearch** | \n15 | force + **eigen** talk to graphQL (metaphysics) | \n23 | -  **Lewitt** (Invoicing) | \n25 | - **sandback?** | \n28 | - **gemini** | \n38 | volt -> **gemini** -> s3 | \n38 | volt -> gemini -> **s3** | \n41 | olt + radiation -> impulse -> **sendgrid** | \n49 | fulcrum talks to **saleforce,** ga, mongo, sailthru | \n49 | fulcrum talks to saleforce, **ga,** mongo, sailthru | \n49 | lcrum talks to saleforce, ga, **mongo,** sailthru | \n49 | alks to saleforce, ga, mongo, **sailthru** | \n50 | fulcrum -> **aws** s3 -> redshift -> looker | \n50 | fulcrum -> aws **s3** -> redshift -> looker | \n50 | fulcrum -> aws s3 -> **redshift** -> looker | \n51 | fulcrum -> causality **api** -> redshift | \n51 | fulcrum -> causality api -> **redshift** | \n54 | **Jupyter** Notebooks + Looker -> Looker | \n57 | **Hadoop** Cluster -> Spark jobs -> S3 - | \n57 | doop Cluster -> Spark jobs -> **S3** -> Gravity | \n#### [_drafts/artsy-engineering-culture-2017.md](/artsy/artsy.github.io/tree/tech_2017/_drafts/artsy-engineering-culture-2017.md)\n\nLine | Typo |\n| --- | ------ |\n16 | By the end of **2016,** almost every major front-end | \n16 | e in the open, from developer **PRs** to QA. This post was also wri | \n18 | lestones. This is done using [**ZenHub](https://www.zenhub.com),** and | \n24 | he default branch and all the **PRs** are made to master. Once a PR | \n28 | neering team used IRC, but in **2015** we switched to Slack and enco | \n28 | ny. We're now averaging about **16,000** Slack messages a day insi | \n28 | We're now averaging about 16,**000** Slack messages a day inside A | \n40 | evelopers and other people at **artsy(specialists,** designers, produ | \n#### [_posts/2016-03-28-artsy-engineering-organization-stack.markdown](/artsy/artsy.github.io/tree/tech_2017/_posts/2016-03-28-artsy-engineering-organization-stack.markdown)\n\nLine | Typo |\n| --- | ------ |\n12 | Artsy has now grown past **140** team members and our Engineer | \n12 | ring organization is a nimble **25.** We've recently performed a l | \n12 | ng [\"The Secret(s) to Company Re-Orgs\"](https://www.artsy.net/artic | \n18 | lace. Our growing database of **350,000** images of art, architectu | \n18 | . Our growing database of 350,**000** images of art, architecture, | \n18 | , architecture, and design by **50,000** artists spans historical, | \n18 | rchitecture, and design by 50,**000** artists spans historical, mod | \n22 | Artsy has **3** businesses: _Listings_, _Mark | \n26 | **Marketplace**: In **2015** Artsy expanded into hosting c | \n28 | arts and culture audience. In **2015** we debuted our first sponsore | \n28 | eature on Artsy, a [series of **11** educational short films about | \n28 | Biennale in partnership with UBS](https://www.artsy.net/venice | \n32 | d Key Performance Indicators (**KPIs)** for each business. For examp | \n32 | ss. For example, _churn_ is a **KPI** for the Listings business - a | \n36 | sinesses and inherit the same **KPIs.** | \n42 | **Collector **GMV**:** GMV stands for _Gross Merc | \n42 | **Collector **GMV****: **GMV** stands for _Gross Merchandisi | \n#### [_posts/2016-08-09-the-tech-behind-live-auction-integration.markdown](/artsy/artsy.github.io/tree/tech_2017/_posts/2016-08-09-the-tech-behind-live-auction-integration.markdown)\n\nLine | Typo |\n| --- | ------ |\n11 | our Live Auction Integration (**LAI)** product. It allows people to | \n15 | **LAI** raised challenges that were n | \n24 | he architecture and UX of the **LAI** product were optimized for th | \n44 | ## The iOS native app: **Eigen** | \n46 | n to our engineering team as [Eigen](https://github.com/artsy/eig | \n46 | tsy/eigen), a touch-optimized **LAI** experience was coded in Swift | \n50 | system over a bidirectional [WebSocket](https://en.wikipedia.org/wik | \n54 | ece of software delivered for **LAI** was a new auction state manag | \n54 | , and hosts the bidirectional **WebSocket** API. | \n56 | eveloped in Scala, using the [Akka](http://doc.akka.io/docs/akka | \n56 | nly storage engine, based on [**Akka** Persistence](http://doc.akka. | \n58 | Lastly, Causality has an [**Akka** HTTP](http://doc.akka.io/docs | \n58 | html)-based API layer, with a **WebSocket** server implemented using [Akk | \n58 | ket server implemented using [**Akka** Streams](http://doc.akka.io/d | \n58 | hed across the cluster using [**Akka** Distributed Pub/Sub](http://d | \n58 | and they are merged into the **WebSocket** outflow. | \n62 | gy. The work of preparing our **preexisting** tech for LAI involved widespr | \n62 | ring our preexisting tech for **LAI** involved widespread modificat | \n62 | e sale, as well as a reliable **handoff** of responsibility from these | \n62 | of responsibility from these **preexisting** front- and back-end services | \n64 | ons team, to ensure that this **handoff** functioned smoothly under var | \n64 | e delicate refactoring of our **preexisting** tooling, which we will take o | \n68 | In the process of **architecting** our LAI product, we had to ma | \n68 | e process of architecting our **LAI** product, we had to make some | \n#### [_posts/2017-03-05-artsy-technology-stack-2017.md](/artsy/artsy.github.io/tree/tech_2017/_posts/2017-03-05-artsy-technology-stack-2017.md)\n\nLine | Typo |\n| --- | ------ |\n12 | Artsy was [launched in **2012** as the \"Art Genome Project\"]( | \n14 | By **2014** we had 230,000 works of art f | \n14 | By 2014 we had **230,000** works of art from 600 mus | \n14 | By 2014 we had 230,**000** works of art from 600 museums | \n14 | had 230,000 works of art from **600** museums and institutions and | \n14 | cial galleries, bringing over **80,000** works for sale and partne | \n14 | l galleries, bringing over 80,**000** works for sale and partnershi | \n14 | or sale and partnerships with **37** art fairs and a handful of be | \n14 | ns. That year collectors from **82** countries inquired on over $5 | \n14 | 2 countries inquired on over $**5.5B** of art. | \n16 | By **2015** we doubled our \"for sale\" inv | \n16 | ale\" inventory and aggregated **4,000** of the world's leading ga | \n16 | e\" inventory and aggregated 4,**000** of the world's leading galler | \n16 | world's leading galleries and **60** art fairs. We also launched t | \n18 | Finally, in **2016** we, again, doubled our paid g | \n18 | g editorial traffic ballooned **320%.** We also launched a platform | \n21 | # The Artsy Business in **2017** | \n23 | Artsy in **2017** is a very wide platform and i | \n35 | The Artsy team is now **166** employees across three office | \n35 | gineering organization is now **28** engineers, including 4 leads, | \n35 | s now 28 engineers, including **4** leads, 3 directors and a CTO. | \n35 | engineers, including 4 leads, **3** directors and a CTO. In this | \n47 | In **2016,** we [updated the Engineering | \n49 | re product teams used to have **2** separate sub-teams of enginee | \n49 | eers, they've now merged into **1.** | \n67 | you see today when you go to [**www.artsy.net](https://artsy.net)** is a webs | \n67 | net) is a website built with [**Ezel.js](http://ezeljs.com),** which is | \n67 | s](http://expressjs.com) and [**Browserify](http://browserify.org).** We u | \n67 | he combined app is hosted on [**Heroku](http://heroku.com)** and uses | \n67 | (http://heroku.com) and uses [**Redis](http://redis.io)** for caching | \n67 | ages, are served from [Amazon **S3](http://aws.amazon.com/s3)** vi | \n67 | //aws.amazon.com/s3) via the [**CloudFront** CDN](http://aws.amazon.com/cl | \n67 | n.com/s3) via the [CloudFront CDN](http://aws.amazon.com/cloudf | \n71 | You can also find Artsy on [**Alexa](http://alexa.artsy.net)** and | \n71 | ), which are both open-source **Node.js** applications. There is also a | \n73 | y JSON. The API is hosted on [**AWS** OpsWorks](http://aws.amazon.c | \n73 | ON. The API is hosted on [AWS OpsWorks](http://aws.amazon.com/opswor | \n73 | retrieves data from several [**MongoDB](http://www.mongodb.com)** data | \n73 | ww.compose.io). It also uses [**Memcached](http://memcached.org)** for ca | \n73 | mcached.org) for caching and [**Redis](https://redis.io)** for backgr | \n73 | ) for background queues with [Sidekiq](https://github.com/mperham/s | \n73 | background jobs with [delayed_job](https://github.com/collectiv | \n73 | b). We used to employ [Apache Solr](http://lucene.apache.org/sol | \n73 | t have since consolidated on [**Elasticsearch](https://www.elastic.co).** | \n88 | and charging credit cards and **ACH)** with invoicing. | \n90 | p](http://getbootstrap.com), [Turbolinks](https://github.com/turbolink | \n90 | acebook.github.io/react) and [**Browserify](http://browserify.org).** They | \n92 | ls](http://rubyonrails.org), [Sidekiq](https://github.com/mperham/s | \n92 | ithub.com/mperham/sidekiq/), [**Redis](https://redis.io),** and [RMag | \n92 | edis](https://redis.io), and [RMagick](https://github.com/rmagick/r | \n92 | ub.com/rmagick/rmagick) with [ImageMagick](http://www.imagemagick.org/s | \n92 | iles and watermarks images on **S3.** | \n100 | r before we began our move to **microservices,** and so it is baked into our | \n102 | cala micro-service that uses [**Akka](http://akka.io)** for distribu | \n102 | only storage engine, based on **Akka** Persistence, with a small lib | \n102 | e done via a REST API, or via **WebSockets.** People visiting a Live Aucti | \n102 | om/JensRavens/Interstellar), [Starscream](https://github.com/daltoniam | \n102 | om/daltoniam/starscream) and [SwiftyJSON](https://github.com/SwiftyJSO | \n110 | Writer's **frontend** is built with [Ezel.js](http: | \n110 | ter's frontend is built with [**Ezel.js](http://ezeljs.com),** which is | \n110 | s](http://expressjs.com) and [**Browserify](http://browserify.org).** We a | \n110 | //coffeescript.org). Writer's **backend** exposes [REST](https://en.wik | \n112 | ork when you see articles on [**www.artsy.net](https://www.artsy.net),** Face | \n112 | projects such as [Year in Art 2016](https://www.artsy.net/2016-y | \n112 | ear-in-art), and [Year in Art 2015](https://www.artsy.net/articl | \n116 | plications and services into [**AWS** RedShift](https://aws.amazon. | \n116 | ations and services into [AWS RedShift](https://aws.amazon.com/redsh | \n116 | to move data from our several **MongoDB** and PostgreSQL databases to R | \n116 | from our several MongoDB and **PostgreSQL** databases to Redshift via [S3 | \n116 | B and PostgreSQL databases to **Redshift** via [S3](https://aws.amazon.c | \n116 | QL databases to Redshift via [**S3](https://aws.amazon.com/s3).** | \n116 | hese rake tasks shell out to [psql](https://www.postgresql.org/d | \n116 | 9.3/static/sql-copy.html) or [mongo-export](https://docs.mongodb.com/man | \n116 | ervices and upload them to an **S3** bucket, then load those CSV f | \n116 | there by other services) into **Redshift.** If a [Redshift copy](http:// | \n116 | ervices) into **Redshift**. If a [**Redshift** copy](http://docs.aws.amazon. | \n118 | as data from vendors such as [**Salesforce](https://www.salesforce.com)** | \n118 | ps://www.salesforce.com) and [**Sailthru](http://www.sailthru.com).** | \n120 | ite sitemaps, we have our own **Hadoop** cluster configured and manage | \n120 | er configured and managed by [**Cloudera** Manager](https://www.cloudera | \n120 | -manager.html) and running on **EC2.** We leverage [Apache Spark](h | \n120 | http://spark.apache.org) and [Hadoop](https://www.cloudera.com/pro | \n120 | pache-hadoop.html) with some [**Ooozie](http://oozie.apache.org)** wor | \n120 | pipeline that writes data to **S3** also pumps data to HDFS with | \n120 | data to S3 also pumps data to **HDFS** with either Ruby code or [Sqo | \n120 | DFS with either Ruby code or [**Sqoop](http://sqoop.apache.org)** and | \n124 | he time of writing, there are **50** users running 3,**50**0 queries a | \n124 | g, there are 50 users running **3,500** queries a day against Red | \n124 | there are 50 users running 3,**500** queries a day against Redshif | \n124 | g 3,500 queries a day against **Redshift** via Looker. We've found it ex | \n124 | and to create our own session **rollups** from raw pageviews and events | \n124 | ives us in understanding user **behavior.** | \n126 | r more in-depth work, we use [**Jupyter** Notebooks](https://ipython.or | \n126 | ebook.html) to connect to our **Redshift** cluster and by default import | \n126 | ](http://pandas.pydata.org), [**sci-kit** learn](http://scikit-learn.or | \n126 | cikit-learn.org/stable), and [pyplot](http://matplotlib.org/api/py | \n130 | eted our full migration from [Solr](http://lucene.apache.org/sol | \n130 | //lucene.apache.org/solr) to [**Elasticsearch](https://www.elastic.co)** in t | \n130 | //www.elastic.co) in the last **18** months, and now use Elasticse | \n130 | e last 18 months, and now use **Elasticsearch** across all front-ends. This r | \n130 | artwork similarity features. **Elasticsearch** gives us high availability cl | \n134 | resentational_state_transfer)-**ful** HTTP APIs, maintain separate | \n148 | rd to manage, we switched to [**RabbitMQ](https://www.rabbitmq.com)** fo | \n152 | All our recent **AWS** infrastructure is configured | \n152 | .com) workflow toolkit named [Hokusai](https://github.com/artsy/hok | \n152 | s clusters are managed using [Kops](https://github.com/kubernete | \n152 | is reducing our dependence on **Heroku,** giving us more flexibility i | \n156 | large as the daily work for a **thirty-ish** person engineering team, [the | \n\n\n### Spell Checker found issues\n\n#### [_design/artsy_all_services.md](/artsy/artsy.github.io/tree/tech_2017/_design/artsy_all_services.md)\n\nLine | Typo |\n| --- | ------ |\n5 | - force/**eigen** | \n12 | - **Elasticsearch** | \n15 | force + **eigen** talk to graphQL (metaphysics) | \n23 | -  **Lewitt** (Invoicing) | \n25 | - **sandback?** | \n28 | - **gemini** | \n38 | volt -> **gemini** -> s3 | \n38 | volt -> gemini -> **s3** | \n41 | olt + radiation -> impulse -> **sendgrid** | \n49 | fulcrum talks to **saleforce,** ga, mongo, sailthru | \n49 | fulcrum talks to saleforce, **ga,** mongo, sailthru | \n49 | lcrum talks to saleforce, ga, **mongo,** sailthru | \n49 | alks to saleforce, ga, mongo, **sailthru** | \n50 | fulcrum -> **aws** s3 -> redshift -> looker | \n50 | fulcrum -> aws **s3** -> redshift -> looker | \n50 | fulcrum -> aws s3 -> **redshift** -> looker | \n51 | fulcrum -> causality **api** -> redshift | \n51 | fulcrum -> causality api -> **redshift** | \n54 | **Jupyter** Notebooks + Looker -> Looker | \n57 | **Hadoop** Cluster -> Spark jobs -> S3 - | \n57 | doop Cluster -> Spark jobs -> **S3** -> Gravity | \n#### [_drafts/artsy-engineering-culture-2017.md](/artsy/artsy.github.io/tree/tech_2017/_drafts/artsy-engineering-culture-2017.md)\n\nLine | Typo |\n| --- | ------ |\n16 | By the end of **2016,** almost every major front-end | \n16 | e in the open, from developer **PRs** to QA. This post was also wri | \n18 | lestones. This is done using [**ZenHub](https://www.zenhub.com),** and | \n24 | he default branch and all the **PRs** are made to master. Once a PR | \n28 | neering team used IRC, but in **2015** we switched to Slack and enco | \n28 | ny. We're now averaging about **16,000** Slack messages a day insi | \n28 | We're now averaging about 16,**000** Slack messages a day inside A | \n40 | evelopers and other people at **artsy(specialists,** designers, produ | \n#### [_posts/2016-03-28-artsy-engineering-organization-stack.markdown](/artsy/artsy.github.io/tree/tech_2017/_posts/2016-03-28-artsy-engineering-organization-stack.markdown)\n\nLine | Typo |\n| --- | ------ |\n12 | Artsy has now grown past **140** team members and our Engineer | \n12 | ring organization is a nimble **25.** We've recently performed a l | \n12 | ng [\"The Secret(s) to Company Re-Orgs\"](https://www.artsy.net/artic | \n18 | lace. Our growing database of **350,000** images of art, architectu | \n18 | . Our growing database of 350,**000** images of art, architecture, | \n18 | , architecture, and design by **50,000** artists spans historical, | \n18 | rchitecture, and design by 50,**000** artists spans historical, mod | \n22 | Artsy has **3** businesses: _Listings_, _Mark | \n26 | **Marketplace**: In **2015** Artsy expanded into hosting c | \n28 | arts and culture audience. In **2015** we debuted our first sponsore | \n28 | eature on Artsy, a [series of **11** educational short films about | \n28 | Biennale in partnership with UBS](https://www.artsy.net/venice | \n32 | d Key Performance Indicators (**KPIs)** for each business. For examp | \n32 | ss. For example, _churn_ is a **KPI** for the Listings business - a | \n36 | sinesses and inherit the same **KPIs.** | \n42 | **Collector **GMV**:** GMV stands for _Gross Merc | \n42 | **Collector **GMV****: **GMV** stands for _Gross Merchandisi | \n#### [_posts/2016-08-09-the-tech-behind-live-auction-integration.markdown](/artsy/artsy.github.io/tree/tech_2017/_posts/2016-08-09-the-tech-behind-live-auction-integration.markdown)\n\nLine | Typo |\n| --- | ------ |\n11 | our Live Auction Integration (**LAI)** product. It allows people to | \n15 | **LAI** raised challenges that were n | \n24 | he architecture and UX of the **LAI** product were optimized for th | \n44 | ## The iOS native app: **Eigen** | \n46 | n to our engineering team as [Eigen](https://github.com/artsy/eig | \n46 | tsy/eigen), a touch-optimized **LAI** experience was coded in Swift | \n50 | system over a bidirectional [WebSocket](https://en.wikipedia.org/wik | \n54 | ece of software delivered for **LAI** was a new auction state manag | \n54 | , and hosts the bidirectional **WebSocket** API. | \n56 | eveloped in Scala, using the [Akka](http://doc.akka.io/docs/akka | \n56 | nly storage engine, based on [**Akka** Persistence](http://doc.akka. | \n58 | Lastly, Causality has an [**Akka** HTTP](http://doc.akka.io/docs | \n58 | html)-based API layer, with a **WebSocket** server implemented using [Akk | \n58 | ket server implemented using [**Akka** Streams](http://doc.akka.io/d | \n58 | hed across the cluster using [**Akka** Distributed Pub/Sub](http://d | \n58 | and they are merged into the **WebSocket** outflow. | \n62 | gy. The work of preparing our **preexisting** tech for LAI involved widespr | \n62 | ring our preexisting tech for **LAI** involved widespread modificat | \n62 | e sale, as well as a reliable **handoff** of responsibility from these | \n62 | of responsibility from these **preexisting** front- and back-end services | \n64 | ons team, to ensure that this **handoff** functioned smoothly under var | \n64 | e delicate refactoring of our **preexisting** tooling, which we will take o | \n68 | In the process of **architecting** our LAI product, we had to ma | \n68 | e process of architecting our **LAI** product, we had to make some | \n#### [_posts/2017-03-05-artsy-technology-stack-2017.md](/artsy/artsy.github.io/tree/tech_2017/_posts/2017-03-05-artsy-technology-stack-2017.md)\n\nLine | Typo |\n| --- | ------ |\n12 | Artsy was [launched in **2012** as the \"Art Genome Project\"]( | \n14 | By **2014** we had 230,000 works of art f | \n14 | By 2014 we had **230,000** works of art from 600 mus | \n14 | By 2014 we had 230,**000** works of art from 600 museums | \n14 | had 230,000 works of art from **600** museums and institutions and | \n14 | cial galleries, bringing over **80,000** works for sale and partne | \n14 | l galleries, bringing over 80,**000** works for sale and partnershi | \n14 | or sale and partnerships with **37** art fairs and a handful of be | \n14 | ns. That year collectors from **82** countries inquired on over $5 | \n14 | 2 countries inquired on over $**5.5B** of art. | \n16 | By **2015** we doubled our \"for sale\" inv | \n16 | ale\" inventory and aggregated **4,000** of the world's leading ga | \n16 | e\" inventory and aggregated 4,**000** of the world's leading galler | \n16 | world's leading galleries and **60** art fairs. We also launched t | \n18 | Finally, in **2016** we, again, doubled our paid g | \n18 | g editorial traffic ballooned **320%.** We also launched a platform | \n21 | # The Artsy Business in **2017** | \n23 | Artsy in **2017** is a very wide platform and i | \n35 | The Artsy team is now **166** employees across three office | \n35 | gineering organization is now **28** engineers, including 4 leads, | \n35 | s now 28 engineers, including **4** leads, 3 directors and a CTO. | \n35 | engineers, including 4 leads, **3** directors and a CTO. In this | \n47 | In **2016,** we [updated the Engineering | \n49 | re product teams used to have **2** separate sub-teams of enginee | \n49 | eers, they've now merged into **1.** | \n67 | you see today when you go to [**www.artsy.net](https://artsy.net)** is a webs | \n67 | net) is a website built with [**Ezel.js](http://ezeljs.com),** which is | \n67 | s](http://expressjs.com) and [**Browserify](http://browserify.org).** We u | \n67 | he combined app is hosted on [**Heroku](http://heroku.com)** and uses | \n67 | (http://heroku.com) and uses [**Redis](http://redis.io)** for caching | \n67 | ages, are served from [Amazon **S3](http://aws.amazon.com/s3)** vi | \n67 | //aws.amazon.com/s3) via the [**CloudFront** CDN](http://aws.amazon.com/cl | \n67 | n.com/s3) via the [CloudFront CDN](http://aws.amazon.com/cloudf | \n71 | You can also find Artsy on [**Alexa](http://alexa.artsy.net)** and | \n71 | ), which are both open-source **Node.js** applications. There is also a | \n73 | y JSON. The API is hosted on [**AWS** OpsWorks](http://aws.amazon.c | \n73 | ON. The API is hosted on [AWS OpsWorks](http://aws.amazon.com/opswor | \n73 | retrieves data from several [**MongoDB](http://www.mongodb.com)** data | \n73 | ww.compose.io). It also uses [**Memcached](http://memcached.org)** for ca | \n73 | mcached.org) for caching and [**Redis](https://redis.io)** for backgr | \n73 | ) for background queues with [Sidekiq](https://github.com/mperham/s | \n73 | background jobs with [delayed_job](https://github.com/collectiv | \n73 | b). We used to employ [Apache Solr](http://lucene.apache.org/sol | \n73 | t have since consolidated on [**Elasticsearch](https://www.elastic.co).** | \n88 | and charging credit cards and **ACH)** with invoicing. | \n90 | p](http://getbootstrap.com), [Turbolinks](https://github.com/turbolink | \n90 | acebook.github.io/react) and [**Browserify](http://browserify.org).** They | \n92 | ls](http://rubyonrails.org), [Sidekiq](https://github.com/mperham/s | \n92 | ithub.com/mperham/sidekiq/), [**Redis](https://redis.io),** and [RMag | \n92 | edis](https://redis.io), and [RMagick](https://github.com/rmagick/r | \n92 | ub.com/rmagick/rmagick) with [ImageMagick](http://www.imagemagick.org/s | \n92 | iles and watermarks images on **S3.** | \n100 | r before we began our move to **microservices,** and so it is baked into our | \n102 | cala micro-service that uses [**Akka](http://akka.io)** for distribu | \n102 | only storage engine, based on **Akka** Persistence, with a small lib | \n102 | e done via a REST API, or via **WebSockets.** People visiting a Live Aucti | \n102 | om/JensRavens/Interstellar), [Starscream](https://github.com/daltoniam | \n102 | om/daltoniam/starscream) and [SwiftyJSON](https://github.com/SwiftyJSO | \n110 | Writer's **frontend** is built with [Ezel.js](http: | \n110 | ter's frontend is built with [**Ezel.js](http://ezeljs.com),** which is | \n110 | s](http://expressjs.com) and [**Browserify](http://browserify.org).** We a | \n110 | //coffeescript.org). Writer's **backend** exposes [REST](https://en.wik | \n112 | ork when you see articles on [**www.artsy.net](https://www.artsy.net),** Face | \n112 | projects such as [Year in Art 2016](https://www.artsy.net/2016-y | \n112 | ear-in-art), and [Year in Art 2015](https://www.artsy.net/articl | \n116 | plications and services into [**AWS** RedShift](https://aws.amazon. | \n116 | ations and services into [AWS RedShift](https://aws.amazon.com/redsh | \n116 | to move data from our several **MongoDB** and PostgreSQL databases to R | \n116 | from our several MongoDB and **PostgreSQL** databases to Redshift via [S3 | \n116 | B and PostgreSQL databases to **Redshift** via [S3](https://aws.amazon.c | \n116 | QL databases to Redshift via [**S3](https://aws.amazon.com/s3).** | \n116 | hese rake tasks shell out to [psql](https://www.postgresql.org/d | \n116 | 9.3/static/sql-copy.html) or [mongo-export](https://docs.mongodb.com/man | \n116 | ervices and upload them to an **S3** bucket, then load those CSV f | \n116 | there by other services) into **Redshift.** If a [Redshift copy](http:// | \n116 | ervices) into **Redshift**. If a [**Redshift** copy](http://docs.aws.amazon. | \n118 | as data from vendors such as [**Salesforce](https://www.salesforce.com)** | \n118 | ps://www.salesforce.com) and [**Sailthru](http://www.sailthru.com).** | \n120 | ite sitemaps, we have our own **Hadoop** cluster configured and manage | \n120 | er configured and managed by [**Cloudera** Manager](https://www.cloudera | \n120 | -manager.html) and running on **EC2.** We leverage [Apache Spark](h | \n120 | http://spark.apache.org) and [Hadoop](https://www.cloudera.com/pro | \n120 | pache-hadoop.html) with some [**Ooozie](http://oozie.apache.org)** wor | \n120 | pipeline that writes data to **S3** also pumps data to HDFS with | \n120 | data to S3 also pumps data to **HDFS** with either Ruby code or [Sqo | \n120 | DFS with either Ruby code or [**Sqoop](http://sqoop.apache.org)** and | \n124 | he time of writing, there are **50** users running 3,**50**0 queries a | \n124 | g, there are 50 users running **3,500** queries a day against Red | \n124 | there are 50 users running 3,**500** queries a day against Redshif | \n124 | g 3,500 queries a day against **Redshift** via Looker. We've found it ex | \n124 | and to create our own session **rollups** from raw pageviews and events | \n124 | ives us in understanding user **behavior.** | \n126 | r more in-depth work, we use [**Jupyter** Notebooks](https://ipython.or | \n126 | ebook.html) to connect to our **Redshift** cluster and by default import | \n126 | ](http://pandas.pydata.org), [**sci-kit** learn](http://scikit-learn.or | \n126 | cikit-learn.org/stable), and [pyplot](http://matplotlib.org/api/py | \n130 | eted our full migration from [Solr](http://lucene.apache.org/sol | \n130 | //lucene.apache.org/solr) to [**Elasticsearch](https://www.elastic.co)** in t | \n130 | //www.elastic.co) in the last **18** months, and now use Elasticse | \n130 | e last 18 months, and now use **Elasticsearch** across all front-ends. This r | \n130 | artwork similarity features. **Elasticsearch** gives us high availability cl | \n134 | resentational_state_transfer)-**ful** HTTP APIs, maintain separate | \n148 | rd to manage, we switched to [**RabbitMQ](https://www.rabbitmq.com)** fo | \n152 | All our recent **AWS** infrastructure is configured | \n152 | .com) workflow toolkit named [Hokusai](https://github.com/artsy/hok | \n152 | s clusters are managed using [Kops](https://github.com/kubernete | \n152 | is reducing our dependence on **Heroku,** giving us more flexibility i | \n156 | large as the daily work for a **thirty-ish** person engineering team, [the | \n\n\n### Spell Checker found issues\n\n#### [_design/artsy_all_services.md](/artsy/artsy.github.io/tree/tech_2017/_design/artsy_all_services.md)\n\nLine | Typo |\n| --- | ------ |\n5 | - force/**eigen** | \n12 | - **Elasticsearch** | \n15 | force + **eigen** talk to graphQL (metaphysics) | \n23 | -  **Lewitt** (Invoicing) | \n25 | - **sandback?** | \n28 | - **gemini** | \n38 | volt -> **gemini** -> s3 | \n38 | volt -> gemini -> **s3** | \n41 | olt + radiation -> impulse -> **sendgrid** | \n49 | fulcrum talks to **saleforce,** ga, mongo, sailthru | \n49 | fulcrum talks to saleforce, **ga,** mongo, sailthru | \n49 | lcrum talks to saleforce, ga, **mongo,** sailthru | \n49 | alks to saleforce, ga, mongo, **sailthru** | \n50 | fulcrum -> **aws** s3 -> redshift -> looker | \n50 | fulcrum -> aws **s3** -> redshift -> looker | \n50 | fulcrum -> aws s3 -> **redshift** -> looker | \n51 | fulcrum -> causality **api** -> redshift | \n51 | fulcrum -> causality api -> **redshift** | \n54 | **Jupyter** Notebooks + Looker -> Looker | \n57 | **Hadoop** Cluster -> Spark jobs -> S3 - | \n57 | doop Cluster -> Spark jobs -> **S3** -> Gravity | \n#### [_drafts/artsy-engineering-culture-2017.md](/artsy/artsy.github.io/tree/tech_2017/_drafts/artsy-engineering-culture-2017.md)\n\nLine | Typo |\n| --- | ------ |\n16 | By the end of **2016,** almost every major front-end | \n16 | e in the open, from developer **PRs** to QA. This post was also wri | \n18 | lestones. This is done using [**ZenHub](https://www.zenhub.com),** and | \n24 | he default branch and all the **PRs** are made to master. Once a PR | \n28 | neering team used IRC, but in **2015** we switched to Slack and enco | \n28 | ny. We're now averaging about **16,000** Slack messages a day insi | \n28 | We're now averaging about 16,**000** Slack messages a day inside A | \n40 | evelopers and other people at **artsy(specialists,** designers, produ | \n#### [_posts/2016-03-28-artsy-engineering-organization-stack.markdown](/artsy/artsy.github.io/tree/tech_2017/_posts/2016-03-28-artsy-engineering-organization-stack.markdown)\n\nLine | Typo |\n| --- | ------ |\n12 | Artsy has now grown past **140** team members and our Engineer | \n12 | ring organization is a nimble **25.** We've recently performed a l | \n12 | ng [\"The Secret(s) to Company Re-Orgs\"](https://www.artsy.net/artic | \n18 | lace. Our growing database of **350,000** images of art, architectu | \n18 | . Our growing database of 350,**000** images of art, architecture, | \n18 | , architecture, and design by **50,000** artists spans historical, | \n18 | rchitecture, and design by 50,**000** artists spans historical, mod | \n22 | Artsy has **3** businesses: _Listings_, _Mark | \n26 | **Marketplace**: In **2015** Artsy expanded into hosting c | \n28 | arts and culture audience. In **2015** we debuted our first sponsore | \n28 | eature on Artsy, a [series of **11** educational short films about | \n28 | Biennale in partnership with UBS](https://www.artsy.net/venice | \n32 | d Key Performance Indicators (**KPIs)** for each business. For examp | \n32 | ss. For example, _churn_ is a **KPI** for the Listings business - a | \n36 | sinesses and inherit the same **KPIs.** | \n42 | **Collector **GMV**:** GMV stands for _Gross Merc | \n42 | **Collector **GMV****: **GMV** stands for _Gross Merchandisi | \n#### [_posts/2016-08-09-the-tech-behind-live-auction-integration.markdown](/artsy/artsy.github.io/tree/tech_2017/_posts/2016-08-09-the-tech-behind-live-auction-integration.markdown)\n\nLine | Typo |\n| --- | ------ |\n11 | our Live Auction Integration (**LAI)** product. It allows people to | \n15 | **LAI** raised challenges that were n | \n24 | he architecture and UX of the **LAI** product were optimized for th | \n44 | ## The iOS native app: **Eigen** | \n46 | n to our engineering team as [Eigen](https://github.com/artsy/eig | \n46 | tsy/eigen), a touch-optimized **LAI** experience was coded in Swift | \n50 | system over a bidirectional [WebSocket](https://en.wikipedia.org/wik | \n54 | ece of software delivered for **LAI** was a new auction state manag | \n54 | , and hosts the bidirectional **WebSocket** API. | \n56 | eveloped in Scala, using the [Akka](http://doc.akka.io/docs/akka | \n56 | nly storage engine, based on [**Akka** Persistence](http://doc.akka. | \n58 | Lastly, Causality has an [**Akka** HTTP](http://doc.akka.io/docs | \n58 | html)-based API layer, with a **WebSocket** server implemented using [Akk | \n58 | ket server implemented using [**Akka** Streams](http://doc.akka.io/d | \n58 | hed across the cluster using [**Akka** Distributed Pub/Sub](http://d | \n58 | and they are merged into the **WebSocket** outflow. | \n62 | gy. The work of preparing our **preexisting** tech for LAI involved widespr | \n62 | ring our preexisting tech for **LAI** involved widespread modificat | \n62 | e sale, as well as a reliable **handoff** of responsibility from these | \n62 | of responsibility from these **preexisting** front- and back-end services | \n64 | ons team, to ensure that this **handoff** functioned smoothly under var | \n64 | e delicate refactoring of our **preexisting** tooling, which we will take o | \n68 | In the process of **architecting** our LAI product, we had to ma | \n68 | e process of architecting our **LAI** product, we had to make some | \n#### [_posts/2017-03-05-artsy-technology-stack-2017.md](/artsy/artsy.github.io/tree/tech_2017/_posts/2017-03-05-artsy-technology-stack-2017.md)\n\nLine | Typo |\n| --- | ------ |\n12 | Artsy was [launched in **2012** as the \"Art Genome Project\"]( | \n14 | By **2014** we had 230,000 works of art f | \n14 | By 2014 we had **230,000** works of art from 600 mus | \n14 | By 2014 we had 230,**000** works of art from 600 museums | \n14 | had 230,000 works of art from **600** museums and institutions and | \n14 | cial galleries, bringing over **80,000** works for sale and partne | \n14 | l galleries, bringing over 80,**000** works for sale and partnershi | \n14 | or sale and partnerships with **37** art fairs and a handful of be | \n14 | ns. That year collectors from **82** countries inquired on over $5 | \n14 | 2 countries inquired on over $**5.5B** of art. | \n16 | By **2015** we doubled our \"for sale\" inv | \n16 | ale\" inventory and aggregated **4,000** of the world's leading ga | \n16 | e\" inventory and aggregated 4,**000** of the world's leading galler | \n16 | world's leading galleries and **60** art fairs. We also launched t | \n18 | Finally, in **2016** we, again, doubled our paid g | \n18 | g editorial traffic ballooned **320%.** We also launched a platform | \n21 | # The Artsy Business in **2017** | \n23 | Artsy in **2017** is a very wide platform and i | \n35 | The Artsy team is now **166** employees across three office | \n35 | gineering organization is now **28** engineers, including 4 leads, | \n35 | s now 28 engineers, including **4** leads, 3 directors and a CTO. | \n35 | engineers, including 4 leads, **3** directors and a CTO. In this | \n47 | In **2016,** we [updated the Engineering | \n49 | re product teams used to have **2** separate sub-teams of enginee | \n49 | eers, they've now merged into **1.** | \n67 | you see today when you go to [**www.artsy.net](https://artsy.net)** is a webs | \n67 | net) is a website built with [**Ezel.js](http://ezeljs.com),** which is | \n67 | s](http://expressjs.com) and [**Browserify](http://browserify.org).** We u | \n67 | he combined app is hosted on [**Heroku](http://heroku.com)** and uses | \n67 | (http://heroku.com) and uses [**Redis](http://redis.io)** for caching | \n67 | ages, are served from [Amazon **S3](http://aws.amazon.com/s3)** vi | \n67 | //aws.amazon.com/s3) via the [**CloudFront** CDN](http://aws.amazon.com/cl | \n67 | n.com/s3) via the [CloudFront CDN](http://aws.amazon.com/cloudf | \n71 | You can also find Artsy on [**Alexa](http://alexa.artsy.net)** and | \n71 | ), which are both open-source **Node.js** applications. There is also a | \n73 | y JSON. The API is hosted on [**AWS** OpsWorks](http://aws.amazon.c | \n73 | ON. The API is hosted on [AWS OpsWorks](http://aws.amazon.com/opswor | \n73 | retrieves data from several [**MongoDB](http://www.mongodb.com)** data | \n73 | ww.compose.io). It also uses [**Memcached](http://memcached.org)** for ca | \n73 | mcached.org) for caching and [**Redis](https://redis.io)** for backgr | \n73 | ) for background queues with [Sidekiq](https://github.com/mperham/s | \n73 | background jobs with [delayed_job](https://github.com/collectiv | \n73 | b). We used to employ [Apache Solr](http://lucene.apache.org/sol | \n73 | t have since consolidated on [**Elasticsearch](https://www.elastic.co).** | \n88 | and charging credit cards and **ACH)** with invoicing. | \n90 | p](http://getbootstrap.com), [Turbolinks](https://github.com/turbolink | \n90 | acebook.github.io/react) and [**Browserify](http://browserify.org).** They | \n92 | ls](http://rubyonrails.org), [Sidekiq](https://github.com/mperham/s | \n92 | ithub.com/mperham/sidekiq/), [**Redis](https://redis.io),** and [RMag | \n92 | edis](https://redis.io), and [RMagick](https://github.com/rmagick/r | \n92 | ub.com/rmagick/rmagick) with [ImageMagick](http://www.imagemagick.org/s | \n92 | iles and watermarks images on **S3.** | \n100 | r before we began our move to **microservices,** and so it is baked into our | \n102 | cala micro-service that uses [**Akka](http://akka.io)** for distribu | \n102 | only storage engine, based on **Akka** Persistence, with a small lib | \n102 | e done via a REST API, or via **WebSockets.** People visiting a Live Aucti | \n102 | om/JensRavens/Interstellar), [Starscream](https://github.com/daltoniam | \n102 | om/daltoniam/starscream) and [SwiftyJSON](https://github.com/SwiftyJSO | \n110 | Writer's **frontend** is built with [Ezel.js](http: | \n110 | ter's frontend is built with [**Ezel.js](http://ezeljs.com),** which is | \n110 | s](http://expressjs.com) and [**Browserify](http://browserify.org).** We a | \n110 | //coffeescript.org). Writer's **backend** exposes [REST](https://en.wik | \n112 | ork when you see articles on [**www.artsy.net](https://www.artsy.net),** Face | \n112 | projects such as [Year in Art 2016](https://www.artsy.net/2016-y | \n112 | ear-in-art), and [Year in Art 2015](https://www.artsy.net/articl | \n116 | plications and services into [**AWS** RedShift](https://aws.amazon. | \n116 | ations and services into [AWS RedShift](https://aws.amazon.com/redsh | \n116 | to move data from our several **MongoDB** and PostgreSQL databases to R | \n116 | from our several MongoDB and **PostgreSQL** databases to Redshift via [S3 | \n116 | B and PostgreSQL databases to **Redshift** via [S3](https://aws.amazon.c | \n116 | QL databases to Redshift via [**S3](https://aws.amazon.com/s3).** | \n116 | hese rake tasks shell out to [psql](https://www.postgresql.org/d | \n116 | 9.3/static/sql-copy.html) or [mongo-export](https://docs.mongodb.com/man | \n116 | ervices and upload them to an **S3** bucket, then load those CSV f | \n116 | there by other services) into **Redshift.** If a [Redshift copy](http:// | \n116 | ervices) into **Redshift**. If a [**Redshift** copy](http://docs.aws.amazon. | \n118 | as data from vendors such as [**Salesforce](https://www.salesforce.com)** | \n118 | ps://www.salesforce.com) and [**Sailthru](http://www.sailthru.com).** | \n120 | ite sitemaps, we have our own **Hadoop** cluster configured and manage | \n120 | er configured and managed by [**Cloudera** Manager](https://www.cloudera | \n120 | -manager.html) and running on **EC2.** We leverage [Apache Spark](h | \n120 | http://spark.apache.org) and [Hadoop](https://www.cloudera.com/pro | \n120 | pache-hadoop.html) with some [**Ooozie](http://oozie.apache.org)** wor | \n120 | pipeline that writes data to **S3** also pumps data to HDFS with | \n120 | data to S3 also pumps data to **HDFS** with either Ruby code or [Sqo | \n120 | DFS with either Ruby code or [**Sqoop](http://sqoop.apache.org)** and | \n124 | he time of writing, there are **50** users running 3,**50**0 queries a | \n124 | g, there are 50 users running **3,500** queries a day against Red | \n124 | there are 50 users running 3,**500** queries a day against Redshif | \n124 | g 3,500 queries a day against **Redshift** via Looker. We've found it ex | \n124 | and to create our own session **rollups** from raw pageviews and events | \n124 | ives us in understanding user **behavior.** | \n126 | r more in-depth work, we use [**Jupyter** Notebooks](https://ipython.or | \n126 | ebook.html) to connect to our **Redshift** cluster and by default import | \n126 | ](http://pandas.pydata.org), [**sci-kit** learn](http://scikit-learn.or | \n126 | cikit-learn.org/stable), and [pyplot](http://matplotlib.org/api/py | \n130 | eted our full migration from [Solr](http://lucene.apache.org/sol | \n130 | //lucene.apache.org/solr) to [**Elasticsearch](https://www.elastic.co)** in t | \n130 | //www.elastic.co) in the last **18** months, and now use Elasticse | \n130 | e last 18 months, and now use **Elasticsearch** across all front-ends. This r | \n130 | artwork similarity features. **Elasticsearch** gives us high availability cl | \n134 | resentational_state_transfer)-**ful** HTTP APIs, maintain separate | \n148 | rd to manage, we switched to [**RabbitMQ](https://www.rabbitmq.com)** fo | \n152 | All our recent **AWS** infrastructure is configured | \n152 | .com) workflow toolkit named [Hokusai](https://github.com/artsy/hok | \n152 | s clusters are managed using [Kops](https://github.com/kubernete | \n152 | is reducing our dependence on **Heroku,** giving us more flexibility i | \n156 | large as the daily work for a **thirty-ish** person engineering team, [the | \n\n\n### Spell Checker found issues\n\n#### [_design/artsy_all_services.md](/artsy/artsy.github.io/tree/tech_2017/_design/artsy_all_services.md)\n\nLine | Typo |\n| --- | ------ |\n5 | - force/**eigen** | \n12 | - **Elasticsearch** | \n15 | force + **eigen** talk to graphQL (metaphysics) | \n23 | -  **Lewitt** (Invoicing) | \n25 | - **sandback?** | \n28 | - **gemini** | \n38 | volt -> **gemini** -> s3 | \n38 | volt -> gemini -> **s3** | \n41 | olt + radiation -> impulse -> **sendgrid** | \n49 | fulcrum talks to **saleforce,** ga, mongo, sailthru | \n49 | fulcrum talks to saleforce, **ga,** mongo, sailthru | \n49 | lcrum talks to saleforce, ga, **mongo,** sailthru | \n49 | alks to saleforce, ga, mongo, **sailthru** | \n50 | fulcrum -> **aws** s3 -> redshift -> looker | \n50 | fulcrum -> aws **s3** -> redshift -> looker | \n50 | fulcrum -> aws s3 -> **redshift** -> looker | \n51 | fulcrum -> causality **api** -> redshift | \n51 | fulcrum -> causality api -> **redshift** | \n54 | **Jupyter** Notebooks + Looker -> Looker | \n57 | **Hadoop** Cluster -> Spark jobs -> S3 - | \n57 | doop Cluster -> Spark jobs -> **S3** -> Gravity | \n#### [_drafts/artsy-engineering-culture-2017.md](/artsy/artsy.github.io/tree/tech_2017/_drafts/artsy-engineering-culture-2017.md)\n\nLine | Typo |\n| --- | ------ |\n16 | By the end of **2016,** almost every major front-end | \n16 | e in the open, from developer **PRs** to QA. This post was also wri | \n18 | lestones. This is done using [**ZenHub](https://www.zenhub.com),** and | \n24 | he default branch and all the **PRs** are made to master. Once a PR | \n28 | neering team used IRC, but in **2015** we switched to Slack and enco | \n28 | ny. We're now averaging about **16,000** Slack messages a day insi | \n28 | We're now averaging about 16,**000** Slack messages a day inside A | \n40 | evelopers and other people at **artsy(specialists,** designers, produ | \n#### [_posts/2016-03-28-artsy-engineering-organization-stack.markdown](/artsy/artsy.github.io/tree/tech_2017/_posts/2016-03-28-artsy-engineering-organization-stack.markdown)\n\nLine | Typo |\n| --- | ------ |\n12 | Artsy has now grown past **140** team members and our Engineer | \n12 | ring organization is a nimble **25.** We've recently performed a l | \n12 | ng [\"The Secret(s) to Company Re-Orgs\"](https://www.artsy.net/artic | \n18 | lace. Our growing database of **350,000** images of art, architectu | \n18 | . Our growing database of 350,**000** images of art, architecture, | \n18 | , architecture, and design by **50,000** artists spans historical, | \n18 | rchitecture, and design by 50,**000** artists spans historical, mod | \n22 | Artsy has **3** businesses: _Listings_, _Mark | \n26 | **Marketplace**: In **2015** Artsy expanded into hosting c | \n28 | arts and culture audience. In **2015** we debuted our first sponsore | \n28 | eature on Artsy, a [series of **11** educational short films about | \n28 | Biennale in partnership with UBS](https://www.artsy.net/venice | \n32 | d Key Performance Indicators (**KPIs)** for each business. For examp | \n32 | ss. For example, _churn_ is a **KPI** for the Listings business - a | \n36 | sinesses and inherit the same **KPIs.** | \n42 | **Collector **GMV**:** GMV stands for _Gross Merc | \n42 | **Collector **GMV****: **GMV** stands for _Gross Merchandisi | \n#### [_posts/2016-08-09-the-tech-behind-live-auction-integration.markdown](/artsy/artsy.github.io/tree/tech_2017/_posts/2016-08-09-the-tech-behind-live-auction-integration.markdown)\n\nLine | Typo |\n| --- | ------ |\n11 | our Live Auction Integration (**LAI)** product. It allows people to | \n15 | **LAI** raised challenges that were n | \n24 | he architecture and UX of the **LAI** product were optimized for th | \n44 | ## The iOS native app: **Eigen** | \n46 | n to our engineering team as [Eigen](https://github.com/artsy/eig | \n46 | tsy/eigen), a touch-optimized **LAI** experience was coded in Swift | \n50 | system over a bidirectional [WebSocket](https://en.wikipedia.org/wik | \n54 | ece of software delivered for **LAI** was a new auction state manag | \n54 | , and hosts the bidirectional **WebSocket** API. | \n56 | eveloped in Scala, using the [Akka](http://doc.akka.io/docs/akka | \n56 | nly storage engine, based on [**Akka** Persistence](http://doc.akka. | \n58 | Lastly, Causality has an [**Akka** HTTP](http://doc.akka.io/docs | \n58 | html)-based API layer, with a **WebSocket** server implemented using [Akk | \n58 | ket server implemented using [**Akka** Streams](http://doc.akka.io/d | \n58 | hed across the cluster using [**Akka** Distributed Pub/Sub](http://d | \n58 | and they are merged into the **WebSocket** outflow. | \n62 | gy. The work of preparing our **preexisting** tech for LAI involved widespr | \n62 | ring our preexisting tech for **LAI** involved widespread modificat | \n62 | e sale, as well as a reliable **handoff** of responsibility from these | \n62 | of responsibility from these **preexisting** front- and back-end services | \n64 | ons team, to ensure that this **handoff** functioned smoothly under var | \n64 | e delicate refactoring of our **preexisting** tooling, which we will take o | \n68 | In the process of **architecting** our LAI product, we had to ma | \n68 | e process of architecting our **LAI** product, we had to make some | \n#### [_posts/2017-03-05-artsy-technology-stack-2017.md](/artsy/artsy.github.io/tree/tech_2017/_posts/2017-03-05-artsy-technology-stack-2017.md)\n\nLine | Typo |\n| --- | ------ |\n12 | Artsy was [launched in **2012** as the \"Art Genome Project\"]( | \n14 | By **2014** we had 230,000 works of art f | \n14 | By 2014 we had **230,000** works of art from 600 mus | \n14 | By 2014 we had 230,**000** works of art from 600 museums | \n14 | had 230,000 works of art from **600** museums and institutions and | \n14 | cial galleries, bringing over **80,000** works for sale and partne | \n14 | l galleries, bringing over 80,**000** works for sale and partnershi | \n14 | or sale and partnerships with **37** art fairs and a handful of be | \n14 | ns. That year collectors from **82** countries inquired on over $5 | \n14 | 2 countries inquired on over $**5.5B** of art. | \n16 | By **2015** we doubled our \"for sale\" inv | \n16 | ale\" inventory and aggregated **4,000** of the world's leading ga | \n16 | e\" inventory and aggregated 4,**000** of the world's leading galler | \n16 | world's leading galleries and **60** art fairs. We also launched t | \n18 | Finally, in **2016** we, again, doubled our paid g | \n18 | g editorial traffic ballooned **320%.** We also launched a platform | \n21 | # The Artsy Business in **2017** | \n23 | Artsy in **2017** is a very wide platform and i | \n35 | The Artsy team is now **166** employees across three office | \n35 | gineering organization is now **28** engineers, including 4 leads, | \n35 | s now 28 engineers, including **4** leads, 3 directors and a CTO. | \n35 | engineers, including 4 leads, **3** directors and a CTO. In this | \n47 | In **2016,** we [updated the Engineering | \n49 | re product teams used to have **2** separate sub-teams of enginee | \n49 | eers, they've now merged into **1.** | \n67 | you see today when you go to [**www.artsy.net](https://artsy.net)** is a webs | \n67 | net) is a website built with [**Ezel.js](http://ezeljs.com),** which is | \n67 | s](http://expressjs.com) and [**Browserify](http://browserify.org).** We u | \n67 | he combined app is hosted on [**Heroku](http://heroku.com)** and uses | \n67 | (http://heroku.com) and uses [**Redis](http://redis.io)** for caching | \n67 | ages, are served from [Amazon **S3](http://aws.amazon.com/s3)** vi | \n67 | //aws.amazon.com/s3) via the [**CloudFront** CDN](http://aws.amazon.com/cl | \n67 | n.com/s3) via the [CloudFront CDN](http://aws.amazon.com/cloudf | \n71 | You can also find Artsy on [**Alexa](http://alexa.artsy.net)** and | \n71 | ), which are both open-source **Node.js** applications. There is also a | \n73 | y JSON. The API is hosted on [**AWS** OpsWorks](http://aws.amazon.c | \n73 | ON. The API is hosted on [AWS OpsWorks](http://aws.amazon.com/opswor | \n73 | retrieves data from several [**MongoDB](http://www.mongodb.com)** data | \n73 | ww.compose.io). It also uses [**Memcached](http://memcached.org)** for ca | \n73 | mcached.org) for caching and [**Redis](https://redis.io)** for backgr | \n73 | ) for background queues with [Sidekiq](https://github.com/mperham/s | \n73 | background jobs with [delayed_job](https://github.com/collectiv | \n73 | b). We used to employ [Apache Solr](http://lucene.apache.org/sol | \n73 | t have since consolidated on [**Elasticsearch](https://www.elastic.co).** | \n88 | and charging credit cards and **ACH)** with invoicing. | \n90 | p](http://getbootstrap.com), [Turbolinks](https://github.com/turbolink | \n90 | acebook.github.io/react) and [**Browserify](http://browserify.org).** They | \n92 | ls](http://rubyonrails.org), [Sidekiq](https://github.com/mperham/s | \n92 | ithub.com/mperham/sidekiq/), [**Redis](https://redis.io),** and [RMag | \n92 | edis](https://redis.io), and [RMagick](https://github.com/rmagick/r | \n92 | ub.com/rmagick/rmagick) with [ImageMagick](http://www.imagemagick.org/s | \n92 | iles and watermarks images on **S3.** | \n100 | r before we began our move to **microservices,** and so it is baked into our | \n102 | cala micro-service that uses [**Akka](http://akka.io)** for distribu | \n102 | only storage engine, based on **Akka** Persistence, with a small lib | \n102 | e done via a REST API, or via **WebSockets.** People visiting a Live Aucti | \n102 | om/JensRavens/Interstellar), [Starscream](https://github.com/daltoniam | \n102 | om/daltoniam/starscream) and [SwiftyJSON](https://github.com/SwiftyJSO | \n110 | Writer's **frontend** is built with [Ezel.js](http: | \n110 | ter's frontend is built with [**Ezel.js](http://ezeljs.com),** which is | \n110 | s](http://expressjs.com) and [**Browserify](http://browserify.org).** We a | \n110 | //coffeescript.org). Writer's **backend** exposes [REST](https://en.wik | \n112 | ork when you see articles on [**www.artsy.net](https://www.artsy.net),** Face | \n112 | projects such as [Year in Art 2016](https://www.artsy.net/2016-y | \n112 | ear-in-art), and [Year in Art 2015](https://www.artsy.net/articl | \n116 | plications and services into [**AWS** RedShift](https://aws.amazon. | \n116 | ations and services into [AWS RedShift](https://aws.amazon.com/redsh | \n116 | to move data from our several **MongoDB** and PostgreSQL databases to R | \n116 | from our several MongoDB and **PostgreSQL** databases to Redshift via [S3 | \n116 | B and PostgreSQL databases to **Redshift** via [S3](https://aws.amazon.c | \n116 | QL databases to Redshift via [**S3](https://aws.amazon.com/s3).** | \n116 | hese rake tasks shell out to [psql](https://www.postgresql.org/d | \n116 | 9.3/static/sql-copy.html) or [mongo-export](https://docs.mongodb.com/man | \n116 | ervices and upload them to an **S3** bucket, then load those CSV f | \n116 | there by other services) into **Redshift.** If a [Redshift copy](http:// | \n116 | ervices) into **Redshift**. If a [**Redshift** copy](http://docs.aws.amazon. | \n118 | as data from vendors such as [**Salesforce](https://www.salesforce.com)** | \n118 | ps://www.salesforce.com) and [**Sailthru](http://www.sailthru.com).** | \n120 | ite sitemaps, we have our own **Hadoop** cluster configured and manage | \n120 | er configured and managed by [**Cloudera** Manager](https://www.cloudera | \n120 | -manager.html) and running on **EC2.** We leverage [Apache Spark](h | \n120 | http://spark.apache.org) and [Hadoop](https://www.cloudera.com/pro | \n120 | pache-hadoop.html) with some [**Ooozie](http://oozie.apache.org)** wor | \n120 | pipeline that writes data to **S3** also pumps data to HDFS with | \n120 | data to S3 also pumps data to **HDFS** with either Ruby code or [Sqo | \n120 | DFS with either Ruby code or [**Sqoop](http://sqoop.apache.org)** and | \n124 | he time of writing, there are **50** users running 3,**50**0 queries a | \n124 | g, there are 50 users running **3,500** queries a day against Red | \n124 | there are 50 users running 3,**500** queries a day against Redshif | \n124 | g 3,500 queries a day against **Redshift** via Looker. We've found it ex | \n124 | and to create our own session **rollups** from raw pageviews and events | \n124 | ives us in understanding user **behavior.** | \n126 | r more in-depth work, we use [**Jupyter** Notebooks](https://ipython.or | \n126 | ebook.html) to connect to our **Redshift** cluster and by default import | \n126 | ](http://pandas.pydata.org), [**sci-kit** learn](http://scikit-learn.or | \n126 | cikit-learn.org/stable), and [pyplot](http://matplotlib.org/api/py | \n130 | eted our full migration from [Solr](http://lucene.apache.org/sol | \n130 | //lucene.apache.org/solr) to [**Elasticsearch](https://www.elastic.co)** in t | \n130 | //www.elastic.co) in the last **18** months, and now use Elasticse | \n130 | e last 18 months, and now use **Elasticsearch** across all front-ends. This r | \n130 | artwork similarity features. **Elasticsearch** gives us high availability cl | \n134 | resentational_state_transfer)-**ful** HTTP APIs, maintain separate | \n148 | rd to manage, we switched to [**RabbitMQ](https://www.rabbitmq.com)** fo | \n152 | All our recent **AWS** infrastructure is configured | \n152 | .com) workflow toolkit named [Hokusai](https://github.com/artsy/hok | \n152 | s clusters are managed using [Kops](https://github.com/kubernete | \n152 | is reducing our dependence on **Heroku,** giving us more flexibility i | \n156 | large as the daily work for a **thirty-ish** person engineering team, [the | \n\n\n<p align=\"right\" data-meta=\"generated_by_danger\">\n  Generated by :no_entry_sign: <a href=\"http://danger.systems/\">Danger</a>\n</p>\n",
          "createdAt": "2017-03-07T23:16:21Z",
          "author": { "login": "ArtsyOpenSource", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Some ideas for expanded sections:\r\n* criteria for extracting services (borrowing from the Playbook)\r\n* using `master`/`release` branches and CI for automating both staging and production deployments\r\n* adding style and protocol tools (like Rubocop and Danger) to CI",
          "createdAt": "2017-03-08T16:32:27Z",
          "author": { "login": "joeyAghion", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "The switches from Heat to Spark (Data Processing), and Solr to Elasticsearch (Search), should perhaps be included.",
          "createdAt": "2017-03-08T17:38:40Z",
          "author": { "login": "cavvia", "__typename": "User" },
          "reactions": {
            "totalCount": 3,
            "nodes": [
              {
                "user": { "login": "dblock", "__typename": "User" },
                "__typename": "Reaction"
              },
              {
                "user": { "login": "izakp", "__typename": "User" },
                "__typename": "Reaction"
              },
              {
                "user": { "login": "starsirius", "__typename": "User" },
                "__typename": "Reaction"
              }
            ],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "@joeyAghion agreed\r\n@cavvia think you can add a paragraph on heat/spark?",
          "createdAt": "2017-03-09T22:45:25Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "@orta I've added a _Provisioning_ section to cover our work with containerisation, and a _Search_ section which mentions our use of Elasticsearch. I also added a note to the paragraph on Spark which was already there.",
          "createdAt": "2017-03-10T11:53:56Z",
          "author": { "login": "cavvia", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "<3 thanks @cavvia ",
          "createdAt": "2017-03-11T23:12:34Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "I'd like to help out with this post a bit. Can we maybe commit to `source` the Danger and unrelated changes and rebase this? ",
          "createdAt": "2017-03-27T01:48:05Z",
          "author": { "login": "dblock", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Whatever we do now, the post is long enough that it won't show in the diff - but sure, I can rebase it ",
          "createdAt": "2017-03-27T10:17:37Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Done & looks like I was wrong, wonder what the algorithm for that is",
          "createdAt": "2017-03-27T10:31:55Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "This is looking pretty ready. Maybe it's OK to keep this mostly tech stack-focused and drop the to-do sections around office/remote work and diversity? I'm not saying we shouldn't _also_ have posts about those; just that this post would be an odd place to find them.",
          "createdAt": "2017-04-04T14:43:43Z",
          "author": { "login": "joeyAghion", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "I vote +1 on dropping the culture of work and making a separate post for that in order to expedite this.\r\n\r\nI would say though that we need *pictures* in this post. Maybe something that shows our entire architecture?  ",
          "createdAt": "2017-04-04T15:03:12Z",
          "author": { "login": "dblock", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Happy to do another https://twitter.com/dblockdotorg/status/844239639171010560 ;)",
          "createdAt": "2017-04-04T15:22:59Z",
          "author": { "login": "izakp", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "I've started adding some images, depending on how much time I get in the evening I'll look at some larger illustrations\r\n\r\n![screen shot 2017-04-05 at 09 08 29](https://cloud.githubusercontent.com/assets/49038/24695875/7889f6ca-19df-11e7-983e-16297ab28a1b.png)\r\n\r\nanyone got something specific they'd want to see?",
          "createdAt": "2017-04-05T08:10:03Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "@orta I'd like to see here an architecture diagram that paints a big picture of what Artsy looks like under the hood.",
          "createdAt": "2017-04-05T11:47:09Z",
          "author": { "login": "dblock", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "🚢 ",
          "createdAt": "2017-04-14T18:10:16Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 41,
      "nodes": [
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "We're 29 total engineers, including 4 leads, 3 directors and a CTO.\r\n\r\nHow's this? Needs links all over the place.\r\n\r\n_Artsy was launched in 2012 as the Art Genome Project. By 2014 we had 230,000 works of art from 600 museums and institutions and launched our first business, a subscription service for commercial galleries with over 80,000 works for sale and partnerships with 37 art fairs and a handful of benefit auctions. That year collectors from 82 countries inquired on over $5.5B of art. By 2015 we doubled our for sale inventory and aggregated 4,000 of the world's leading galleries and 60 art fairs. We also launched two new businesses: commercial auctions and online media. Lastly, in 2016 we doubled our paid gallery network size to become the largest gallery network in the world and grew to become the most-read online art publication in the world as our highly engaging editorial traffic ballooned 320% and as we launched a live auction and a consignments service with the major auction houses._\r\n",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-03-07T14:14:01Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "I love this.",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-03-07T22:29:13Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "If maybe _technical and human_, since we're talking organizational structures.",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-03-07T14:15:25Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 3,
            "nodes": [
              {
                "body": "This is a good place to insert a diagram, we don't expect people to refer to an old article and most commenters have told me we lack pictures in posts like these ;)",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-03-07T14:16:36Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "I would add a summary, _We continue to have a Product Engineering organization that focuses on delivering value to customers with the help of self-sufficient and vertical product teams, and a Platform Engineering organization that enables horizontal efficiency, common infrastructure and practices._ ",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-03-07T14:21:07Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "aye, I'll go and make a bunch of SVGs once this is all feeling closer to the last 10% 👍 ",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-03-07T22:40:33Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "I think rather than down-playing I would say something on a more positive note, like _consolidating_. \r\n\r\nFix tense, _the transition ... so close that it *didn't*_",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-03-07T14:17:56Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "I think we need Artsy Architecture first and foremost, with a picture, before we dive into the tech stack.",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-03-07T14:21:47Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "Lots of changes here ... ",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-03-07T14:22:32Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Rather than exhaustive comments I made a PR to your PR here: https://github.com/artsy/artsy.github.io/pull/326\r\n\r\nFeel free to take what you will from that.\r\n\r\nI'm happy to fill in other sections where needed too. And maybe @wrgoldstein and/or @cavvia could take a crack at the \"Data Pipeline\" section.",
                "author": { "login": "joeyAghion", "__typename": "User" },
                "createdAt": "2017-03-07T18:38:22Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Before Analytics we want a _Data Pipeline_, explaining how data flows through the system.",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-03-07T14:23:27Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "I would go business by business and highlight services that are specific for the business and services that are generic for everybody to use. Notably after reading this I should be able to pick how our live bidding platform works end-to-end.",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-03-07T14:24:32Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "We no longer use GCS, don't we?",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-03-12T14:41:04Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "That's what I was saying: \"We _used to_ employ..., but have since...\"",
                "author": { "login": "joeyAghion", "__typename": "User" },
                "createdAt": "2017-03-13T15:47:17Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "A few edits: https://github.com/artsy/artsy.github.io/pull/328",
                "author": { "login": "izakp", "__typename": "User" },
                "createdAt": "2017-03-13T15:18:33Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "I'd call this section \"Infrastructure\" or \"Operations\"",
                "author": { "login": "izakp", "__typename": "User" },
                "createdAt": "2017-03-13T15:19:19Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "I originally called it 'Infrastructure' but then I realized there is another section of the post called [Artsy Tech Infrastructure](https://github.com/artsy/artsy.github.io/pull/325/files/f1045cd88638139aea52e5ea781816f7c32e7f28#diff-0f5c8166d5e492246bc3f659661acf81R24). 'Operations' might be better.",
                "author": { "login": "cavvia", "__typename": "User" },
                "createdAt": "2017-03-13T15:27:41Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Radiation is the system that manages conversation between different parties. It receives messages via API or Email, finds or creates the conversation based on email's recipients and forwards them to the proper emails/users in that conversation. It's doesn't know anything about the context of the emails/messages which makes it a generic system for any type of conversation. Currently it's used to manage conversations started by an inquiry on an artwork.",
                "author": { "login": "ashkan18", "__typename": "User" },
                "createdAt": "2017-03-16T13:06:57Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "We might want to mention [Artsy-EventService](https://github.com/artsy/artsy-eventservice). We use this Ruby Gem in few of our services to publish events to RabbitMQ. Using this gem we make sure events being posted to our event stream are in a specific pattern which makes it easier for the consumers where they don't have to deal with different message formats for different topics.",
                "author": { "login": "ashkan18", "__typename": "User" },
                "createdAt": "2017-03-16T13:10:24Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "In some of our apps we have switched to PR based deployments via CIs. In this case, on Artsy's repository, we would have `master` and `release` branches. `master` is the default branch and all the PRs from forked repos are made to `master`. Once a PR is reviewed and merged to `master`, after a successful run of tests in CI, it will automatically get deployed on _staging_.\r\nOnce we are ready to deploy to production, we create a PR from `master` to `release` branch, this way we know what commits are going to be deployed in this release. Once this PR is merged, CI will automatically deploy `release` branch to _production_.",
                "author": { "login": "ashkan18", "__typename": "User" },
                "createdAt": "2017-03-16T13:14:53Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> This CMS allows our partners to upload Show, Fair, Artist and Artwork metadata to our API.\r\n\r\nPartners upload fair booths instead of fair to CMS. So maybe \"This CMS allows our partners to upload shows, fair booths, artists, and artwork metadata to our API.\"\r\n\r\n\"In addition to maximizing their presence on Artsy, CMS also provides a contextual way for partners to manage their conversations with collectors.\"",
                "author": { "login": "starsirius", "__typename": "User" },
                "createdAt": "2017-03-17T14:59:45Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "\"This CMS is based on stable, mature technologies like [Rails](http://rubyonrails.org/), [Bootstrap](http://getbootstrap.com/), [Turbolinks](https://github.com/turbolinks/turbolinks) and [CoffeeScript](http://coffeescript.org/), and gradually adopts modern client-side technologies like [React](https://facebook.github.io/react/) and [Browserify](http://browserify.org).\"",
                "author": { "login": "starsirius", "__typename": "User" },
                "createdAt": "2017-03-17T15:13:57Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Maybe we can also add a few sentences about Kinetic and Watt.",
                "author": { "login": "starsirius", "__typename": "User" },
                "createdAt": "2017-03-17T15:15:10Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "`...via CI.`\r\n\r\n\r\n`Once merged, CI will automatically...`",
                "author": { "login": "joeyAghion", "__typename": "User" },
                "createdAt": "2017-04-04T14:40:43Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "+`Boston`\r\n\r\n`...shied away from hiring regardless of location.`",
                "author": { "login": "joeyAghion", "__typename": "User" },
                "createdAt": "2017-04-04T14:41:04Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> and manage~~r~~ gallery shows",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-04-05T09:16:52Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> It~~'s~~ doesn't assume anything",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-04-05T09:18:39Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> We've built our own, lean editorial platform\r\n\r\nIs that comma necessary?",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-04-05T09:21:38Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "> we have ~~own~~ **our** own Hadoop cluster",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-04-05T09:22:36Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 4,
            "nodes": [
              {
                "body": "> where most work happens on forks\r\n\r\nThat’s really dependent on the team. Don’t know if it needs to be included at all, but if there is reason for it then it might need amending.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-04-05T09:37:01Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "We thought about separating a \"how we work\" post from the architecture in 2017. That has my +1.",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-04-05T11:48:31Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Makes sense 👍 ",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-04-07T08:35:59Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "OK, killed all of this section, and moved them to a draft post",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-13T20:28:44Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 4,
            "nodes": [
              {
                "body": "> ~~has~~ now **has** contributors",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-04-05T09:39:28Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "All of the Amsterdam office feels left out.",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-04-05T09:40:14Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "I feel like we're pretty anchored in Amsterdam indeed :)",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-04-05T11:49:00Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "⚓️ :boom:",
                "author": { "login": "alloy", "__typename": "User" },
                "createdAt": "2017-04-07T08:35:40Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "Do we also want to add Apple TV's shows app? (seeing as it's kinda \"home\" as well?)",
                "author": { "login": "mennenia", "__typename": "User" },
                "createdAt": "2017-04-10T16:27:32Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "I think so 👍 added",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-13T20:30:57Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "Maybe worth mentioning that \"practice\" is the way to group engineers working with the same technologies across product teams to facilitate knowledge sharing and avoid redundant efforts. Just in case people haven't red the other post.",
                "author": { "login": "oxaudo", "__typename": "User" },
                "createdAt": "2017-04-11T17:35:42Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Agree, this is long enough that it'd be a pretty big distraction - added",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-13T20:33:23Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "Maybe worth mentioning that we are using 2 versions of the `api` currently with most of contemporary code relying on `v2` where  older apps still use `v1`.",
                "author": { "login": "oxaudo", "__typename": "User" },
                "createdAt": "2017-04-11T17:41:04Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Cool, I've touched on this, think its a nice distinction to be able to mention developers.artsy.net also - thanks",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-13T20:36:45Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "`Collectors inquire on artworks and engage in a conversation with a partner` -> `Collectors inquire on artworks and engage in conversations with partners` We hope that they talk to multiple partners:)",
                "author": { "login": "oxaudo", "__typename": "User" },
                "createdAt": "2017-04-11T17:47:52Z",
                "reactions": {
                  "totalCount": 1,
                  "nodes": [
                    {
                      "user": { "login": "orta", "__typename": "User" },
                      "__typename": "Reaction"
                    }
                  ],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "`worth moving the logic around an auction into a separate micro-service.` -> `worth moving the logic around auctions into a separate micro-service.` We talk about auctions in plural in the whole paragraph.",
                "author": { "login": "oxaudo", "__typename": "User" },
                "createdAt": "2017-04-11T17:50:51Z",
                "reactions": {
                  "totalCount": 1,
                  "nodes": [
                    {
                      "user": { "login": "orta", "__typename": "User" },
                      "__typename": "Reaction"
                    }
                  ],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "I found this sentance hard to follow. Maybe break it into two. Something like\r\n```\r\nWe've completed our full migration from [Solr](http://lucene.apache.org/solr) to [Elasticsearch](https://www.elastic.co) in the last 18 months.  Elasticsearch is now used everywhere across artsy.net, from all of our artwork filter interfaces through to our real-time artwork similarity feature. It gives us high availability clustering features out of the box and easy horizontal scaling.\r\n```",
                "author": { "login": "oxaudo", "__typename": "User" },
                "createdAt": "2017-04-11T18:03:00Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Agreed, chopped up and lightly re-touched",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-13T20:38:52Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "I find `interesting events` to be strange here. Interesting in which sense? Maybe something like `Recently we've begun publishing a stream of data events from our core systems that other systems can consume.`",
                "author": { "login": "oxaudo", "__typename": "User" },
                "createdAt": "2017-04-11T18:08:03Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Perfect, agreed!",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-13T20:39:27Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "Maybe worth mentioning that most of the channels shared between developers and other people at artsy(specialists, designers, product people, etc) which encourages collaboration and integration of art+technology as well. Also maybe worth mentioning that we have dedicated help channels per product team and well as company wide help channel.",
                "author": { "login": "oxaudo", "__typename": "User" },
                "createdAt": "2017-04-11T18:14:26Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "As I've moved this into a draft post, I've inlined the comment too - I think it's a good one for the article",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-13T20:40:06Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 4,
            "nodes": [
              {
                "body": "From a user standpoint, I wonder if it makes sense to conceptualize Listings and Auctions as one broad marketplace -- all of the top dealers on one cohesive platform, knit together by the Art Genome Project. The value prop to both users and partners is pretty much the same.",
                "author": { "login": "acjay", "__typename": "User" },
                "createdAt": "2017-04-14T05:57:04Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Aye, from a user standpoint I agree - but we're talking about businesses inside Artsy, which at least right now we treat as separate",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-14T13:36:40Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Yeah. I guess maybe I think it would help to drill from the outside in. Like, if this began with something like:\r\n\r\n> Artsy is a very wide platform and it can be challenging to characterize. But when you boil it down to its essence, Artsy offers information and a marketplace. Our written content and fair coverage keep people informed about the art world, and The Art Genome powers our tools for exploration. Through our partnerships with the major player in the art market, galleries and auction houses, we offer our users a unified platform for buying and selling art.\r\n\r\nI guess that's how I think of it. And maybe someone like Graeme or Remy could do even better. But I think a lead in like that could help the audience relate from how they might know us via our user touch points to the more behind-the-scenes aspects of how we operationalize our business and product development, which I think you characterize nicely here.",
                "author": { "login": "acjay", "__typename": "User" },
                "createdAt": "2017-04-14T14:22:05Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Yeah, I like this as a lead into the splits 👍 \r\n\r\n> # The Artsy Business in 2017\r\n>\r\n> Artsy in 2017 is a very wide platform and it can be challenging to characterize simply. But when you boil it down to its essence, Artsy offers information and a marketplace. Our written content and fair coverage keep people informed about the art world, and the Art Genome powers our tools for exploration. Through our partnerships with the major player in the art market, galleries and auction houses, we offer our users a unified platform for buying and selling art.\r\n>\r\n> Internally we consider Artsy to have three businesses: _Auctions_, _Content_ and _Listings_.\r\n",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-14T14:36:15Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 3,
            "nodes": [
              {
                "body": "Team Nav puts us at 171!",
                "author": { "login": "acjay", "__typename": "User" },
                "createdAt": "2017-04-14T05:57:53Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "That number includes external contributors for Editorial/Genoming, but I bet this number has changed anyway - I'll ping Elisa and grab the latest, good thinkin",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-14T13:38:25Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Looks like it's 166, updated - hah I changed this number 3 times in 2 minutes as different numbers came",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-14T14:36:39Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "\"Redi3s\" => \"Redis\"",
                "author": { "login": "acjay", "__typename": "User" },
                "createdAt": "2017-04-14T06:00:23Z",
                "reactions": {
                  "totalCount": 1,
                  "nodes": [
                    {
                      "user": { "login": "orta", "__typename": "User" },
                      "__typename": "Reaction"
                    }
                  ],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "Spelling on the Alexa URL",
                "author": { "login": "acjay", "__typename": "User" },
                "createdAt": "2017-04-14T06:01:15Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Thanks, I should consider getting Danger to check all links that they don't 404",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-14T13:40:02Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "Does Sidekiq bear mentioning?",
                "author": { "login": "acjay", "__typename": "User" },
                "createdAt": "2017-04-14T06:02:10Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "aye, I think so - added ",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-14T14:41:32Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "\"Most modern code for both the website and the iOS app use an orchestration layer [to streamline their data fetching] ...\"?",
                "author": { "login": "acjay", "__typename": "User" },
                "createdAt": "2017-04-14T06:03:18Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Agreed, added and expanded 👍 ",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-14T13:56:11Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "It might bear mentioning that ES6 has largely obviated the advantages we saw in using CoffeeScript, and that we're beginning to use Typescript on top of that.",
                "author": { "login": "acjay", "__typename": "User" },
                "createdAt": "2017-04-14T06:05:18Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 4,
            "nodes": [
              {
                "body": "I wouldn't necessarily agree that charity auctions are simpler -- they often have complicated logistics, live events, one-off requests, use our kiosks and live displays, offer \"experience\" lots that aren't art, have less experienced partners (it's not their core competency), and so on. Plus, the fact that they could be the charity's biggest fundraiser for the year makes them high stakes.\r\n\r\nI'd maybe say that we began our work with auctions doing the occasional benefit auctions for charities. Most of these auctions are online-only, timed sales. The initial version of our auction systems came together before we began our move to microservices, and so it is baked into our core API. Last year, we launched a live auction integration product to allow users to bid on works at commercial sales at the actual auction house sale rooms. The real-time requirements of this system required a rethinking of how we process our bids. ",
                "author": { "login": "acjay", "__typename": "User" },
                "createdAt": "2017-04-14T06:17:37Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Charity auctions _were_ simpler back when we started the auctions business, (and the online aspect was non-critical for them) we just have a lot more features and opportunities now so they are backed up with a similar level of complexity and expectations :D\r\n\r\nBut yours flows much nicer, so let's swap it out\r\n",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-14T14:09:52Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "I was mostly just reading and thinking, \"would one of our ops people or a benefit partner agree?\", haha.",
                "author": { "login": "acjay", "__typename": "User" },
                "createdAt": "2017-04-14T14:25:18Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "haha :D",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-14T14:37:08Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "I'd drop the Distributed Pub/Sub part. It is indeed connected with the Web Socket part, but it's more related to how state changes are broadcast across our Akka Cluster, so that they can then be forwarded on to active Web Socket subscribers. But that seems like it may be getting into the weeds a bit.",
                "author": { "login": "acjay", "__typename": "User" },
                "createdAt": "2017-04-14T06:20:17Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Done 👍 awesome",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-04-14T14:15:31Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        }
      ],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA5NTQzMDUw",
    "number": 326,
    "title": "@orta: Offer some additions/modifications about Artsy's platform in 2017",
    "author": { "login": "joeyAghion", "__typename": "User" },
    "additions": 23,
    "deletions": 14,
    "createdAt": "2017-03-07T18:36:00Z",
    "closedAt": "2017-03-07T22:25:54Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/326",
    "body": "I took your PR as an invitation to expand on the platform-related sections directly. Feel free to merge _or_ borrow from this into your own post _or_ ignore completely.",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "joeyAghion", "__typename": "User" },
        { "login": "orta", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "Yep, this looks like a solid improvement - thanks a lot @joeyAghion ",
          "createdAt": "2017-03-07T22:25:47Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTA5NTUyMjI5",
    "number": 327,
    "title": "add data pipeline and analytics sections",
    "author": { "login": "wrgoldstein", "__typename": "User" },
    "additions": 9,
    "deletions": 2,
    "createdAt": "2017-03-07T19:26:11Z",
    "closedAt": "2017-03-09T22:28:46Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/327",
    "body": "Data pipeline addition to https://github.com/artsy/artsy.github.io/pull/326, let me know if this is too terse. ",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 3,
      "nodes": [
        { "login": "wrgoldstein", "__typename": "User" },
        { "login": "dblock", "__typename": "User" },
        { "login": "orta", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 3,
      "nodes": [
        {
          "body": "On Looker I would add that we use it to empower everyone who's not an engineer to have data access.",
          "createdAt": "2017-03-07T20:32:14Z",
          "author": { "login": "dblock", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "I agree with all of db's feedback, this is a great start, would love to see those 👍 \r\n\r\nThanks!",
          "createdAt": "2017-03-07T22:27:50Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Thanks for the feedback! Took another stab.",
          "createdAt": "2017-03-09T19:12:51Z",
          "author": { "login": "wrgoldstein", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 3,
      "nodes": [
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Maybe say a little bit about what those rake tasks actually do? Like is it custom code? Some system? And why?",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-03-07T20:29:53Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "I would add something general somewhere like _Data generally flows from consumer applications and services to Redshift._",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-03-07T20:30:59Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "like -> such as ..., and I would definitely add a lot more examples of what we do",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-03-07T20:31:39Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        }
      ],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTEwNDYxMzk1",
    "number": 328,
    "title": "Provisioning --> Operations",
    "author": { "login": "izakp", "__typename": "User" },
    "additions": 2,
    "deletions": 2,
    "createdAt": "2017-03-13T17:50:55Z",
    "closedAt": "2017-03-13T22:34:03Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/328",
    "body": "A few edits to this paragraph:\r\n- \"Provisioning\" --> \"Operations\"\r\n- A first sentence on Terraform and the effects of its adoption\r\n- \"We started developing...\" as Hokusai is still yet to be a v1 release\r\n- \"...in order to manage a containerised workflow, CI and deployment to Kubernetes\" as Hokusai aims to cover the whole shebang - dev / test / CI / artifacts and deployment\r\n",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "izakp", "__typename": "User" },
        { "login": "orta", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "Great 👍 ",
          "createdAt": "2017-03-13T22:33:41Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTEyNDc4MDkw",
    "number": 331,
    "title": "Add Bearden to OSS list",
    "author": { "login": "jonallured", "__typename": "User" },
    "additions": 7,
    "deletions": 2,
    "createdAt": "2017-03-24T15:14:50Z",
    "closedAt": "2017-03-24T15:23:02Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/331",
    "body": "",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "jonallured", "__typename": "User" },
        { "login": "ashkan18", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "💯 ",
          "createdAt": "2017-03-24T15:22:58Z",
          "author": { "login": "ashkan18", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTEyNjA3Njcz",
    "number": 332,
    "title": "lunrjs Search",
    "author": { "login": "ashfurrow", "__typename": "User" },
    "additions": 74,
    "deletions": 99,
    "createdAt": "2017-03-25T23:43:27Z",
    "closedAt": "2017-03-27T10:32:31Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/332",
    "body": "Fixes https://github.com/artsy/artsy.github.io/issues/329\r\n\r\nSo we're using [a fork](https://github.com/ashfurrow/jekyll-lunr-js-search/tree/v2) of [this library](https://github.com/slashdotdash/jekyll-lunr-js-search), because the library requires Jekyll 3 (as far as I can tell) and there are no semantic tags available to reference in our Gemfile. I [added Jekyll 2-style posts](https://github.com/ashfurrow/jekyll-lunr-js-search/commit/367d165be6db8fa1440a9d95dda18527c98063d1#diff-7afa659b015f4715a4978fc3949eba71R135), and there appeared to be some weirdness with [emoji in Jekyll](https://github.com/olivernn/lunr.js/issues/243) being index in lunr.js so I filtered them out of the index [in the first way that Google suggested](https://github.com/ashfurrow/jekyll-lunr-js-search/commit/f39837bf2fc7a1b2ac408b2d1386acefbb65c219) which looks terrible but works.\r\n\r\nThe design needs a little work for sure. Here's a before/after shot:\r\n\r\n![screen shot 2017-03-25 at 7 29 31 pm](https://cloud.githubusercontent.com/assets/498212/24327004/ca272e9e-1192-11e7-9d36-ef2550707add.png)\r\n![screen shot 2017-03-25 at 7 28 40 pm](https://cloud.githubusercontent.com/assets/498212/24327005/ca27782c-1192-11e7-885c-0eab69beaed0.png)\r\n\r\nThe downside compared to Google Site search is that we don't get a preview of the post, due to limitations in lunr.js. I think that's okay, but wanted to surface it for discussion.",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "ashfurrow", "__typename": "User" },
        { "login": "orta", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 3,
      "nodes": [
        {
          "body": "Looks perfect - thanks! Only a design request change, copy the design of the archives - http://artsy.github.io/blog/archives/\r\n\r\nand instead of the year have something like \"search results for Eigen\"\r\n\r\nThen this is a 👍 ",
          "createdAt": "2017-03-26T07:36:49Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Cool, updated this. Had to update the fork, added some documentation there about the modifications I've made. Here's a preview:\r\n\r\n![screen shot 2017-03-26 at 11 39 03 am](https://cloud.githubusercontent.com/assets/498212/24332678/fb17cb40-1218-11e7-9e27-3278811f0fa7.png)\r\n\r\nThere are no results displayed while the search index is being downloaded (~3MB) so we should verify the UX is okay after deploying. Oh, and the search box _on the search page_ is search-as-you-type, which is pretty cool.",
          "createdAt": "2017-03-26T15:46:07Z",
          "author": { "login": "ashfurrow", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Alright, looks good - nice work on the README for your fork 👍 ",
          "createdAt": "2017-03-27T10:32:28Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTEyNzEyMDI0",
    "number": 333,
    "title": "Update dangerfile",
    "author": { "login": "orta", "__typename": "User" },
    "additions": 48,
    "deletions": 20,
    "createdAt": "2017-03-27T10:20:38Z",
    "closedAt": "2017-03-27T10:23:12Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/333",
    "body": "Pulled from #325 ",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 1,
      "nodes": [{ "login": "orta", "__typename": "User" }],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTEyNzU1NDc2",
    "number": 334,
    "title": "Major revisions across the board.",
    "author": { "login": "dblock", "__typename": "User" },
    "additions": 67,
    "deletions": 127,
    "createdAt": "2017-03-27T14:16:43Z",
    "closedAt": "2017-03-27T14:35:27Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/334",
    "body": "I went top-to-bottom and iterated on everything inserting some big TODOs. I think these should be assigned to people for editing.",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 3,
      "nodes": [
        { "login": "dblock", "__typename": "User" },
        { "login": "orta", "__typename": "User" },
        { "login": "anandaroop", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 1,
      "nodes": [
        {
          "body": "Great - yeah, this is solid \r\n👍 ",
          "createdAt": "2017-03-27T14:35:17Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 1,
      "nodes": [
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "I might replace Browserify with Webpack here. That's _probably_ a better indication of where we're heading with asset/build management.\r\n\r\nCould also add a note about how we're adopting modern JS as a first-class citizen inside Rails apps, both with third-party approaches as well as with an eye to this landing in [core](https://github.com/rails/webpacker) very soon.",
                "author": { "login": "anandaroop", "__typename": "User" },
                "createdAt": "2017-03-27T14:37:32Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Aye, and FWIW, on [reaction-force](https://github.com/artsy/reaction-force) (which is probably GMV's most bleeding edge web project) we moved to [fuse-box](https://github.com/fuse-box/fuse-box) and shipped a few commits already",
                "author": { "login": "orta", "__typename": "User" },
                "createdAt": "2017-03-27T16:04:07Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        }
      ],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTEzODAwMzE1",
    "number": 335,
    "title": "@cavia => Generating sitemaps with Apache Spark.",
    "author": { "login": "dblock", "__typename": "User" },
    "additions": 228,
    "deletions": 0,
    "createdAt": "2017-04-02T00:40:34Z",
    "closedAt": "2017-04-03T17:43:29Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/335",
    "body": "It would take too much work to open-source this part of cinder, so I'd rather not. Would love some comments from @joeyAghion @cavvia @izakp, etc. ",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 5,
      "nodes": [
        { "login": "dblock", "__typename": "User" },
        { "login": "cavvia", "__typename": "User" },
        { "login": "joeyAghion", "__typename": "User" },
        { "login": "izakp", "__typename": "User" },
        { "login": "kanaabe", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 3,
      "nodes": [
        {
          "body": "Looks good to me, though I would probably cut that section on writing sitemaps.",
          "createdAt": "2017-04-03T09:55:08Z",
          "author": { "login": "cavvia", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "I've made some updates, keeping the writing sitemaps part because it otherwise feels a little incomplete, especially for a beginner reader.",
          "createdAt": "2017-04-03T12:10:38Z",
          "author": { "login": "dblock", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Thanks everyone for your feedback, shipping.",
          "createdAt": "2017-04-03T17:43:26Z",
          "author": { "login": "dblock", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 16,
      "nodes": [
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "pluralize schema here as 'schemas', or if you're feeling esoteric, 'schemata'.",
                "author": { "login": "cavvia", "__typename": "User" },
                "createdAt": "2017-04-03T09:47:56Z",
                "reactions": {
                  "totalCount": 1,
                  "nodes": [
                    {
                      "user": { "login": "dblock", "__typename": "User" },
                      "__typename": "Reaction"
                    }
                  ],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "`date` is not defined here, i think you mean `year`.",
                "author": { "login": "cavvia", "__typename": "User" },
                "createdAt": "2017-04-03T09:49:46Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Nice catch. Scala > Ruby :)",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-04-03T11:58:14Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "i'm not sure this snippet adds much... i would probably cut it. it's not referred to below.",
                "author": { "login": "cavvia", "__typename": "User" },
                "createdAt": "2017-04-03T09:51:30Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "I'll keep it since for a noob it's not immediately obvious that you can just iterate over the result.",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-04-03T11:59:39Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "since the `Elem` is not used, you would usually just refer to it with the wildcard `_` in the case statement:\r\n\r\n```scala\r\ncase (key: String, _) =>\r\n```",
                "author": { "login": "cavvia", "__typename": "User" },
                "createdAt": "2017-04-03T09:53:23Z",
                "reactions": {
                  "totalCount": 1,
                  "nodes": [
                    {
                      "user": { "login": "dblock", "__typename": "User" },
                      "__typename": "Reaction"
                    }
                  ],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "`...big data.\"`\r\n\r\nI thought we don't publicize these exact counts?",
                "author": { "login": "joeyAghion", "__typename": "User" },
                "createdAt": "2017-04-03T16:01:00Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Yeah, I'll use the media stats numbers although they are close and anyone who has a computer can get our exact public counts ;)",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-04-03T17:37:24Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "`[artsy.net](https://www.artsy.net)`",
                "author": { "login": "joeyAghion", "__typename": "User" },
                "createdAt": "2017-04-03T16:01:22Z",
                "reactions": {
                  "totalCount": 1,
                  "nodes": [
                    {
                      "user": { "login": "dblock", "__typename": "User" },
                      "__typename": "Reaction"
                    }
                  ],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Maybe a bit more explicit here:\r\n\"We previously loaded a vast majority of our data from many data sources...\" \r\n\"Having all the data from our multiple databases readily available...\"",
                "author": { "login": "izakp", "__typename": "User" },
                "createdAt": "2017-04-03T16:04:18Z",
                "reactions": {
                  "totalCount": 1,
                  "nodes": [
                    {
                      "user": { "login": "dblock", "__typename": "User" },
                      "__typename": "Reaction"
                    }
                  ],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "This will send readers on an ill-advised research tangent. Maybe clarify that \"We even used HAML, the same templating system we used to render web pages, to render sitemaps.\"",
                "author": { "login": "joeyAghion", "__typename": "User" },
                "createdAt": "2017-04-03T16:07:16Z",
                "reactions": {
                  "totalCount": 1,
                  "nodes": [
                    {
                      "user": { "login": "dblock", "__typename": "User" },
                      "__typename": "Reaction"
                    }
                  ],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 2,
            "nodes": [
              {
                "body": "`we use GraphQL` could link to some of our past articles or repos on that topic.\r\n\r\nI feel the pain described here, but maybe it's not as interesting as just \"became unsustainable as our data grew.\"",
                "author": { "login": "joeyAghion", "__typename": "User" },
                "createdAt": "2017-04-03T16:12:16Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "Will make minor edits.",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-04-03T17:39:56Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Nice intro! This gets me pumped to read the rest 💯 ",
                "author": { "login": "kanaabe", "__typename": "User" },
                "createdAt": "2017-04-03T16:13:18Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 3,
            "nodes": [
              {
                "body": "I couldn't find a good blog post to link to from \"we started using Apache Spark\" but I wish it existed.\r\n\r\n`...from many sources`\r\n\r\n`...for a simple need like sitemaps.`",
                "author": { "login": "joeyAghion", "__typename": "User" },
                "createdAt": "2017-04-03T16:14:04Z",
                "reactions": {
                  "totalCount": 1,
                  "nodes": [
                    {
                      "user": { "login": "dblock", "__typename": "User" },
                      "__typename": "Reaction"
                    }
                  ],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "It's never too late to write a Spark started post ;) cc: @cavvia ",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-04-03T17:41:07Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              },
              {
                "body": "ha well yes, i should have written that one.",
                "author": { "login": "cavvia", "__typename": "User" },
                "createdAt": "2017-04-03T17:51:47Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "You could add `...across worker nodes that already have their subset of data locally.`",
                "author": { "login": "joeyAghion", "__typename": "User" },
                "createdAt": "2017-04-03T16:14:52Z",
                "reactions": {
                  "totalCount": 1,
                  "nodes": [
                    {
                      "user": { "login": "dblock", "__typename": "User" },
                      "__typename": "Reaction"
                    }
                  ],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Hive is more the language than the source, so maybe `We use Hive to define schemas for all data stored in HDFS.`",
                "author": { "login": "joeyAghion", "__typename": "User" },
                "createdAt": "2017-04-03T16:15:42Z",
                "reactions": {
                  "totalCount": 1,
                  "nodes": [
                    {
                      "user": { "login": "dblock", "__typename": "User" },
                      "__typename": "Reaction"
                    }
                  ],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "`sitemap spec` could link to https://www.sitemaps.org/protocol.html.",
                "author": { "login": "joeyAghion", "__typename": "User" },
                "createdAt": "2017-04-03T16:16:41Z",
                "reactions": {
                  "totalCount": 1,
                  "nodes": [
                    {
                      "user": { "login": "dblock", "__typename": "User" },
                      "__typename": "Reaction"
                    }
                  ],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "`continues to grow exponentially` isn't quite accurate. I think `continues to grow` would be compelling enough.",
                "author": { "login": "joeyAghion", "__typename": "User" },
                "createdAt": "2017-04-03T16:18:30Z",
                "reactions": {
                  "totalCount": 1,
                  "nodes": [
                    {
                      "user": { "login": "dblock", "__typename": "User" },
                      "__typename": "Reaction"
                    }
                  ],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        },
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "`...also see fewer 404 errors during crawling...` might be unclear. Maybe explain that generating real-time allows them to reflect our live data more accurately?",
                "author": { "login": "joeyAghion", "__typename": "User" },
                "createdAt": "2017-04-03T16:19:21Z",
                "reactions": {
                  "totalCount": 1,
                  "nodes": [
                    {
                      "user": { "login": "dblock", "__typename": "User" },
                      "__typename": "Reaction"
                    }
                  ],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        }
      ],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTE0NDI2NTQ1",
    "number": 337,
    "title": "Adds a post on match",
    "author": { "login": "orta", "__typename": "User" },
    "additions": 215,
    "deletions": 0,
    "createdAt": "2017-04-05T17:05:27Z",
    "closedAt": "2017-04-06T09:09:01Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/337",
    "body": "/cc @KrauseFx (does this feel correct to you? )",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 4,
      "nodes": [
        { "login": "orta", "__typename": "User" },
        { "login": "ArtsyOpenSource", "__typename": "User" },
        { "login": "alloy", "__typename": "User" },
        { "login": "jonallured", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 2,
      "nodes": [
        {
          "body": "<!--\n  0 Errors\n  0 Warnings\n  0 Messages\n  2 Markdowns\n-->\n\n### Proselint found issues\n\n#### [_posts/2017-04-05-what-is-fastlane-match.markdown](/artsy/artsy.github.io/tree/match/_posts/2017-04-05-what-is-fastlane-match.markdown)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n10 | Substitute 'damn' every time you're inclined to write 'very;' your editor will delete it and the writing will be just as it should be. | warning\n13 | Inconsistent spacing after period (1 vs. 2 spaces). | warning\n193 | No paragraph should start with a 'But'. | warning\n\n\n### Spell Checker found issues\n\n#### [_posts/2017-04-05-what-is-fastlane-match.markdown](/artsy/artsy.github.io/tree/match/_posts/2017-04-05-what-is-fastlane-match.markdown)\n\nLine | Typo |\n| --- | ------ |\n9 | who values their time, we use **fastlane.** [fastlane][] is a suite | \n9 | their time, we use fastlane. [**fastlane][]** is a suite | \n31 | core ideas in match into our F**astfile.** It looked like this: | \n171 | generate one of these through Key**chain,** and the entire team would | \n172 | e this. We keep ours in team [1Pa**ssword][].** It needs to be used consi | \n182 | p and the certificate in step 3. **For** development, all devices | \n182 | pment, all devices in the dev cen**ter** are also added. | \n190 | It would take at about 30 **minutes** to do this if I knew | \n190 | d through the web interface + Key**chain.** | \n193 | a beta once a month or two (_eek**!** sorry..._) then it feels lik | \n197 | Xcode updates, [WWD**R** updates][wwrd] and certificat | \n197 | Xcode updates, [WWDR updates][wwr**d]** and certificate expirations | \n199 | So would I move [Eig**en][]** to match? Maybe, next time | \n\n\n<p align=\"right\" data-meta=\"generated_by_danger\">\n  Generated by :no_entry_sign: <a href=\"http://danger.systems/\">Danger</a>\n</p>\n",
          "createdAt": "2017-04-05T17:08:49Z",
          "author": { "login": "ArtsyOpenSource", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "👍 ",
          "createdAt": "2017-04-06T15:45:04Z",
          "author": { "login": "alloy", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTE0NDQxODk2",
    "number": 338,
    "title": "@orta => Add publishing section",
    "author": { "login": "kanaabe", "__typename": "User" },
    "additions": 6,
    "deletions": 2,
    "createdAt": "2017-04-05T18:24:51Z",
    "closedAt": "2017-04-06T08:33:20Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/338",
    "body": "",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 4,
      "nodes": [
        { "login": "kanaabe", "__typename": "User" },
        { "login": "ArtsyOpenSource", "__typename": "User" },
        { "login": "orta", "__typename": "User" },
        { "login": "dblock", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 5,
      "nodes": [
        {
          "body": "<!--\n  0 Errors\n  0 Warnings\n  0 Messages\n  2 Markdowns\n-->\n\n### Proselint found issues\n\n#### [_posts/2017-03-05-artsy-technology-stack-2017.md](/artsy/artsy.github.io/tree/publishing-tech/_posts/2017-03-05-artsy-technology-stack-2017.md)\n\nLine | Message | Severity |\n| --- | ----- | ----- |\n27 | Substitute 'damn' every time you're inclined to write 'very;' your editor will delete it and the writing will be just as it should be. Found once elsewhere. | warning\n169 | Annotation left in text. | warning\n\n\n### Spell Checker found issues\n\n#### [_posts/2017-03-05-artsy-technology-stack-2017.md](/artsy/artsy.github.io/tree/publishing-tech/_posts/2017-03-05-artsy-technology-stack-2017.md)\n\nLine | Typo |\n| --- | ------ |\n12 | Artsy was [launched in **2012** as the \"Art Genome Project\"]( | \n14 | By **2014** we had 230,000 works of art f | \n14 | By 2014 we had **230,000** works of art from 600 mus | \n14 | By 2014 we had 230,**000** works of art from 600 museums | \n14 | had 230,000 works of art from **600** museums and institutions and | \n14 | cial galleries, bringing over **80,000** works for sale and partne | \n14 | l galleries, bringing over 80,**000** works for sale and partnershi | \n14 | or sale and partnerships with **37** art fairs and a handful of be | \n14 | ns. That year collectors from **82** countries inquired on over $5 | \n14 | 2 countries inquired on over $**5.5B** of art. | \n16 | By **2015** we doubled our \"for sale\" inv | \n16 | ale\" inventory and aggregated **4,000** of the world's leading ga | \n16 | e\" inventory and aggregated 4,**000** of the world's leading galler | \n16 | world's leading galleries and **60** art fairs. We also launched t | \n18 | Finally, in **2016** we, again, doubled our paid g | \n18 | g editorial traffic ballooned **320%.** We also launched a platform | \n21 | # The Artsy Business in **2017** | \n23 | In **2017** Artsy has three businesses at | \n29 | The Artsy team is now **160** employees across three office | \n29 | gineering organization is now **29** engineers, including 4 leads, | \n29 | s now 29 engineers, including **4** leads, 3 directors and a CTO. | \n29 | engineers, including 4 leads, **3** directors and a CTO. In this | \n40 | In **2016,** we [updated the Engineering | \n40 | re product teams used to have **2** separate sub-teams of enginee | \n40 | eers, they've now merged into **1.** | \n59 | you see today when you go to [**www.artsy.net](https://artsy.net)** is a webs | \n59 | net) is a website built with [**Ezel.js](http://ezeljs.com),** which is | \n59 | s](http://expressjs.com) and [**Browserify](http://browserify.org).** We u | \n59 | he combined app is hosted on [**Heroku](http://heroku.com)** and uses | \n59 | (http://heroku.com) and uses [**Redis](http://redis.io)** for caching | \n59 | ages, are served from [Amazon **S3](http://aws.amazon.com/s3)** vi | \n59 | //aws.amazon.com/s3) via the [**CloudFront** CDN](http://aws.amazon.com/cl | \n59 | n.com/s3) via the [CloudFront CDN](http://aws.amazon.com/cloudf | \n63 | You can also find Artsy on [**Alexa](http://alexa.atsy.net)** and [ | \n63 | ), which are both open-source **Node.js** applications. | \n65 | y JSON. The API is hosted on [**AWS** OpsWorks](http://aws.amazon.c | \n65 | ON. The API is hosted on [AWS OpsWorks](http://aws.amazon.com/opswor | \n65 | retrieves data from several [**MongoDB](http://www.mongodb.com)** data | \n65 | ww.compose.io). It also uses [**Memcached](http://memcached.org)** for ca | \n65 | mcached.org) for caching and [**Redis](https://redis.io)** for backgr | \n65 | background jobs with [delayed_job](https://github.com/collectiv | \n65 | b). We used to employ [Apache Solr](http://lucene.apache.org/sol | \n65 | t have since consolidated on [**Elasticsearch](https://www.elastic.co).** | \n75 | and charging credit cards and **ACH)** with invoicing. | \n77 | p](http://getbootstrap.com), [Turbolinks](https://github.com/turbolink | \n77 | acebook.github.io/react) and [**Browserify](http://browserify.org).** They | \n79 | ls](http://rubyonrails.org), [Sidekiq](https://github.com/mperham/s | \n79 | ithub.com/mperham/sidekiq/), [**Redis](https://redis.io),** and [RMag | \n79 | edis](https://redis.io), and [RMagick](https://github.com/rmagick/r | \n79 | ub.com/rmagick/rmagick) with [ImageMagick](http://www.imagemagick.org/s | \n79 | iles and watermarks images on **S3.** | \n87 | lar occurrences. We therefore **modeled** these Auctions inside the cor | \n89 | cala micro-service that uses [**Akka](http://akka.io)** for distribu | \n89 | only storage engine, based on **Akka** Persistence, with a small lib | \n89 | e done via a REST API, or via **WebSockets** powered by Akka Distributed P | \n89 | or via WebSockets powered by **Akka** Distributed Pub/Sub. People v | \n89 | om/JensRavens/Interstellar), [Starscream](https://github.com/daltoniam | \n89 | om/daltoniam/starscream) and [SwiftyJSON](https://github.com/SwiftyJSO | \n97 | Writer's **frontend** is built with [Ezel.js](http: | \n97 | ter's frontend is built with [**Ezel.js](http://ezeljs.com),** which is | \n97 | s](http://expressjs.com) and [**Browserify](http://browserify.org).** We a | \n97 | //coffeescript.org). Writer's **backend** exposes [REST](https://en.wik | \n99 | ork when you see articles on [**www.artsy.net](https://www.artsy.net),** Face | \n99 | projects such as [Year in Art 2016](https://www.artsy.net/2016-y | \n99 | ear-in-art), and [Year in Art 2015](https://www.artsy.net/articl | \n103 | plications and services into [**AWS** RedShift](https://aws.amazon. | \n103 | ations and services into [AWS RedShift](https://aws.amazon.com/redsh | \n103 | to move data from our several **MongoDB** and PostgreSQL databases to R | \n103 | from our several MongoDB and **PostgreSQL** databases to Redshift via [S3 | \n103 | B and PostgreSQL databases to **Redshift** via [S3](https://aws.amazon.c | \n103 | QL databases to Redshift via [**S3](https://aws.amazon.com/s3).** | \n103 | hese rake tasks shell out to [psql](https://www.postgresql.org/d | \n103 | 9.3/static/sql-copy.html) or [mongo-export](https://docs.mongodb.com/man | \n103 | ervices and upload them to an **S3** bucket, then load those CSV f | \n103 | there by other services) into **Redshift.** If a [Redshift copy](http:// | \n103 | ervices) into **Redshift**. If a [**Redshift** copy](http://docs.aws.amazon. | \n105 | as data from vendors such as [**Salesforce](https://www.salesforce.com)** | \n105 | ps://www.salesforce.com) and [**Sailthru](http://www.sailthru.com).** | \n107 | ite sitemaps, we have own own **Hadoop** cluster configured and manage | \n107 | er configured and managed by [**Cloudera** Manager](https://www.cloudera | \n107 | -manager.html) and running on **EC2.** We leverage [Apache Spark](h | \n107 | http://spark.apache.org) and [Hadoop](https://www.cloudera.com/pro | \n107 | pache-hadoop.html) with some [**Ooozie](http://oozie.apache.org)** wor | \n107 | pipeline that writes data to **S3** also pumps data to HDFS with | \n107 | data to S3 also pumps data to **HDFS** with either Ruby code or [Sqo | \n107 | DFS with either Ruby code or [**Sqoop](http://sqoop.apache.org)** and | \n111 | he time of writing, there are **50** users running 3,**50**0 queries a | \n111 | g, there are 50 users running **3,500** queries a day against Red | \n111 | there are 50 users running 3,**500** queries a day against Redshif | \n111 | g 3,500 queries a day against **Redshift** via Looker. We've found it ex | \n111 | and to create our own session **rollups** from raw pageviews and events | \n111 | ives us in understanding user **behavior.** | \n113 | r more in-depth work, we use [**Jupyter** Notebooks](https://ipython.or | \n113 | ebook.html) to connect to our **Redshift** cluster and by default import | \n113 | ](http://pandas.pydata.org), [**sci-kit** learn](http://scikit-learn.or | \n113 | cikit-learn.org/stable), and [pyplot](http://matplotlib.org/api/py | \n117 | eted our full migration from [Solr](http://lucene.apache.org/sol | \n117 | //lucene.apache.org/solr) to [**Elasticsearch](https://www.elastic.co)** in t | \n117 | //www.elastic.co) in the last **18** months, and now use the latte | \n117 | and now use the latter across **artsy.net,** from all our artwork filter | \n117 | e artwork similarity feature. **Elasticsearch** gives us high availability cl | \n121 | resentational_state_transfer)-**ful** HTTP APIs, maintain separate | \n135 | rd to manage, we switched to [**RabbitMQ](https://www.rabbitmq.com)** fo | \n139 | All our recent **AWS** infrastructure is configured | \n139 | .com) workflow toolkit named [Hokusai](https://github.com/artsy/hok | \n139 | s clusters are managed using [Kops](https://github.com/kubernete | \n139 | is reducing our dependence on **Heroku,** giving us more flexibility i | \n145 | By the end of **2016,** almost every major front-end | \n145 | e in the open, from developer **PRs** to QA. This post was also wri | \n147 | lestones. This is done using [**ZenHub](https://www.zenhub.com),** and | \n153 | he default branch and all the **PRs** are made to master. Once a PR | \n157 | neering team used IRC, but in **2015** we switched to Slack and enco | \n157 | ny. We're now averaging about **16,000** Slack messages a day insi | \n157 | We're now averaging about 16,**000** Slack messages a day inside A | \n\n\n<p align=\"right\" data-meta=\"generated_by_danger\">\n  Generated by :no_entry_sign: <a href=\"http://danger.systems/\">Danger</a>\n</p>\n",
          "createdAt": "2017-04-05T18:30:59Z",
          "author": { "login": "ArtsyOpenSource", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Rockin' this is good to go after dB's feedback @kanaabe",
          "createdAt": "2017-04-05T19:50:20Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Rockin' this is good to go after dB's feedback @kanaabe",
          "createdAt": "2017-04-05T19:50:22Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Ok, I only quoted the first \"Writer\", since it looked kind of weird with all of them quoted. Let me know if I should change!",
          "createdAt": "2017-04-05T21:45:49Z",
          "author": { "login": "kanaabe", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Yeah - perfect 👍 ",
          "createdAt": "2017-04-06T08:33:17Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 1,
      "nodes": [
        {
          "comments": {
            "totalCount": 1,
            "nodes": [
              {
                "body": "Maybe quote \"Writer\"?",
                "author": { "login": "dblock", "__typename": "User" },
                "createdAt": "2017-04-05T19:09:10Z",
                "reactions": {
                  "totalCount": 0,
                  "nodes": [],
                  "__typename": "ReactionConnection"
                },
                "__typename": "PullRequestReviewComment"
              }
            ],
            "__typename": "PullRequestReviewCommentConnection"
          },
          "__typename": "PullRequestReviewThread"
        }
      ],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  },
  {
    "id": "MDExOlB1bGxSZXF1ZXN0MTE0NTIxOTc5",
    "number": 339,
    "title": "Proofread README.md",
    "author": { "login": "haujason", "__typename": "User" },
    "additions": 4,
    "deletions": 4,
    "createdAt": "2017-04-06T04:57:49Z",
    "closedAt": "2017-04-06T08:20:09Z",
    "state": "MERGED",
    "url": "https://github.com/artsy/artsy.github.io/pull/339",
    "body": "The apostrophe changes are a matter of formality. It is best to avoid apostrophes for conjunctions, and only use apostrophes for showing possession. E.g. 'Bill's code'.\r\n\r\n'a couple of' -> 'several' - 'couple' is associated with literally two items. This is also a matter or formality.\r\n\r\n'run' -> 'runs' - Typo",
    "reactions": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "ReactionConnection"
    },
    "participants": {
      "totalCount": 2,
      "nodes": [
        { "login": "haujason", "__typename": "User" },
        { "login": "orta", "__typename": "User" }
      ],
      "__typename": "UserConnection"
    },
    "comments": {
      "totalCount": 2,
      "nodes": [
        {
          "body": "Seems 👍 to me",
          "createdAt": "2017-04-06T08:20:03Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        },
        {
          "body": "Thanks",
          "createdAt": "2017-04-06T08:20:07Z",
          "author": { "login": "orta", "__typename": "User" },
          "reactions": {
            "totalCount": 0,
            "nodes": [],
            "__typename": "ReactionConnection"
          },
          "__typename": "IssueComment"
        }
      ],
      "__typename": "IssueCommentConnection"
    },
    "reviewThreads": {
      "totalCount": 0,
      "nodes": [],
      "__typename": "PullRequestReviewThreadConnection"
    },
    "__typename": "PullRequest"
  }
]
